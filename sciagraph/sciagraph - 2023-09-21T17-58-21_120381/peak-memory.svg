<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="2876" onload="init(evt)" viewBox="0 0 1200 2876" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno">
    <!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.-->
    <!--NOTES: -->
    <defs>
        <linearGradient id="background" y1="0" y2="1" x1="0" x2="0">
            <stop stop-color="#eeeeee" offset="5%"/>
            <stop stop-color="#eeeeb0" offset="95%"/>
        </linearGradient>
    </defs>
    <style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style>
    <script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script>
    <rect x="0" y="0" width="100%" height="2876" fill="url(#background)"/>
    <text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Peak tracked memory usage (11195.3 MiB)</text>
    <text id="subtitle" x="50.0000%" y="64.00">⟲ Left/right order has no semantic meaning in this graph ⟲</text>
    <text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text>
    <text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text>
    <text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text>
    <text id="matched" fill="rgb(0,0,0)" x="1190" y="2863.00"> </text>
    <svg id="frames" x="10" width="1180" total_samples="11672808927">
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/conic_solvers/mosek_conif.py:136 (import_solver) (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2190" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2203.50"></text>
        </g>
        <g>
            <title>        import mosek  # noqa F401 (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2212" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2225.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2234" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2247.50"></text>
        </g>
        <g>
            <title> (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2256" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2269.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2278" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2291.50"></text>
        </g>
        <g>
            <title> (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2300" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2313.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2322" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2335.50"></text>
        </g>
        <g>
            <title> (257 MiB, 2.31%)</title>
            <rect x="0.3394%" y="2344" width="2.3109%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="269746176"/>
            <text x="0.5894%" y="2357.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2366" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2379.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2388" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2401.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2410" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2423.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2432" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2445.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/mosek/__init__.py:11 (&lt;module&gt;) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2454" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2467.50"></text>
        </g>
        <g>
            <title>from . import _msk (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2476" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2489.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2498" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2511.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2520" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2533.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2542" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2555.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2564" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2577.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2586" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2599.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2608" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2621.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2630" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2643.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2652" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2665.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:666 (_load_unlocked) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2674" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2687.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2696" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2709.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:565 (module_from_spec) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2718" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2731.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2740" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2753.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:1173 (create_module) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2762" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2775.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2784" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2797.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2806" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2819.50"></text>
        </g>
        <g>
            <title> (256 MiB, 2.30%)</title>
            <rect x="0.3506%" y="2828" width="2.2997%" height="21" fill="rgb(255,227,227)" fg:x="40922483" fg:w="268435456"/>
            <text x="0.6006%" y="2841.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:5 (&lt;module&gt;) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="386" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="399.50">/..</text>
        </g>
        <g>
            <title>from solardatatools.clear_day_detection import ClearDayDetection (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="408" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="421.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="430" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="443.50">&lt;..</text>
        </g>
        <g>
            <title> (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="452" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="465.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="474" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="487.50">&lt;..</text>
        </g>
        <g>
            <title> (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="496" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="509.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="518" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="531.50">&lt;..</text>
        </g>
        <g>
            <title> (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="540" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="553.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="562" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="575.50">&lt;..</text>
        </g>
        <g>
            <title> (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="584" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="597.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="606" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="619.50">&lt;..</text>
        </g>
        <g>
            <title> (279 MiB, 2.51%)</title>
            <rect x="0.1618%" y="628" width="2.5065%" height="21" fill="rgb(255,226,226)" fg:x="18883146" fg:w="292581945"/>
            <text x="0.4118%" y="641.50">..</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:9 (&lt;module&gt;) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="650" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="663.50">/..</text>
        </g>
        <g>
            <title>import cvxpy as cvx (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="672" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="685.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="694" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="707.50">&lt;..</text>
        </g>
        <g>
            <title> (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="716" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="729.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="738" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="751.50">&lt;..</text>
        </g>
        <g>
            <title> (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="760" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="773.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="782" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="795.50">&lt;..</text>
        </g>
        <g>
            <title> (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="804" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="817.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="826" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="839.50">&lt;..</text>
        </g>
        <g>
            <title> (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="848" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="861.50">..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="870" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="883.50">&lt;..</text>
        </g>
        <g>
            <title> (265 MiB, 2.38%)</title>
            <rect x="0.2854%" y="892" width="2.3829%" height="21" fill="rgb(255,226,226)" fg:x="33313674" fg:w="278151417"/>
            <text x="0.5354%" y="905.50">..</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/__init__.py:29 (&lt;module&gt;) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="914" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="927.50"></text>
        </g>
        <g>
            <title>from cvxpy.problems.problem import Problem (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="936" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="949.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="958" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="971.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="980" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="993.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1002" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1015.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1024" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1037.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1046" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1059.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1068" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1081.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1090" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1103.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1112" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1125.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1134" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1147.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1156" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1169.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:37 (&lt;module&gt;) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1178" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1191.50"></text>
        </g>
        <g>
            <title>from cvxpy.reductions import InverseData (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1200" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1213.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1222" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1235.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1244" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1257.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1266" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1279.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1288" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1301.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1310" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1323.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1332" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1345.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1354" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1367.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1376" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1389.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1398" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1411.50"></text>
        </g>
        <g>
            <title> (260 MiB, 2.34%)</title>
            <rect x="0.3304%" y="1420" width="2.3379%" height="21" fill="rgb(255,227,227)" fg:x="38563184" fg:w="272901907"/>
            <text x="0.5804%" y="1433.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/__init__.py:31 (&lt;module&gt;) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1442" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1455.50"></text>
        </g>
        <g>
            <title>from cvxpy.reductions.solvers.solving_chain import SolvingChain (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1464" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1477.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1486" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1499.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1508" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1521.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1530" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1543.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1552" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1565.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1574" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1587.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1596" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1609.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1618" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1631.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1640" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1653.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1662" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1675.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1684" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1697.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:43 (&lt;module&gt;) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1706" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1719.50"></text>
        </g>
        <g>
            <title>from cvxpy.reductions.solvers import defines as slv_def (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1728" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1741.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1750" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1763.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1772" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1785.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1794" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1807.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1816" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1829.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1838" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1851.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1860" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1873.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1882" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1895.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1904" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1917.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1926" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1939.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1948" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1961.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1970" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="1983.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="1992" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2005.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2014" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2027.50"></text>
        </g>
        <g>
            <title> (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2036" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2049.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/defines.py:110 (&lt;module&gt;) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2058" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2071.50"></text>
        </g>
        <g>
            <title>INSTALLED_SOLVERS = installed_solvers() (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2080" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2093.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/defines.py:99 (installed_solvers) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2102" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2115.50"></text>
        </g>
        <g>
            <title>        if solver.is_installed(): (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2124" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2137.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solver.py:60 (is_installed) (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2146" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2159.50"></text>
        </g>
        <g>
            <title>            self.import_solver() (259 MiB, 2.33%)</title>
            <rect x="0.3394%" y="2168" width="2.3289%" height="21" fill="rgb(255,227,227)" fg:x="39611763" fg:w="271853328"/>
            <text x="0.5894%" y="2181.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/profiling.py:3 (&lt;module&gt;) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="122" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="135.50">/h..</text>
        </g>
        <g>
            <title>from solardatatools import DataHandler (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="144" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="157.50">f..</text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="166" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="179.50">&lt;f..</text>
        </g>
        <g>
            <title> (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="188" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="201.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="210" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="223.50">&lt;f..</text>
        </g>
        <g>
            <title> (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="232" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="245.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="254" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="267.50">&lt;f..</text>
        </g>
        <g>
            <title> (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="276" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="289.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="298" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="311.50">&lt;f..</text>
        </g>
        <g>
            <title> (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="320" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="333.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="342" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="355.50">&lt;f..</text>
        </g>
        <g>
            <title> (378 MiB, 3.40%)</title>
            <rect x="0.0000%" y="364" width="3.3950%" height="21" fill="rgb(255,222,222)" fg:x="0" fg:w="396290686"/>
            <text x="0.2500%" y="377.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:9 (&lt;module&gt;) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="386" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="399.50"></text>
        </g>
        <g>
            <title>from solardatatools.data_handler import DataHandler (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="408" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="421.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="430" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="443.50"></text>
        </g>
        <g>
            <title> (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="452" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="465.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="474" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="487.50"></text>
        </g>
        <g>
            <title> (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="496" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="509.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="518" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="531.50"></text>
        </g>
        <g>
            <title> (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="540" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="553.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="562" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="575.50"></text>
        </g>
        <g>
            <title> (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="584" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="597.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="606" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="619.50"></text>
        </g>
        <g>
            <title> (70 MiB, 0.63%)</title>
            <rect x="2.7671%" y="628" width="0.6279%" height="21" fill="rgb(255,238,238)" fg:x="322998347" fg:w="73292339"/>
            <text x="3.0171%" y="641.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:30 (&lt;module&gt;) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="650" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="663.50"></text>
        </g>
        <g>
            <title>from solardatatools.data_filling import zero_nighttime, interp_missing (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="672" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="685.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="694" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="707.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="716" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="729.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="738" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="751.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="760" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="773.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="782" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="795.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="804" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="817.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="826" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="839.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="848" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="861.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="870" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="883.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="892" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="905.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/data_filling.py:12 (&lt;module&gt;) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="914" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="927.50"></text>
        </g>
        <g>
            <title>from solardatatools.algorithms import SunriseSunset (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="936" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="949.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="958" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="971.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="980" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="993.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1002" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1015.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1024" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1037.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1046" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1059.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1068" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1081.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1090" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1103.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1112" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1125.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1134" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1147.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1156" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1169.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/__init__.py:5 (&lt;module&gt;) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1178" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1191.50"></text>
        </g>
        <g>
            <title>from solardatatools.algorithms.shade import ShadeAnalysis (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1200" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1213.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1222" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1235.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1244" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1257.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1266" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1279.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1288" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1301.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1310" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1323.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1332" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1345.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1354" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1367.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1376" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1389.50"></text>
        </g>
        <g>
            <title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1398" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1411.50"></text>
        </g>
        <g>
            <title> (67 MiB, 0.60%)</title>
            <rect x="2.7941%" y="1420" width="0.6009%" height="21" fill="rgb(255,238,238)" fg:x="326151536" fg:w="70139150"/>
            <text x="3.0441%" y="1433.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/shade.py:27 (&lt;module&gt;) (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1442" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1455.50"></text>
        </g>
        <g>
            <title>DATA_CORPUS = pd.read_csv( (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1464" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1477.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:948 (read_csv) (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1486" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1499.50"></text>
        </g>
        <g>
            <title>    return _read(filepath_or_buffer, kwds) (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1508" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1521.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:617 (_read) (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1530" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1543.50"></text>
        </g>
        <g>
            <title>        return parser.read(nrows) (66 MiB, 0.59%)</title>
            <rect x="2.8031%" y="1552" width="0.5919%" height="21" fill="rgb(255,238,238)" fg:x="327200253" fg:w="69090433"/>
            <text x="3.0531%" y="1565.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:1765 (read) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1574" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1587.50"></text>
        </g>
        <g>
            <title>            df = DataFrame(col_dict, columns=columns, index=index) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1596" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1609.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/frame.py:736 (__init__) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1618" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1631.50"></text>
        </g>
        <g>
            <title>            mgr = dict_to_mgr(data, index, columns, dtype=dtype, copy=copy, typ=manager) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1640" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1653.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/construction.py:503 (dict_to_mgr) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1662" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1675.50"></text>
        </g>
        <g>
            <title>    return arrays_to_mgr(arrays, columns, index, dtype=dtype, typ=typ, consolidate=copy) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1684" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1697.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/construction.py:152 (arrays_to_mgr) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1706" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1719.50"></text>
        </g>
        <g>
            <title>        return create_block_manager_from_column_arrays( (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1728" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1741.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/managers.py:2086 (create_block_manager_from_column_arrays) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1750" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1763.50"></text>
        </g>
        <g>
            <title>        blocks = _form_blocks(arrays, consolidate, refs) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1772" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1785.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/managers.py:2160 (_form_blocks) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1794" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1807.50"></text>
        </g>
        <g>
            <title>            values, placement = _stack_arrays(list(tup_block), dtype) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1816" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1829.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/managers.py:2200 (_stack_arrays) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1838" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1851.50"></text>
        </g>
        <g>
            <title>    stacked = np.empty(shape, dtype=dtype) (65 MiB, 0.58%)</title>
            <rect x="2.8098%" y="1860" width="0.5852%" height="21" fill="rgb(255,238,238)" fg:x="327986685" fg:w="68304001"/>
            <text x="3.0598%" y="1873.50"></text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:39 (is_diagonal) (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1618" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1631.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/c..</text>
        </g>
        <g>
            <title>        off_diagonal_elements = off_diagonal_elements.toarray() (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1640" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1653.50">        off_diagonal_elements = off_diagonal_elemen..</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_compressed.py:1050 (toarray) (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1662" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1675.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/s..</text>
        </g>
        <g>
            <title>        out = self._process_toarray_args(order, out) (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1684" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1697.50">        out = self._process_toarray_args(order, out..</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:1267 (_process_toarray_args) (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1706" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1719.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/s..</text>
        </g>
        <g>
            <title>            return np.zeros(self.shape, dtype=self.dtype, order=order) (4,768 MiB, 42.83%)</title>
            <rect x="3.6193%" y="1728" width="42.8313%" height="21" fill="rgb(255,151,151)" fg:x="422477042" fg:w="4999610368"/>
            <text x="3.8693%" y="1741.50">            return np.zeros(self.shape, dtype=self...</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2348 (isclose) (596 MiB, 5.35%)</title>
            <rect x="46.4506%" y="1706" width="5.3535%" height="21" fill="rgb(255,215,215)" fg:x="5422087410" fg:w="624900060"/>
            <text x="46.7006%" y="1719.50">/hom..</text>
        </g>
        <g>
            <title>    xfin = isfinite(x) (596 MiB, 5.35%)</title>
            <rect x="46.4506%" y="1728" width="5.3535%" height="21" fill="rgb(255,215,215)" fg:x="5422087410" fg:w="624900060"/>
            <text x="46.7006%" y="1741.50">   ..</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/profiling.py:35 (&lt;module&gt;) (10,740 MiB, 96.48%)</title>
            <rect x="3.5063%" y="122" width="96.4824%" height="21" fill="rgb(255,102,102)" fg:x="409287822" fg:w="11262210020"/>
            <text x="3.7563%" y="135.50">/home/ec2-user/solar-data-tools/profiling.py:35 (&lt;module&gt;)</text>
        </g>
        <g>
            <title>                dh.run_pipeline(power_col=&apos;ac_power_01&apos;) (10,740 MiB, 96.48%)</title>
            <rect x="3.5063%" y="144" width="96.4824%" height="21" fill="rgb(255,102,102)" fg:x="409287822" fg:w="11262210020"/>
            <text x="3.7563%" y="157.50">                dh.run_pipeline(power_col=&apos;ac_power_01&apos;)</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:375 (run_pipeline) (10,732 MiB, 96.41%)</title>
            <rect x="3.5782%" y="166" width="96.4106%" height="21" fill="rgb(255,102,102)" fg:x="417673590" fg:w="11253824252"/>
            <text x="3.8282%" y="179.50">/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:375 (run_pipeline)</text>
        </g>
        <g>
            <title>            self.clipping_check(solver=solver_convex) (10,732 MiB, 96.41%)</title>
            <rect x="3.5782%" y="188" width="96.4106%" height="21" fill="rgb(255,102,102)" fg:x="417673590" fg:w="11253824252"/>
            <text x="3.8282%" y="201.50">            self.clipping_check(solver=solver_convex)</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:868 (clipping_check) (10,732 MiB, 96.41%)</title>
            <rect x="3.5782%" y="210" width="96.4106%" height="21" fill="rgb(255,102,102)" fg:x="417673590" fg:w="11253824252"/>
            <text x="3.8282%" y="223.50">/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:868 (clipping_check)</text>
        </g>
        <g>
            <title>        self.clipping_analysis.check_clipping( (10,732 MiB, 96.41%)</title>
            <rect x="3.5782%" y="232" width="96.4106%" height="21" fill="rgb(255,102,102)" fg:x="417673590" fg:w="11253824252"/>
            <text x="3.8282%" y="245.50">        self.clipping_analysis.check_clipping(</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:75 (check_clipping) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="254" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="267.50">/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:75 (check_clipping)</text>
        </g>
        <g>
            <title>        self.pointmass_detection( (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="276" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="289.50">        self.pointmass_detection(</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:139 (pointmass_detection) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="298" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="311.50">/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:139 (pointmass_detection)</text>
        </g>
        <g>
            <title>            self.get_l2_l1d2(y_rs, weight=weight, solver=solver) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="320" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="333.50">            self.get_l2_l1d2(y_rs, weight=weight, solver=solver)</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:373 (get_l2_l1d2) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="342" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="355.50">/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:373 (get_l2_l1d2)</text>
        </g>
        <g>
            <title>        out = l2_l1d2_constrained(y, w1=weight, solver=solver) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="364" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="377.50">        out = l2_l1d2_constrained(y, w1=weight, solver=solver)</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:259 (l2_l1d2_constrained) (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="386" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="399.50">/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:259 (l2_l1d2_constrained)</text>
        </g>
        <g>
            <title>        res = _osd_l2_l1d2_constrained( (10,730 MiB, 96.39%)</title>
            <rect x="3.6006%" y="408" width="96.3881%" height="21" fill="rgb(255,102,102)" fg:x="420294630" fg:w="11251203212"/>
            <text x="3.8506%" y="421.50">        res = _osd_l2_l1d2_constrained(</text>
        </g>
        <g>
            <title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:277 (_osd_l2_l1d2_constrained) (10,729 MiB, 96.38%)</title>
            <rect x="3.6097%" y="430" width="96.3791%" height="21" fill="rgb(255,102,102)" fg:x="421348158" fg:w="11250149684"/>
            <text x="3.8597%" y="443.50">/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:277 (_osd_l2_l1d2_constrained)</text>
        </g>
        <g>
            <title>    problem.decompose(solver=solver, verbose=verbose, eps_rel=1e-6, eps_abs=1e-6) (10,729 MiB, 96.38%)</title>
            <rect x="3.6097%" y="452" width="96.3791%" height="21" fill="rgb(255,102,102)" fg:x="421348158" fg:w="11250149684"/>
            <text x="3.8597%" y="465.50">    problem.decompose(solver=solver, verbose=verbose, eps_rel=1e-6, eps_abs=1e-6)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (10,729 MiB, 96.38%)</title>
            <rect x="3.6097%" y="474" width="96.3791%" height="21" fill="rgb(255,102,102)" fg:x="421348158" fg:w="11250149684"/>
            <text x="3.8597%" y="487.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose)</text>
        </g>
        <g>
            <title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (10,729 MiB, 96.38%)</title>
            <rect x="3.6097%" y="496" width="96.3791%" height="21" fill="rgb(255,102,102)" fg:x="421348158" fg:w="11250149684"/>
            <text x="3.8597%" y="509.50">            result = self._solve_cvx(canonical_form, solver, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="518" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="531.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx)</text>
        </g>
        <g>
            <title>        cvx_prob.solve(solver=solver, **solver_kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="540" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="553.50">        cvx_prob.solve(solver=solver, **solver_kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="562" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="575.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve)</text>
        </g>
        <g>
            <title>        return solve_func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="584" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="597.50">        return solve_func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="606" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="619.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve)</text>
        </g>
        <g>
            <title>        data, solving_chain, inverse_data = self.get_problem_data( (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="628" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="641.50">        data, solving_chain, inverse_data = self.get_problem_data(</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="650" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="663.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data)</text>
        </g>
        <g>
            <title>            solving_chain = self._construct_chain( (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="672" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="685.50">            solving_chain = self._construct_chain(</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="694" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="707.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain)</text>
        </g>
        <g>
            <title>        return construct_solving_chain(self, candidate_solvers, gp=gp, (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="716" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="729.50">        return construct_solving_chain(self, candidate_solvers, gp=gp,</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chain) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="738" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="751.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chai..</text>
        </g>
        <g>
            <title>    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="760" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="773.50">    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_problem_class) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="782" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="795.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_proble..</text>
        </g>
        <g>
            <title>    if not gp and not problem.is_dcp(): (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="804" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="817.50">    if not gp and not problem.is_dcp():</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="826" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="839.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="848" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="861.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="870" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="883.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp)</text>
        </g>
        <g>
            <title>        return all( (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="892" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="905.50">        return all(</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="914" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="927.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;)</text>
        </g>
        <g>
            <title>          expr.is_dcp(dpp) for expr in self.constraints + [self.objective]) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="936" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="949.50">          expr.is_dcp(dpp) for expr in self.constraints + [self.objective])</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="958" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="971.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp)</text>
        </g>
        <g>
            <title>        return self.args[0].is_convex() (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="980" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="993.50">        return self.args[0].is_convex()</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1002" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1015.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1024" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1037.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1046" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1059.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex)</text>
        </g>
        <g>
            <title>                if not (arg.is_affine() or (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1068" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1081.50">                if not (arg.is_affine() or</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1090" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1103.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1112" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1125.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1134" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1147.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine)</text>
        </g>
        <g>
            <title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1156" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1169.50">        return self.is_constant() or (self.is_convex() and self.is_concave())</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1178" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1191.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1200" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1213.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1222" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1235.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex)</text>
        </g>
        <g>
            <title>                if not (arg.is_affine() or (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1244" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1257.50">                if not (arg.is_affine() or</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1266" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1279.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1288" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1301.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1310" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1323.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine)</text>
        </g>
        <g>
            <title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1332" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1345.50">        return self.is_constant() or (self.is_convex() and self.is_concave())</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1354" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1367.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1376" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1389.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:193 (is_concave) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1398" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1411.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:193 (is_concave)</text>
        </g>
        <g>
            <title>        elif self.is_atom_concave(): (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1420" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1433.50">        elif self.is_atom_concave():</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/quad_form.py:74 (is_atom_concave) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1442" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1455.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/quad_form.py:74 (is_atom_concave)</text>
        </g>
        <g>
            <title>        return P.is_constant() and P.is_nsd() (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1464" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1477.50">        return P.is_constant() and P.is_nsd()</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1486" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1499.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once)</text>
        </g>
        <g>
            <title>        result = func(self, *args, **kwargs) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1508" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1521.50">        result = func(self, *args, **kwargs)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/constants/constant.py:244 (is_nsd) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1530" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1543.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/constants/constant.py:244 (is_nsd)</text>
        </g>
        <g>
            <title>            self._nsd_test = eig_util.is_psd_within_tol(-self.value, EIGVAL_TOL) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1552" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1565.50">            self._nsd_test = eig_util.is_psd_within_tol(-self.value, EIGVAL_TOL)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:77 (is_psd_within_tol) (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1574" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1587.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:77 (is_psd_within_tol)</text>
        </g>
        <g>
            <title>    if is_diagonal(A): (10,728 MiB, 96.37%)</title>
            <rect x="3.6193%" y="1596" width="96.3694%" height="21" fill="rgb(255,102,102)" fg:x="422477042" fg:w="11249020800"/>
            <text x="3.8693%" y="1609.50">    if is_diagonal(A):</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:45 (is_diagonal) (5,960 MiB, 53.54%)</title>
            <rect x="46.4506%" y="1618" width="53.5382%" height="21" fill="rgb(255,140,140)" fg:x="5422087410" fg:w="6249410432"/>
            <text x="46.7006%" y="1631.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities..</text>
        </g>
        <g>
            <title>    return np.allclose(off_diagonal_elements, 0) (5,960 MiB, 53.54%)</title>
            <rect x="46.4506%" y="1640" width="53.5382%" height="21" fill="rgb(255,140,140)" fg:x="5422087410" fg:w="6249410432"/>
            <text x="46.7006%" y="1653.50">    return np.allclose(off_diagonal_elements, 0)</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2241 (allclose) (5,960 MiB, 53.54%)</title>
            <rect x="46.4506%" y="1662" width="53.5382%" height="21" fill="rgb(255,140,140)" fg:x="5422087410" fg:w="6249410432"/>
            <text x="46.7006%" y="1675.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/nume..</text>
        </g>
        <g>
            <title>    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan)) (5,960 MiB, 53.54%)</title>
            <rect x="46.4506%" y="1684" width="53.5382%" height="21" fill="rgb(255,140,140)" fg:x="5422087410" fg:w="6249410432"/>
            <text x="46.7006%" y="1697.50">    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal..</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2351 (isclose) (5,364 MiB, 48.19%)</title>
            <rect x="51.8040%" y="1706" width="48.1847%" height="21" fill="rgb(255,145,145)" fg:x="6046987470" fg:w="5624510372"/>
            <text x="52.0540%" y="1719.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/co..</text>
        </g>
        <g>
            <title>        return within_tol(x, y, atol, rtol) (5,364 MiB, 48.19%)</title>
            <rect x="51.8040%" y="1728" width="48.1847%" height="21" fill="rgb(255,145,145)" fg:x="6046987470" fg:w="5624510372"/>
            <text x="52.0540%" y="1741.50">        return within_tol(x, y, atol, rtol)..</text>
        </g>
        <g>
            <title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2332 (within_tol) (5,364 MiB, 48.19%)</title>
            <rect x="51.8040%" y="1750" width="48.1847%" height="21" fill="rgb(255,145,145)" fg:x="6046987470" fg:w="5624510372"/>
            <text x="52.0540%" y="1763.50">/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/co..</text>
        </g>
        <g>
            <title>            return less_equal(abs(x-y), atol + rtol * abs(y)) (5,364 MiB, 48.19%)</title>
            <rect x="51.8040%" y="1772" width="48.1847%" height="21" fill="rgb(255,145,145)" fg:x="6046987470" fg:w="5624510372"/>
            <text x="52.0540%" y="1785.50">            return less_equal(abs(x-y), atol + rtol * abs(..</text>
        </g>
        <g>
            <title>all (11,132 MiB, 100%)</title>
            <rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="11672808927"/>
            <text x="0.2500%" y="113.50"></text>
        </g>
    </svg>
</svg>