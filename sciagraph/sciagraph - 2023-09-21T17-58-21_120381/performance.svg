<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="4944" onload="init(evt)" viewBox="0 0 1200 4944" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:16px }
#title { text-anchor:middle; font-size:21px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 16;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = true;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="4944" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="32.00">Runtime flamegraph</text><text id="subtitle" x="50.0000%" y="64.00">⟲ See the timeline for ordering and concurrency ⟲</text><text id="details" fill="rgb(0,0,0)" x="10" y="84.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="32.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="32.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="4931.00"> </text><svg id="frames" x="10" width="1180" total_samples="835"><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:10 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="0.0000%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="663.50"></text></g><g><title>import numpy as np (2 samples, 0.24%)</title><rect x="0.0000%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="0.0000%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="707.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.0000%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="0.0000%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="751.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.0000%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="0.0000%" y="782" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="795.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.0000%" y="804" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="0.0000%" y="826" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="839.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.0000%" y="848" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="0.0000%" y="870" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="883.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.0000%" y="892" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="0" fg:w="2"/><text x="0.2500%" y="905.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:1 (&lt;module&gt;) (7 samples, 0.84%)</title><rect x="0.0000%" y="386" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="399.50"></text></g><g><title>from solardatatools.time_axis_manipulation import standardize_time_axis (7 samples, 0.84%)</title><rect x="0.0000%" y="408" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="421.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="0.0000%" y="430" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="443.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="0.0000%" y="452" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="465.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="0.0000%" y="474" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="487.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="0.0000%" y="496" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="509.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="0.0000%" y="518" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="531.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="0.0000%" y="540" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="553.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="0.0000%" y="562" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="575.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="0.0000%" y="584" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="597.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="0.0000%" y="606" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="619.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="0.0000%" y="628" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="0" fg:w="7"/><text x="0.2500%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:11 (&lt;module&gt;) (5 samples, 0.60%)</title><rect x="0.2395%" y="650" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="663.50"></text></g><g><title>import pandas as pd (5 samples, 0.60%)</title><rect x="0.2395%" y="672" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (5 samples, 0.60%)</title><rect x="0.2395%" y="694" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="707.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="0.2395%" y="716" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (5 samples, 0.60%)</title><rect x="0.2395%" y="738" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="751.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="0.2395%" y="760" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (5 samples, 0.60%)</title><rect x="0.2395%" y="782" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="795.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="0.2395%" y="804" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (5 samples, 0.60%)</title><rect x="0.2395%" y="826" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="839.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="0.2395%" y="848" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (5 samples, 0.60%)</title><rect x="0.2395%" y="870" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="883.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="0.2395%" y="892" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="2" fg:w="5"/><text x="0.4895%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/__init__.py:46 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="0.3593%" y="914" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="927.50"></text></g><g><title>from pandas.core.api import ( (4 samples, 0.48%)</title><rect x="0.3593%" y="936" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="0.3593%" y="958" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="971.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="0.3593%" y="980" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="0.3593%" y="1002" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1015.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="0.3593%" y="1024" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="0.3593%" y="1046" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1059.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="0.3593%" y="1068" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="0.3593%" y="1090" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1103.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="0.3593%" y="1112" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="0.3593%" y="1134" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1147.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="0.3593%" y="1156" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="3" fg:w="4"/><text x="0.6093%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/api.py:47 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="0.4790%" y="1178" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1191.50"></text></g><g><title>from pandas.core.groupby import ( (3 samples, 0.36%)</title><rect x="0.4790%" y="1200" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1213.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="0.4790%" y="1222" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1235.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1244" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1266" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1279.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1288" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1301.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1310" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1323.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1332" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="0.4790%" y="1354" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1367.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1376" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="0.4790%" y="1398" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1411.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1420" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1433.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/groupby/__init__.py:1 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="0.4790%" y="1442" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1455.50"></text></g><g><title>from pandas.core.groupby.generic import ( (3 samples, 0.36%)</title><rect x="0.4790%" y="1464" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1477.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="0.4790%" y="1486" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1499.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1508" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1521.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1530" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1543.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1552" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1565.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1574" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1587.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1596" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1609.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="0.4790%" y="1618" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1631.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1640" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1653.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="0.4790%" y="1662" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1675.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1684" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1697.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/groupby/generic.py:67 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="0.4790%" y="1706" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1719.50"></text></g><g><title>from pandas.core.frame import DataFrame (3 samples, 0.36%)</title><rect x="0.4790%" y="1728" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1741.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="0.4790%" y="1750" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1763.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1772" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1785.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1794" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1807.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1816" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="0.4790%" y="1838" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1851.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.4790%" y="1860" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="4" fg:w="3"/><text x="0.7290%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="0.5988%" y="1882" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="5" fg:w="2"/><text x="0.8488%" y="1895.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.5988%" y="1904" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="5" fg:w="2"/><text x="0.8488%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="0.5988%" y="1926" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="5" fg:w="2"/><text x="0.8488%" y="1939.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.5988%" y="1948" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="5" fg:w="2"/><text x="0.8488%" y="1961.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:972 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="0.8383%" y="1794" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1807.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="1816" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="0.8383%" y="1838" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1851.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="1860" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="0.8383%" y="1882" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1895.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="1904" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="0.8383%" y="1926" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1939.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="1948" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1961.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="0.8383%" y="1970" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="1983.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="1992" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="0.8383%" y="2014" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="2027.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="2036" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="2049.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="0.8383%" y="2058" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="2071.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="0.8383%" y="2080" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="7" fg:w="3"/><text x="1.0883%" y="2093.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/__init__.py:161 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="0.9581%" y="2102" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2115.50"></text></g><g><title>from . import _api, _version, cbook, _docstring, rcsetup (2 samples, 0.24%)</title><rect x="0.9581%" y="2124" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2137.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (2 samples, 0.24%)</title><rect x="0.9581%" y="2146" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2159.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2168" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2181.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="0.9581%" y="2190" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2203.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2212" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2225.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="0.9581%" y="2234" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2247.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2256" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="0.9581%" y="2278" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2291.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2300" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="0.9581%" y="2322" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2335.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2344" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="0.9581%" y="2366" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2379.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2388" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="0.9581%" y="2410" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2423.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="0.9581%" y="2432" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="8" fg:w="2"/><text x="1.2081%" y="2445.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/pyplot.py:56 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="1.1976%" y="1970" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="1983.50"></text></g><g><title>import matplotlib.colorbar (4 samples, 0.48%)</title><rect x="1.1976%" y="1992" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="1.1976%" y="2014" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2027.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2036" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2049.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="1.1976%" y="2058" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2071.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2080" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2093.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="1.1976%" y="2102" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2115.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2124" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2137.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="1.1976%" y="2146" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2159.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2168" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2181.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="1.1976%" y="2190" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2203.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2212" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2225.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/colorbar.py:19 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="1.1976%" y="2234" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2247.50"></text></g><g><title>from matplotlib import _api, cbook, collections, cm, colors, contour, ticker (4 samples, 0.48%)</title><rect x="1.1976%" y="2256" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (4 samples, 0.48%)</title><rect x="1.1976%" y="2278" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2291.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2300" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="1.1976%" y="2322" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2335.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2344" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="1.1976%" y="2366" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2379.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2388" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="1.1976%" y="2410" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2423.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2432" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="1.1976%" y="2454" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2467.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2476" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2489.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="1.1976%" y="2498" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2511.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2520" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="1.1976%" y="2542" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2555.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.1976%" y="2564" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="10" fg:w="4"/><text x="1.4476%" y="2577.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/contour.py:14 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="1.4371%" y="2586" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2599.50"></text></g><g><title>from matplotlib.backend_bases import MouseButton (2 samples, 0.24%)</title><rect x="1.4371%" y="2608" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2621.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="1.4371%" y="2630" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2643.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.4371%" y="2652" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2665.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="1.4371%" y="2674" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2687.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.4371%" y="2696" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2709.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="1.4371%" y="2718" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2731.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.4371%" y="2740" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2753.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="1.4371%" y="2762" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2775.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.4371%" y="2784" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2797.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="1.4371%" y="2806" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2819.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.4371%" y="2828" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="12" fg:w="2"/><text x="1.6871%" y="2841.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/projections/__init__.py:55 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="1.9162%" y="2586" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2599.50"></text></g><g><title>from .. import axes, _docstring (2 samples, 0.24%)</title><rect x="1.9162%" y="2608" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2621.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (2 samples, 0.24%)</title><rect x="1.9162%" y="2630" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2643.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2652" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2665.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="1.9162%" y="2674" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2687.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2696" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2709.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="1.9162%" y="2718" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2731.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2740" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2753.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="1.9162%" y="2762" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2775.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2784" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2797.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="1.9162%" y="2806" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2819.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2828" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2841.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="1.9162%" y="2850" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2863.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2872" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2885.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="1.9162%" y="2894" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2907.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="1.9162%" y="2916" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="16" fg:w="2"/><text x="2.1662%" y="2929.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:2 (&lt;module&gt;) (12 samples, 1.44%)</title><rect x="0.8383%" y="1706" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="7" fg:w="12"/><text x="1.0883%" y="1719.50"></text></g><g><title>import matplotlib.pyplot as plt (12 samples, 1.44%)</title><rect x="0.8383%" y="1728" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="7" fg:w="12"/><text x="1.0883%" y="1741.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (12 samples, 1.44%)</title><rect x="0.8383%" y="1750" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="7" fg:w="12"/><text x="1.0883%" y="1763.50"></text></g><g><title> (12 samples, 1.44%)</title><rect x="0.8383%" y="1772" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="7" fg:w="12"/><text x="1.0883%" y="1785.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (9 samples, 1.08%)</title><rect x="1.1976%" y="1794" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1807.50"></text></g><g><title> (9 samples, 1.08%)</title><rect x="1.1976%" y="1816" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (9 samples, 1.08%)</title><rect x="1.1976%" y="1838" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1851.50"></text></g><g><title> (9 samples, 1.08%)</title><rect x="1.1976%" y="1860" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (9 samples, 1.08%)</title><rect x="1.1976%" y="1882" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1895.50"></text></g><g><title> (9 samples, 1.08%)</title><rect x="1.1976%" y="1904" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (9 samples, 1.08%)</title><rect x="1.1976%" y="1926" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1939.50"></text></g><g><title> (9 samples, 1.08%)</title><rect x="1.1976%" y="1948" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="10" fg:w="9"/><text x="1.4476%" y="1961.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/pyplot.py:66 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="1.7964%" y="1970" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="1983.50"></text></g><g><title>from matplotlib.figure import Figure, FigureBase, figaspect (4 samples, 0.48%)</title><rect x="1.7964%" y="1992" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="1.7964%" y="2014" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2027.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.7964%" y="2036" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2049.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="1.7964%" y="2058" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2071.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.7964%" y="2080" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2093.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="1.7964%" y="2102" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2115.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.7964%" y="2124" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2137.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="1.7964%" y="2146" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2159.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.7964%" y="2168" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2181.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="1.7964%" y="2190" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2203.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="1.7964%" y="2212" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="15" fg:w="4"/><text x="2.0464%" y="2225.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/matplotlib/figure.py:43 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="1.9162%" y="2234" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2247.50"></text></g><g><title>from matplotlib import _blocking_input, backend_bases, _docstring, projections (3 samples, 0.36%)</title><rect x="1.9162%" y="2256" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (3 samples, 0.36%)</title><rect x="1.9162%" y="2278" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2291.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2300" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="1.9162%" y="2322" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2335.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2344" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="1.9162%" y="2366" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2379.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2388" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="1.9162%" y="2410" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2423.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2432" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="1.9162%" y="2454" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2467.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2476" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2489.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="1.9162%" y="2498" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2511.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2520" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="1.9162%" y="2542" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2555.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="1.9162%" y="2564" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="16" fg:w="3"/><text x="2.1662%" y="2577.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/stats/distributions.py:10 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="2.5150%" y="4566" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4579.50"></text></g><g><title>from . import _continuous_distns (2 samples, 0.24%)</title><rect x="2.5150%" y="4588" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4601.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (2 samples, 0.24%)</title><rect x="2.5150%" y="4610" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4623.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4632" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4645.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="2.5150%" y="4654" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4667.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4676" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4689.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="2.5150%" y="4698" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4711.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4720" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4733.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="2.5150%" y="4742" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4755.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4764" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4777.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="2.5150%" y="4786" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4799.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4808" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4821.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="2.5150%" y="4830" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4843.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4852" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4865.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="2.5150%" y="4874" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4887.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="2.5150%" y="4896" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="21" fg:w="2"/><text x="2.7650%" y="4909.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/utils/validation.py:25 (&lt;module&gt;) (5 samples, 0.60%)</title><rect x="2.3952%" y="3158" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3171.50"></text></g><g><title>from ..utils._array_api import _asarray_with_order, _is_numpy_namespace, get_namespace (5 samples, 0.60%)</title><rect x="2.3952%" y="3180" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3193.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (5 samples, 0.60%)</title><rect x="2.3952%" y="3202" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3215.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3224" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3237.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3246" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3259.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3268" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3281.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3290" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3303.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3312" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3325.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (5 samples, 0.60%)</title><rect x="2.3952%" y="3334" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3347.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3356" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3369.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (5 samples, 0.60%)</title><rect x="2.3952%" y="3378" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3391.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3400" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3413.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/utils/_array_api.py:9 (&lt;module&gt;) (5 samples, 0.60%)</title><rect x="2.3952%" y="3422" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3435.50"></text></g><g><title>from .fixes import parse_version (5 samples, 0.60%)</title><rect x="2.3952%" y="3444" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3457.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (5 samples, 0.60%)</title><rect x="2.3952%" y="3466" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3479.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3488" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3501.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3510" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3523.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3532" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3545.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3554" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3567.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3576" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3589.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (5 samples, 0.60%)</title><rect x="2.3952%" y="3598" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3611.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3620" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3633.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (5 samples, 0.60%)</title><rect x="2.3952%" y="3642" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3655.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3664" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3677.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/utils/fixes.py:19 (&lt;module&gt;) (5 samples, 0.60%)</title><rect x="2.3952%" y="3686" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3699.50"></text></g><g><title>import scipy.stats (5 samples, 0.60%)</title><rect x="2.3952%" y="3708" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3721.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (5 samples, 0.60%)</title><rect x="2.3952%" y="3730" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3743.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3752" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3765.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3774" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3787.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3796" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3809.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="3818" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3831.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3840" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3853.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (5 samples, 0.60%)</title><rect x="2.3952%" y="3862" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3875.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3884" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3897.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (5 samples, 0.60%)</title><rect x="2.3952%" y="3906" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3919.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="3928" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3941.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/stats/__init__.py:608 (&lt;module&gt;) (5 samples, 0.60%)</title><rect x="2.3952%" y="3950" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3963.50"></text></g><g><title>from ._stats_py import * (5 samples, 0.60%)</title><rect x="2.3952%" y="3972" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="3985.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (5 samples, 0.60%)</title><rect x="2.3952%" y="3994" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4007.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="4016" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4029.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="4038" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4051.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="4060" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4073.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (5 samples, 0.60%)</title><rect x="2.3952%" y="4082" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4095.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="4104" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4117.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (5 samples, 0.60%)</title><rect x="2.3952%" y="4126" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4139.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="4148" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4161.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (5 samples, 0.60%)</title><rect x="2.3952%" y="4170" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4183.50"></text></g><g><title> (5 samples, 0.60%)</title><rect x="2.3952%" y="4192" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="20" fg:w="5"/><text x="2.6452%" y="4205.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/stats/_stats_py.py:46 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="2.5150%" y="4214" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4227.50"></text></g><g><title>from . import distributions (4 samples, 0.48%)</title><rect x="2.5150%" y="4236" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4249.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (4 samples, 0.48%)</title><rect x="2.5150%" y="4258" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4271.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4280" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4293.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="2.5150%" y="4302" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4315.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4324" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4337.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="2.5150%" y="4346" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4359.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4368" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4381.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="2.5150%" y="4390" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4403.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4412" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4425.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="2.5150%" y="4434" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4447.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4456" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4469.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="2.5150%" y="4478" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4491.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4500" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4513.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="2.5150%" y="4522" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4535.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="2.5150%" y="4544" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="21" fg:w="4"/><text x="2.7650%" y="4557.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:972 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="1794" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1807.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="1816" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="2.2754%" y="1838" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1851.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="1860" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="2.2754%" y="1882" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1895.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="1904" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="1926" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1939.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="1948" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1961.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="1970" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="1983.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="1992" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="2.2754%" y="2014" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2027.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2036" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2049.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="2.2754%" y="2058" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2071.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2080" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2093.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/__init__.py:83 (&lt;module&gt;) (7 samples, 0.84%)</title><rect x="2.2754%" y="2102" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2115.50"></text></g><g><title>    from .base import clone (7 samples, 0.84%)</title><rect x="2.2754%" y="2124" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2137.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="2.2754%" y="2146" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2159.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2168" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2181.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="2190" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2203.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2212" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2225.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="2234" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2247.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2256" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="2.2754%" y="2278" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2291.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2300" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="2.2754%" y="2322" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2335.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2344" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2357.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/base.py:19 (&lt;module&gt;) (7 samples, 0.84%)</title><rect x="2.2754%" y="2366" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2379.50"></text></g><g><title>from .utils import _IS_32BIT (7 samples, 0.84%)</title><rect x="2.2754%" y="2388" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="2.2754%" y="2410" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2423.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2432" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="2454" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2467.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2476" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2489.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="2.2754%" y="2498" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2511.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2520" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="2.2754%" y="2542" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2555.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2564" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2577.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="2.2754%" y="2586" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2599.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="2.2754%" y="2608" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="19" fg:w="7"/><text x="2.5254%" y="2621.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/utils/__init__.py:22 (&lt;module&gt;) (6 samples, 0.72%)</title><rect x="2.3952%" y="2630" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2643.50"></text></g><g><title>from ._param_validation import Interval, validate_params (6 samples, 0.72%)</title><rect x="2.3952%" y="2652" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2665.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (6 samples, 0.72%)</title><rect x="2.3952%" y="2674" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2687.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2696" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2709.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (6 samples, 0.72%)</title><rect x="2.3952%" y="2718" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2731.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2740" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2753.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (6 samples, 0.72%)</title><rect x="2.3952%" y="2762" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2775.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2784" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2797.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (6 samples, 0.72%)</title><rect x="2.3952%" y="2806" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2819.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2828" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2841.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (6 samples, 0.72%)</title><rect x="2.3952%" y="2850" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2863.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2872" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2885.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/utils/_param_validation.py:15 (&lt;module&gt;) (6 samples, 0.72%)</title><rect x="2.3952%" y="2894" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2907.50"></text></g><g><title>from .validation import _is_arraylike_not_scalar (6 samples, 0.72%)</title><rect x="2.3952%" y="2916" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2929.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (6 samples, 0.72%)</title><rect x="2.3952%" y="2938" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2951.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="2960" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2973.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (6 samples, 0.72%)</title><rect x="2.3952%" y="2982" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="2995.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="3004" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3017.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (6 samples, 0.72%)</title><rect x="2.3952%" y="3026" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3039.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="3048" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3061.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (6 samples, 0.72%)</title><rect x="2.3952%" y="3070" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3083.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="3092" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3105.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (6 samples, 0.72%)</title><rect x="2.3952%" y="3114" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3127.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="2.3952%" y="3136" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="20" fg:w="6"/><text x="2.6452%" y="3149.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:10 (&lt;module&gt;) (20 samples, 2.40%)</title><rect x="0.8383%" y="650" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="663.50">/..</text></g><g><title>from solardatatools.signal_decompositions import tl1_l2d2p365 (20 samples, 2.40%)</title><rect x="0.8383%" y="672" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="685.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (20 samples, 2.40%)</title><rect x="0.8383%" y="694" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="707.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="716" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="729.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="738" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="751.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="760" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="773.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="782" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="795.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="804" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="817.50">..</text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (20 samples, 2.40%)</title><rect x="0.8383%" y="826" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="839.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="848" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="861.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (20 samples, 2.40%)</title><rect x="0.8383%" y="870" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="883.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="892" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="905.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:31 (&lt;module&gt;) (20 samples, 2.40%)</title><rect x="0.8383%" y="914" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="927.50">/..</text></g><g><title>from solardatatools._osd_signal_decompositions import _osd_l2_l1d1_l2d2p365, _osd_l1_l1d1_l2d2p365,\ (20 samples, 2.40%)</title><rect x="0.8383%" y="936" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="949.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (20 samples, 2.40%)</title><rect x="0.8383%" y="958" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="971.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="980" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="993.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1002" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1015.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1024" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1037.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1046" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1059.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1068" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1081.50">..</text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (20 samples, 2.40%)</title><rect x="0.8383%" y="1090" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1103.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1112" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1125.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (20 samples, 2.40%)</title><rect x="0.8383%" y="1134" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1147.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1156" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1169.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:29 (&lt;module&gt;) (20 samples, 2.40%)</title><rect x="0.8383%" y="1178" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1191.50">/..</text></g><g><title>from gfosd import Problem (20 samples, 2.40%)</title><rect x="0.8383%" y="1200" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1213.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (20 samples, 2.40%)</title><rect x="0.8383%" y="1222" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1235.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1244" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1257.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1266" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1279.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1288" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1301.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1310" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1323.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1332" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1345.50">..</text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (20 samples, 2.40%)</title><rect x="0.8383%" y="1354" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1367.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1376" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1389.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (20 samples, 2.40%)</title><rect x="0.8383%" y="1398" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1411.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1420" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1433.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/__init__.py:1 (&lt;module&gt;) (20 samples, 2.40%)</title><rect x="0.8383%" y="1442" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1455.50">/..</text></g><g><title>from gfosd.problem import Problem (20 samples, 2.40%)</title><rect x="0.8383%" y="1464" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1477.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (20 samples, 2.40%)</title><rect x="0.8383%" y="1486" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1499.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1508" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1521.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1530" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1543.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1552" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1565.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (20 samples, 2.40%)</title><rect x="0.8383%" y="1574" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1587.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1596" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1609.50">..</text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (20 samples, 2.40%)</title><rect x="0.8383%" y="1618" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1631.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1640" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1653.50">..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (20 samples, 2.40%)</title><rect x="0.8383%" y="1662" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1675.50">&lt;..</text></g><g><title> (20 samples, 2.40%)</title><rect x="0.8383%" y="1684" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="7" fg:w="20"/><text x="1.0883%" y="1697.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:6 (&lt;module&gt;) (8 samples, 0.96%)</title><rect x="2.2754%" y="1706" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="19" fg:w="8"/><text x="2.5254%" y="1719.50"></text></g><g><title>from sklearn.model_selection import train_test_split (8 samples, 0.96%)</title><rect x="2.2754%" y="1728" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="19" fg:w="8"/><text x="2.5254%" y="1741.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (8 samples, 0.96%)</title><rect x="2.2754%" y="1750" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="19" fg:w="8"/><text x="2.5254%" y="1763.50"></text></g><g><title> (8 samples, 0.96%)</title><rect x="2.2754%" y="1772" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="19" fg:w="8"/><text x="2.5254%" y="1785.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/__init__.py:18 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="3.2335%" y="914" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="927.50"></text></g><g><title>import cvxpy.interface.scipy_wrapper (2 samples, 0.24%)</title><rect x="3.2335%" y="936" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.2335%" y="958" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="971.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="980" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:972 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="3.2335%" y="1002" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1015.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1024" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="3.2335%" y="1046" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1059.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1068" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.2335%" y="1090" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1103.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1112" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="3.2335%" y="1134" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1147.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1156" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1169.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="3.2335%" y="1178" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1191.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1200" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1213.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="3.2335%" y="1222" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1235.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1244" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="3.2335%" y="1266" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1279.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1288" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1301.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/interface/__init__.py:17 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="3.2335%" y="1310" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1323.50"></text></g><g><title>from cvxpy.interface.matrix_utilities import * (2 samples, 0.24%)</title><rect x="3.2335%" y="1332" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.2335%" y="1354" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1367.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1376" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="3.2335%" y="1398" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1411.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1420" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1433.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="3.2335%" y="1442" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1455.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1464" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1477.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="3.2335%" y="1486" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1499.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1508" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1521.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="3.2335%" y="1530" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1543.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1552" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1565.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/interface/matrix_utilities.py:20 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="3.2335%" y="1574" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1587.50"></text></g><g><title>import scipy.sparse as sp (2 samples, 0.24%)</title><rect x="3.2335%" y="1596" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1609.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.2335%" y="1618" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1631.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.2335%" y="1640" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="27" fg:w="2"/><text x="3.4835%" y="1653.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/__init__.py:19 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="3.4731%" y="914" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="927.50"></text></g><g><title>from cvxpy.atoms import * (2 samples, 0.24%)</title><rect x="3.4731%" y="936" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.4731%" y="958" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="971.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.4731%" y="980" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="3.4731%" y="1002" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1015.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.4731%" y="1024" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="3.4731%" y="1046" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1059.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.4731%" y="1068" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="3.4731%" y="1090" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1103.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.4731%" y="1112" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="3.4731%" y="1134" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1147.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.4731%" y="1156" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="29" fg:w="2"/><text x="3.7231%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/defines.py:110 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="3.7126%" y="2058" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2071.50"></text></g><g><title>INSTALLED_SOLVERS = installed_solvers() (2 samples, 0.24%)</title><rect x="3.7126%" y="2080" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2093.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/defines.py:99 (installed_solvers) (2 samples, 0.24%)</title><rect x="3.7126%" y="2102" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2115.50"></text></g><g><title>        if solver.is_installed(): (2 samples, 0.24%)</title><rect x="3.7126%" y="2124" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2137.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solver.py:60 (is_installed) (2 samples, 0.24%)</title><rect x="3.7126%" y="2146" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2159.50"></text></g><g><title>            self.import_solver() (2 samples, 0.24%)</title><rect x="3.7126%" y="2168" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2181.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/conic_solvers/scipy_conif.py:54 (import_solver) (2 samples, 0.24%)</title><rect x="3.7126%" y="2190" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2203.50"></text></g><g><title>        from scipy import optimize as opt  # noqa F401 (2 samples, 0.24%)</title><rect x="3.7126%" y="2212" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2225.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1055 (_handle_fromlist) (2 samples, 0.24%)</title><rect x="3.7126%" y="2234" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2247.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2256" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2269.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/__init__.py:189 (__getattr__) (2 samples, 0.24%)</title><rect x="3.7126%" y="2278" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2291.50"></text></g><g><title>            return _importlib.import_module(f&apos;scipy.{name}&apos;) (2 samples, 0.24%)</title><rect x="3.7126%" y="2300" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2313.50"></text></g><g><title>/usr/lib64/python3.9/importlib/__init__.py:127 (import_module) (2 samples, 0.24%)</title><rect x="3.7126%" y="2322" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2335.50"></text></g><g><title>    return _bootstrap._gcd_import(name[level:], package, level) (2 samples, 0.24%)</title><rect x="3.7126%" y="2344" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1030 (_gcd_import) (2 samples, 0.24%)</title><rect x="3.7126%" y="2366" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2379.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2388" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="3.7126%" y="2410" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2423.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2432" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="3.7126%" y="2454" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2467.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2476" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2489.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="3.7126%" y="2498" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2511.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2520" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="3.7126%" y="2542" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2555.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2564" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2577.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="3.7126%" y="2586" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2599.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="3.7126%" y="2608" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="31" fg:w="2"/><text x="3.9626%" y="2621.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:5 (&lt;module&gt;) (27 samples, 3.23%)</title><rect x="0.8383%" y="386" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="399.50">/h..</text></g><g><title>from solardatatools.clear_day_detection import ClearDayDetection (27 samples, 3.23%)</title><rect x="0.8383%" y="408" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="421.50">f..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (27 samples, 3.23%)</title><rect x="0.8383%" y="430" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="443.50">&lt;f..</text></g><g><title> (27 samples, 3.23%)</title><rect x="0.8383%" y="452" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="465.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (27 samples, 3.23%)</title><rect x="0.8383%" y="474" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="487.50">&lt;f..</text></g><g><title> (27 samples, 3.23%)</title><rect x="0.8383%" y="496" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="509.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (27 samples, 3.23%)</title><rect x="0.8383%" y="518" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="531.50">&lt;f..</text></g><g><title> (27 samples, 3.23%)</title><rect x="0.8383%" y="540" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="553.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (27 samples, 3.23%)</title><rect x="0.8383%" y="562" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="575.50">&lt;f..</text></g><g><title> (27 samples, 3.23%)</title><rect x="0.8383%" y="584" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="597.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (27 samples, 3.23%)</title><rect x="0.8383%" y="606" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="619.50">&lt;f..</text></g><g><title> (27 samples, 3.23%)</title><rect x="0.8383%" y="628" width="3.2335%" height="21" fill="rgb(255,223,223)" fg:x="7" fg:w="27"/><text x="1.0883%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:9 (&lt;module&gt;) (7 samples, 0.84%)</title><rect x="3.2335%" y="650" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="663.50"></text></g><g><title>import cvxpy as cvx (7 samples, 0.84%)</title><rect x="3.2335%" y="672" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="3.2335%" y="694" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="707.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="3.2335%" y="716" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="3.2335%" y="738" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="751.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="3.2335%" y="760" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="3.2335%" y="782" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="795.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="3.2335%" y="804" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="3.2335%" y="826" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="839.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="3.2335%" y="848" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="3.2335%" y="870" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="883.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="3.2335%" y="892" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="27" fg:w="7"/><text x="3.4835%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/__init__.py:29 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="3.7126%" y="914" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="927.50"></text></g><g><title>from cvxpy.problems.problem import Problem (3 samples, 0.36%)</title><rect x="3.7126%" y="936" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="3.7126%" y="958" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="971.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="980" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1002" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1015.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1024" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1046" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1059.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1068" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="3.7126%" y="1090" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1103.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1112" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="3.7126%" y="1134" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1147.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1156" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:37 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="3.7126%" y="1178" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1191.50"></text></g><g><title>from cvxpy.reductions import InverseData (3 samples, 0.36%)</title><rect x="3.7126%" y="1200" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1213.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="3.7126%" y="1222" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1235.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1244" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1266" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1279.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1288" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1301.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1310" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1323.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1332" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="3.7126%" y="1354" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1367.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1376" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="3.7126%" y="1398" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1411.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1420" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1433.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/__init__.py:31 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="3.7126%" y="1442" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1455.50"></text></g><g><title>from cvxpy.reductions.solvers.solving_chain import SolvingChain (3 samples, 0.36%)</title><rect x="3.7126%" y="1464" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1477.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="3.7126%" y="1486" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1499.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1508" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1521.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1530" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1543.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1552" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1565.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1574" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1587.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1596" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1609.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="3.7126%" y="1618" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1631.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1640" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1653.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="3.7126%" y="1662" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1675.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1684" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1697.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:43 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="3.7126%" y="1706" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1719.50"></text></g><g><title>from cvxpy.reductions.solvers import defines as slv_def (3 samples, 0.36%)</title><rect x="3.7126%" y="1728" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1741.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1058 (_handle_fromlist) (3 samples, 0.36%)</title><rect x="3.7126%" y="1750" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1763.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1772" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1785.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="3.7126%" y="1794" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1807.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1816" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="3.7126%" y="1838" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1851.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1860" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1882" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1895.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1904" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="3.7126%" y="1926" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1939.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1948" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1961.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="3.7126%" y="1970" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="1983.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="1992" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="3.7126%" y="2014" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="2027.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="3.7126%" y="2036" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="31" fg:w="3"/><text x="3.9626%" y="2049.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:6 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.0719%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="399.50"></text></g><g><title>from solardatatools.dataio import get_pvdaq_data (2 samples, 0.24%)</title><rect x="4.0719%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="421.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.0719%" y="430" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="443.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="452" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="465.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.0719%" y="474" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="487.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="496" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="509.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.0719%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="531.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="553.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.0719%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="575.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="597.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.0719%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="619.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/dataio.py:17 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.0719%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="663.50"></text></g><g><title>import requests (2 samples, 0.24%)</title><rect x="4.0719%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.0719%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="707.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.0719%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="751.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.0719%" y="782" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="795.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="804" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.0719%" y="826" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="839.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="848" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.0719%" y="870" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="883.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.0719%" y="892" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="34" fg:w="2"/><text x="4.3219%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/IPython/terminal/interactiveshell.py:31 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.6707%" y="2234" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2247.50"></text></g><g><title>from prompt_toolkit.auto_suggest import AutoSuggestFromHistory (2 samples, 0.24%)</title><rect x="4.6707%" y="2256" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.6707%" y="2278" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2291.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2300" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:972 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2322" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2335.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2344" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.6707%" y="2366" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2379.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2388" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.6707%" y="2410" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2423.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2432" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2454" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2467.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2476" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2489.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2498" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2511.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2520" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.6707%" y="2542" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2555.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2564" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2577.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.6707%" y="2586" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2599.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2608" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2621.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/prompt_toolkit/__init__.py:25 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.6707%" y="2630" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2643.50"></text></g><g><title>from .application import Application (2 samples, 0.24%)</title><rect x="4.6707%" y="2652" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2665.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.6707%" y="2674" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2687.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2696" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2709.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2718" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2731.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2740" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2753.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2762" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2775.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2784" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2797.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.6707%" y="2806" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2819.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2828" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2841.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.6707%" y="2850" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2863.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2872" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2885.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/prompt_toolkit/application/__init__.py:3 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.6707%" y="2894" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2907.50"></text></g><g><title>from .application import Application (2 samples, 0.24%)</title><rect x="4.6707%" y="2916" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2929.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.6707%" y="2938" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2951.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="2960" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2973.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="2982" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="2995.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="3004" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3017.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.6707%" y="3026" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3039.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="3048" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3061.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.6707%" y="3070" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3083.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="3092" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3105.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.6707%" y="3114" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3127.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.6707%" y="3136" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="39" fg:w="2"/><text x="4.9207%" y="3149.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/IPython/terminal/embed.py:16 (&lt;module&gt;) (4 samples, 0.48%)</title><rect x="4.6707%" y="1970" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="1983.50"></text></g><g><title>from IPython.terminal.interactiveshell import TerminalInteractiveShell (4 samples, 0.48%)</title><rect x="4.6707%" y="1992" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2005.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (4 samples, 0.48%)</title><rect x="4.6707%" y="2014" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2027.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="4.6707%" y="2036" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2049.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (4 samples, 0.48%)</title><rect x="4.6707%" y="2058" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2071.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="4.6707%" y="2080" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2093.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (4 samples, 0.48%)</title><rect x="4.6707%" y="2102" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2115.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="4.6707%" y="2124" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2137.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (4 samples, 0.48%)</title><rect x="4.6707%" y="2146" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2159.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="4.6707%" y="2168" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2181.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (4 samples, 0.48%)</title><rect x="4.6707%" y="2190" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2203.50"></text></g><g><title> (4 samples, 0.48%)</title><rect x="4.6707%" y="2212" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="39" fg:w="4"/><text x="4.9207%" y="2225.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/IPython/terminal/interactiveshell.py:48 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.9102%" y="2234" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2247.50"></text></g><g><title>from .debugger import TerminalPdb, Pdb (2 samples, 0.24%)</title><rect x="4.9102%" y="2256" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2269.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.9102%" y="2278" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2291.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2300" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2313.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.9102%" y="2322" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2335.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2344" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2357.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.9102%" y="2366" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2379.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2388" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2401.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.9102%" y="2410" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2423.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2432" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2445.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.9102%" y="2454" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2467.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2476" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2489.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/IPython/terminal/debugger.py:6 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="4.9102%" y="2498" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2511.50"></text></g><g><title>from IPython.core.completer import IPCompleter (2 samples, 0.24%)</title><rect x="4.9102%" y="2520" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2533.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="4.9102%" y="2542" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2555.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2564" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2577.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="4.9102%" y="2586" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2599.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2608" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2621.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="4.9102%" y="2630" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2643.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2652" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2665.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="4.9102%" y="2674" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2687.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2696" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2709.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="4.9102%" y="2718" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2731.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="4.9102%" y="2740" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="41" fg:w="2"/><text x="5.1602%" y="2753.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/ipywidgets/__init__.py:27 (&lt;module&gt;) (7 samples, 0.84%)</title><rect x="4.4311%" y="1442" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1455.50"></text></g><g><title>from IPython import get_ipython (7 samples, 0.84%)</title><rect x="4.4311%" y="1464" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1477.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (7 samples, 0.84%)</title><rect x="4.4311%" y="1486" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1499.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="4.4311%" y="1508" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1521.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (7 samples, 0.84%)</title><rect x="4.4311%" y="1530" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1543.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="4.4311%" y="1552" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1565.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (7 samples, 0.84%)</title><rect x="4.4311%" y="1574" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1587.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="4.4311%" y="1596" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1609.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (7 samples, 0.84%)</title><rect x="4.4311%" y="1618" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1631.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="4.4311%" y="1640" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1653.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (7 samples, 0.84%)</title><rect x="4.4311%" y="1662" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1675.50"></text></g><g><title> (7 samples, 0.84%)</title><rect x="4.4311%" y="1684" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="37" fg:w="7"/><text x="4.6811%" y="1697.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/IPython/__init__.py:54 (&lt;module&gt;) (6 samples, 0.72%)</title><rect x="4.5509%" y="1706" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1719.50"></text></g><g><title>from .terminal.embed import embed (6 samples, 0.72%)</title><rect x="4.5509%" y="1728" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1741.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (6 samples, 0.72%)</title><rect x="4.5509%" y="1750" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1763.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="4.5509%" y="1772" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1785.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (6 samples, 0.72%)</title><rect x="4.5509%" y="1794" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1807.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="4.5509%" y="1816" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1829.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (6 samples, 0.72%)</title><rect x="4.5509%" y="1838" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1851.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="4.5509%" y="1860" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1873.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (6 samples, 0.72%)</title><rect x="4.5509%" y="1882" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1895.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="4.5509%" y="1904" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1917.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (6 samples, 0.72%)</title><rect x="4.5509%" y="1926" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1939.50"></text></g><g><title> (6 samples, 0.72%)</title><rect x="4.5509%" y="1948" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="38" fg:w="6"/><text x="4.8009%" y="1961.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:8 (&lt;module&gt;) (10 samples, 1.20%)</title><rect x="4.3114%" y="386" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="399.50"></text></g><g><title>from solardatatools.plotting import plot_2d (10 samples, 1.20%)</title><rect x="4.3114%" y="408" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="421.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (10 samples, 1.20%)</title><rect x="4.3114%" y="430" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="443.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="452" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="465.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="474" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="487.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="496" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="509.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="518" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="531.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="540" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="553.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (10 samples, 1.20%)</title><rect x="4.3114%" y="562" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="575.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="584" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="597.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (10 samples, 1.20%)</title><rect x="4.3114%" y="606" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="619.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="628" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/plotting.py:10 (&lt;module&gt;) (10 samples, 1.20%)</title><rect x="4.3114%" y="650" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="663.50"></text></g><g><title>import seaborn as sns (10 samples, 1.20%)</title><rect x="4.3114%" y="672" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (10 samples, 1.20%)</title><rect x="4.3114%" y="694" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="707.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="716" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="738" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="751.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="760" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="782" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="795.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="804" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (10 samples, 1.20%)</title><rect x="4.3114%" y="826" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="839.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="848" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (10 samples, 1.20%)</title><rect x="4.3114%" y="870" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="883.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="892" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/seaborn/__init__.py:12 (&lt;module&gt;) (10 samples, 1.20%)</title><rect x="4.3114%" y="914" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="927.50"></text></g><g><title>from .widgets import *  # noqa: F401,F403 (10 samples, 1.20%)</title><rect x="4.3114%" y="936" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (10 samples, 1.20%)</title><rect x="4.3114%" y="958" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="971.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="980" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="1002" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1015.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1024" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="1046" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1059.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1068" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (10 samples, 1.20%)</title><rect x="4.3114%" y="1090" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1103.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1112" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (10 samples, 1.20%)</title><rect x="4.3114%" y="1134" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1147.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1156" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/seaborn/widgets.py:6 (&lt;module&gt;) (10 samples, 1.20%)</title><rect x="4.3114%" y="1178" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1191.50"></text></g><g><title>    from ipywidgets import interact, FloatSlider, IntSlider (10 samples, 1.20%)</title><rect x="4.3114%" y="1200" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1213.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (10 samples, 1.20%)</title><rect x="4.3114%" y="1222" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1235.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1244" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="1266" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1279.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1288" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1301.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (10 samples, 1.20%)</title><rect x="4.3114%" y="1310" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1323.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1332" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (10 samples, 1.20%)</title><rect x="4.3114%" y="1354" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1367.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1376" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (10 samples, 1.20%)</title><rect x="4.3114%" y="1398" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1411.50"></text></g><g><title> (10 samples, 1.20%)</title><rect x="4.3114%" y="1420" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="36" fg:w="10"/><text x="4.5614%" y="1433.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/ipywidgets/__init__.py:29 (&lt;module&gt;) (2 samples, 0.24%)</title><rect x="5.2695%" y="1442" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1455.50"></text></g><g><title>from .widgets import * (2 samples, 0.24%)</title><rect x="5.2695%" y="1464" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1477.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (2 samples, 0.24%)</title><rect x="5.2695%" y="1486" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1499.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="5.2695%" y="1508" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1521.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (2 samples, 0.24%)</title><rect x="5.2695%" y="1530" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1543.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="5.2695%" y="1552" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1565.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (2 samples, 0.24%)</title><rect x="5.2695%" y="1574" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1587.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="5.2695%" y="1596" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1609.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (2 samples, 0.24%)</title><rect x="5.2695%" y="1618" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1631.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="5.2695%" y="1640" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1653.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (2 samples, 0.24%)</title><rect x="5.2695%" y="1662" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1675.50"></text></g><g><title> (2 samples, 0.24%)</title><rect x="5.2695%" y="1684" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="44" fg:w="2"/><text x="5.5195%" y="1697.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:14 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="5.5090%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="663.50"></text></g><g><title>from sklearn.cluster import DBSCAN (3 samples, 0.36%)</title><rect x="5.5090%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="685.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="5.5090%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="707.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="751.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="760" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="782" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="795.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="804" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="5.5090%" y="826" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="839.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="848" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="5.5090%" y="870" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="883.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="892" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/cluster/__init__.py:16 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="5.5090%" y="914" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="927.50"></text></g><g><title>from ._dbscan import DBSCAN, dbscan (3 samples, 0.36%)</title><rect x="5.5090%" y="936" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="949.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="5.5090%" y="958" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="971.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="980" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="1002" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1015.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1024" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="1046" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1059.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1068" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="5.5090%" y="1090" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1103.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1112" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="5.5090%" y="1134" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1147.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1156" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/sklearn/cluster/_dbscan.py:19 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="5.5090%" y="1178" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1191.50"></text></g><g><title>from ..neighbors import NearestNeighbors (3 samples, 0.36%)</title><rect x="5.5090%" y="1200" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1213.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (3 samples, 0.36%)</title><rect x="5.5090%" y="1222" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1235.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1244" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="1266" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1279.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1288" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1301.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (3 samples, 0.36%)</title><rect x="5.5090%" y="1310" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1323.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1332" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (3 samples, 0.36%)</title><rect x="5.5090%" y="1354" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1367.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1376" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (3 samples, 0.36%)</title><rect x="5.5090%" y="1398" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1411.50"></text></g><g><title> (3 samples, 0.36%)</title><rect x="5.5090%" y="1420" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="46" fg:w="3"/><text x="5.7590%" y="1433.50"></text></g><g><title>/usr/lib64/python3.9/zipfile.py:1000 (_read1) (20 samples, 2.40%)</title><rect x="6.2275%" y="1706" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="52" fg:w="20"/><text x="6.4775%" y="1719.50">/..</text></g><g><title>            data = self._decompressor.decompress(data, n) (20 samples, 2.40%)</title><rect x="6.2275%" y="1728" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="52" fg:w="20"/><text x="6.4775%" y="1741.50">..</text></g><g class="running-frame"><title>➤ CPU ➤ (20 samples, 2.40%)</title><rect x="6.2275%" y="1750" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="52" fg:w="20"/><text x="6.4775%" y="1763.50">➤..</text></g><g><title>/usr/lib64/python3.9/zipfile.py:970 (read1) (26 samples, 3.11%)</title><rect x="6.2275%" y="1662" width="3.1138%" height="21" fill="rgb(255,223,223)" fg:x="52" fg:w="26"/><text x="6.4775%" y="1675.50">/..</text></g><g><title>                data = self._read1(n) (26 samples, 3.11%)</title><rect x="6.2275%" y="1684" width="3.1138%" height="21" fill="rgb(255,223,223)" fg:x="52" fg:w="26"/><text x="6.4775%" y="1697.50">..</text></g><g><title>/usr/lib64/python3.9/zipfile.py:1014 (_read1) (6 samples, 0.72%)</title><rect x="8.6228%" y="1706" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="72" fg:w="6"/><text x="8.8728%" y="1719.50"></text></g><g><title>        self._update_crc(data) (6 samples, 0.72%)</title><rect x="8.6228%" y="1728" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="72" fg:w="6"/><text x="8.8728%" y="1741.50"></text></g><g><title>/usr/lib64/python3.9/zipfile.py:939 (_update_crc) (6 samples, 0.72%)</title><rect x="8.6228%" y="1750" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="72" fg:w="6"/><text x="8.8728%" y="1763.50"></text></g><g><title>        self._running_crc = crc32(newdata, self._running_crc) (6 samples, 0.72%)</title><rect x="8.6228%" y="1772" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="72" fg:w="6"/><text x="8.8728%" y="1785.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (6 samples, 0.72%)</title><rect x="8.6228%" y="1794" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="72" fg:w="6"/><text x="8.8728%" y="1807.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:1748 (read) (65 samples, 7.78%)</title><rect x="6.1078%" y="1574" width="7.7844%" height="21" fill="rgb(255,208,208)" fg:x="51" fg:w="65"/><text x="6.3578%" y="1587.50">/home/e..</text></g><g><title>                ) = self._engine.read(  # type: ignore[attr-defined] (65 samples, 7.78%)</title><rect x="6.1078%" y="1596" width="7.7844%" height="21" fill="rgb(255,208,208)" fg:x="51" fg:w="65"/><text x="6.3578%" y="1609.50">      ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py:234 (read) (65 samples, 7.78%)</title><rect x="6.1078%" y="1618" width="7.7844%" height="21" fill="rgb(255,208,208)" fg:x="51" fg:w="65"/><text x="6.3578%" y="1631.50">/home/e..</text></g><g><title>                chunks = self._reader.read_low_memory(nrows) (65 samples, 7.78%)</title><rect x="6.1078%" y="1640" width="7.7844%" height="21" fill="rgb(255,208,208)" fg:x="51" fg:w="65"/><text x="6.3578%" y="1653.50">      ..</text></g><g class="running-frame"><title>➤ CPU ➤ (38 samples, 4.55%)</title><rect x="9.3413%" y="1662" width="4.5509%" height="21" fill="rgb(255,218,218)" fg:x="78" fg:w="38"/><text x="9.5913%" y="1675.50">➤ C..</text></g><g><title>/home/ec2-user/solar-data-tools/profiling.py:3 (&lt;module&gt;) (117 samples, 14.01%)</title><rect x="0.0000%" y="122" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="135.50">/home/ec2-user/..</text></g><g><title>from solardatatools import DataHandler (117 samples, 14.01%)</title><rect x="0.0000%" y="144" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="157.50">from solardata..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (117 samples, 14.01%)</title><rect x="0.0000%" y="166" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="179.50">&lt;frozen importl..</text></g><g><title> (117 samples, 14.01%)</title><rect x="0.0000%" y="188" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="201.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (117 samples, 14.01%)</title><rect x="0.0000%" y="210" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="223.50">&lt;frozen importl..</text></g><g><title> (117 samples, 14.01%)</title><rect x="0.0000%" y="232" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="245.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (117 samples, 14.01%)</title><rect x="0.0000%" y="254" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="267.50">&lt;frozen importl..</text></g><g><title> (117 samples, 14.01%)</title><rect x="0.0000%" y="276" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="289.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (117 samples, 14.01%)</title><rect x="0.0000%" y="298" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="311.50">&lt;frozen importl..</text></g><g><title> (117 samples, 14.01%)</title><rect x="0.0000%" y="320" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="333.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (117 samples, 14.01%)</title><rect x="0.0000%" y="342" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="355.50">&lt;frozen importl..</text></g><g><title> (117 samples, 14.01%)</title><rect x="0.0000%" y="364" width="14.0120%" height="21" fill="rgb(255,193,193)" fg:x="0" fg:w="117"/><text x="0.2500%" y="377.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/__init__.py:9 (&lt;module&gt;) (71 samples, 8.50%)</title><rect x="5.5090%" y="386" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="399.50">/home/ec..</text></g><g><title>from solardatatools.data_handler import DataHandler (71 samples, 8.50%)</title><rect x="5.5090%" y="408" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="421.50">from so..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (71 samples, 8.50%)</title><rect x="5.5090%" y="430" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="443.50">&lt;frozen ..</text></g><g><title> (71 samples, 8.50%)</title><rect x="5.5090%" y="452" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="465.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (71 samples, 8.50%)</title><rect x="5.5090%" y="474" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="487.50">&lt;frozen ..</text></g><g><title> (71 samples, 8.50%)</title><rect x="5.5090%" y="496" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="509.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (71 samples, 8.50%)</title><rect x="5.5090%" y="518" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="531.50">&lt;frozen ..</text></g><g><title> (71 samples, 8.50%)</title><rect x="5.5090%" y="540" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="553.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (71 samples, 8.50%)</title><rect x="5.5090%" y="562" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="575.50">&lt;frozen ..</text></g><g><title> (71 samples, 8.50%)</title><rect x="5.5090%" y="584" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="597.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (71 samples, 8.50%)</title><rect x="5.5090%" y="606" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="619.50">&lt;frozen ..</text></g><g><title> (71 samples, 8.50%)</title><rect x="5.5090%" y="628" width="8.5030%" height="21" fill="rgb(255,206,206)" fg:x="46" fg:w="71"/><text x="5.7590%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:30 (&lt;module&gt;) (68 samples, 8.14%)</title><rect x="5.8683%" y="650" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="663.50">/home/ec..</text></g><g><title>from solardatatools.data_filling import zero_nighttime, interp_missing (68 samples, 8.14%)</title><rect x="5.8683%" y="672" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="685.50">from so..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (68 samples, 8.14%)</title><rect x="5.8683%" y="694" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="707.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="716" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="729.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="738" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="751.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="760" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="773.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="782" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="795.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="804" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="817.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (68 samples, 8.14%)</title><rect x="5.8683%" y="826" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="839.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="848" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="861.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (68 samples, 8.14%)</title><rect x="5.8683%" y="870" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="883.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="892" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="905.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_filling.py:12 (&lt;module&gt;) (68 samples, 8.14%)</title><rect x="5.8683%" y="914" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="927.50">/home/ec..</text></g><g><title>from solardatatools.algorithms import SunriseSunset (68 samples, 8.14%)</title><rect x="5.8683%" y="936" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="949.50">from so..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (68 samples, 8.14%)</title><rect x="5.8683%" y="958" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="971.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="980" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="993.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="1002" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1015.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1024" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1037.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="1046" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1059.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1068" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1081.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (68 samples, 8.14%)</title><rect x="5.8683%" y="1090" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1103.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1112" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1125.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (68 samples, 8.14%)</title><rect x="5.8683%" y="1134" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1147.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1156" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1169.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/__init__.py:5 (&lt;module&gt;) (68 samples, 8.14%)</title><rect x="5.8683%" y="1178" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1191.50">/home/ec..</text></g><g><title>from solardatatools.algorithms.shade import ShadeAnalysis (68 samples, 8.14%)</title><rect x="5.8683%" y="1200" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1213.50">from so..</text></g><g><title>&lt;frozen importlib._bootstrap&gt;:1007 (_find_and_load) (68 samples, 8.14%)</title><rect x="5.8683%" y="1222" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1235.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1244" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1257.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:986 (_find_and_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="1266" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1279.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1288" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1301.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:680 (_load_unlocked) (68 samples, 8.14%)</title><rect x="5.8683%" y="1310" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1323.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1332" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1345.50"></text></g><g><title>&lt;frozen importlib._bootstrap_external&gt;:850 (exec_module) (68 samples, 8.14%)</title><rect x="5.8683%" y="1354" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1367.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1376" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1389.50"></text></g><g><title>&lt;frozen importlib._bootstrap&gt;:228 (_call_with_frames_removed) (68 samples, 8.14%)</title><rect x="5.8683%" y="1398" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1411.50">&lt;frozen ..</text></g><g><title> (68 samples, 8.14%)</title><rect x="5.8683%" y="1420" width="8.1437%" height="21" fill="rgb(255,207,207)" fg:x="49" fg:w="68"/><text x="6.1183%" y="1433.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/shade.py:27 (&lt;module&gt;) (66 samples, 7.90%)</title><rect x="6.1078%" y="1442" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1455.50">/home/ec..</text></g><g><title>DATA_CORPUS = pd.read_csv( (66 samples, 7.90%)</title><rect x="6.1078%" y="1464" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1477.50">DATA_CO..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:948 (read_csv) (66 samples, 7.90%)</title><rect x="6.1078%" y="1486" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1499.50">/home/ec..</text></g><g><title>    return _read(filepath_or_buffer, kwds) (66 samples, 7.90%)</title><rect x="6.1078%" y="1508" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1521.50">    ret..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:617 (_read) (66 samples, 7.90%)</title><rect x="6.1078%" y="1530" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1543.50">/home/ec..</text></g><g><title>        return parser.read(nrows) (66 samples, 7.90%)</title><rect x="6.1078%" y="1552" width="7.9042%" height="21" fill="rgb(255,207,207)" fg:x="51" fg:w="66"/><text x="6.3578%" y="1565.50">       ..</text></g><g><title>/home/ec2-user/solar-data-tools/profiling.py:31 (&lt;module&gt;) (3 samples, 0.36%)</title><rect x="14.0120%" y="122" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="135.50"></text></g><g><title>                df = pd.read_csv(file_path) (3 samples, 0.36%)</title><rect x="14.0120%" y="144" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="157.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:948 (read_csv) (3 samples, 0.36%)</title><rect x="14.0120%" y="166" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="179.50"></text></g><g><title>    return _read(filepath_or_buffer, kwds) (3 samples, 0.36%)</title><rect x="14.0120%" y="188" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="201.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:617 (_read) (3 samples, 0.36%)</title><rect x="14.0120%" y="210" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="223.50"></text></g><g><title>        return parser.read(nrows) (3 samples, 0.36%)</title><rect x="14.0120%" y="232" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="245.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/readers.py:1748 (read) (3 samples, 0.36%)</title><rect x="14.0120%" y="254" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="267.50"></text></g><g><title>                ) = self._engine.read(  # type: ignore[attr-defined] (3 samples, 0.36%)</title><rect x="14.0120%" y="276" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="289.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/io/parsers/c_parser_wrapper.py:234 (read) (3 samples, 0.36%)</title><rect x="14.0120%" y="298" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="311.50"></text></g><g><title>                chunks = self._reader.read_low_memory(nrows) (3 samples, 0.36%)</title><rect x="14.0120%" y="320" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="333.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="14.0120%" y="342" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="117" fg:w="3"/><text x="14.2620%" y="355.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:54 (make_time_series) (2 samples, 0.24%)</title><rect x="14.3713%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="120" fg:w="2"/><text x="14.6213%" y="223.50"></text></g><g><title>    df.sort_values(timestamp_key, inplace=True) (2 samples, 0.24%)</title><rect x="14.3713%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="120" fg:w="2"/><text x="14.6213%" y="245.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/frame.py:6958 (sort_values) (2 samples, 0.24%)</title><rect x="14.3713%" y="254" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="120" fg:w="2"/><text x="14.6213%" y="267.50"></text></g><g><title>            indexer = nargsort( (2 samples, 0.24%)</title><rect x="14.3713%" y="276" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="120" fg:w="2"/><text x="14.6213%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:55 (make_time_series) (2 samples, 0.24%)</title><rect x="14.6108%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="122" fg:w="2"/><text x="14.8608%" y="223.50"></text></g><g><title>    time_index = pd.to_datetime(df[timestamp_key].sort_values()) (2 samples, 0.24%)</title><rect x="14.6108%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="122" fg:w="2"/><text x="14.8608%" y="245.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:61 (make_time_series) (2 samples, 0.24%)</title><rect x="14.8503%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="124" fg:w="2"/><text x="15.1003%" y="223.50"></text></g><g><title>    keys = grouped.groups.keys() (2 samples, 0.24%)</title><rect x="14.8503%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="124" fg:w="2"/><text x="15.1003%" y="245.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/groupby/groupby.py:816 (groups) (2 samples, 0.24%)</title><rect x="14.8503%" y="254" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="124" fg:w="2"/><text x="15.1003%" y="267.50"></text></g><g><title>        return self.grouper.groups (2 samples, 0.24%)</title><rect x="14.8503%" y="276" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="124" fg:w="2"/><text x="15.1003%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:61 (__init__) (7 samples, 0.84%)</title><rect x="14.3713%" y="166" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="120" fg:w="7"/><text x="14.6213%" y="179.50"></text></g><g><title>                data_frame, keys = make_time_series(data_frame) (7 samples, 0.84%)</title><rect x="14.3713%" y="188" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="120" fg:w="7"/><text x="14.6213%" y="201.50"></text></g><g><title>/home/ec2-user/solar-data-tools/profiling.py:34 (&lt;module&gt;) (8 samples, 0.96%)</title><rect x="14.3713%" y="122" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="120" fg:w="8"/><text x="14.6213%" y="135.50"></text></g><g><title>                dh = DataHandler(df, convert_to_ts=True) (8 samples, 0.96%)</title><rect x="14.3713%" y="144" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="120" fg:w="8"/><text x="14.6213%" y="157.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:133 (standardize_time_axis) (3 samples, 0.36%)</title><rect x="15.3293%" y="210" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="223.50"></text></g><g><title>    df.index = pd.to_datetime(df.index) (3 samples, 0.36%)</title><rect x="15.3293%" y="232" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="245.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/tools/datetimes.py:1117 (to_datetime) (3 samples, 0.36%)</title><rect x="15.3293%" y="254" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="267.50"></text></g><g><title>        cache_array = _maybe_cache(arg, format, cache, convert_listlike) (3 samples, 0.36%)</title><rect x="15.3293%" y="276" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="289.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/tools/datetimes.py:246 (_maybe_cache) (3 samples, 0.36%)</title><rect x="15.3293%" y="298" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="311.50"></text></g><g><title>        if not should_cache(arg): (3 samples, 0.36%)</title><rect x="15.3293%" y="320" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="333.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/tools/datetimes.py:208 (should_cache) (3 samples, 0.36%)</title><rect x="15.3293%" y="342" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="355.50"></text></g><g><title>        unique_elements = set(islice(arg, check_count)) (3 samples, 0.36%)</title><rect x="15.3293%" y="364" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/arrays/datetimes.py:654 (__iter__) (3 samples, 0.36%)</title><rect x="15.3293%" y="386" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="399.50"></text></g><g><title>                converted = ints_to_pydatetime( (3 samples, 0.36%)</title><rect x="15.3293%" y="408" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="421.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="15.3293%" y="430" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="128" fg:w="3"/><text x="15.5793%" y="443.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:235 (run_pipeline) (5 samples, 0.60%)</title><rect x="15.3293%" y="166" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="128" fg:w="5"/><text x="15.5793%" y="179.50"></text></g><g><title>            self.data_frame, sn_deviation = standardize_time_axis( (5 samples, 0.60%)</title><rect x="15.3293%" y="188" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="128" fg:w="5"/><text x="15.5793%" y="201.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/time_axis_manipulation.py:140 (standardize_time_axis) (2 samples, 0.24%)</title><rect x="15.6886%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="131" fg:w="2"/><text x="15.9386%" y="223.50"></text></g><g><title>        avg_day = s.groupby(s.index.time).mean() (2 samples, 0.24%)</title><rect x="15.6886%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="131" fg:w="2"/><text x="15.9386%" y="245.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:200 (run_optimizer) (2 samples, 0.24%)</title><rect x="16.0479%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="134" fg:w="2"/><text x="16.2979%" y="223.50"></text></g><g><title>            bool_msk = detect_sun(data, th) (2 samples, 0.24%)</title><rect x="16.0479%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="134" fg:w="2"/><text x="16.2979%" y="245.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:201 (run_optimizer) (2 samples, 0.24%)</title><rect x="16.2874%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="136" fg:w="2"/><text x="16.5374%" y="223.50"></text></g><g><title>            measured = rise_set_rough(bool_msk) (2 samples, 0.24%)</title><rect x="16.2874%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="136" fg:w="2"/><text x="16.5374%" y="245.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/components/aggregate.py:28 (prepare_attributes) (2 samples, 0.24%)</title><rect x="16.5269%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="138" fg:w="2"/><text x="16.7769%" y="399.50"></text></g><g><title>            c.prepare_attributes(T, p=p) (2 samples, 0.24%)</title><rect x="16.5269%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="138" fg:w="2"/><text x="16.7769%" y="421.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:161 (_osd_tl1_l2d2p365) (5 samples, 0.60%)</title><rect x="16.5269%" y="298" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="138" fg:w="5"/><text x="16.7769%" y="311.50"></text></g><g><title>    problem = Problem(signal, classes, use_set=use_ixs) (5 samples, 0.60%)</title><rect x="16.5269%" y="320" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="138" fg:w="5"/><text x="16.7769%" y="333.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:25 (__init__) (5 samples, 0.60%)</title><rect x="16.5269%" y="342" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="138" fg:w="5"/><text x="16.7769%" y="355.50"></text></g><g><title>            c.prepare_attributes(T, p) (5 samples, 0.60%)</title><rect x="16.5269%" y="364" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="138" fg:w="5"/><text x="16.7769%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/components/base_graph_class.py:61 (prepare_attributes) (2 samples, 0.24%)</title><rect x="16.8862%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="141" fg:w="2"/><text x="17.1362%" y="399.50"></text></g><g><title>            self._make_A() (2 samples, 0.24%)</title><rect x="16.8862%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="141" fg:w="2"/><text x="17.1362%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:42 (make_graph_form) (2 samples, 0.24%)</title><rect x="17.4850%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="399.50"></text></g><g><title>        Ar = sp.block_diag([d[&apos;B&apos;] for d in dicts]) (2 samples, 0.24%)</title><rect x="17.4850%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_construct.py:759 (block_diag) (2 samples, 0.24%)</title><rect x="17.4850%" y="430" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="443.50"></text></g><g><title>            a = a.tocoo() (2 samples, 0.24%)</title><rect x="17.4850%" y="452" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_dok.py:387 (tocoo) (2 samples, 0.24%)</title><rect x="17.4850%" y="474" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="487.50"></text></g><g><title>            return self._coo_container(self.shape, dtype=self.dtype) (2 samples, 0.24%)</title><rect x="17.4850%" y="496" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="146" fg:w="2"/><text x="17.7350%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:88 (decompose) (7 samples, 0.84%)</title><rect x="17.1257%" y="342" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="143" fg:w="7"/><text x="17.3757%" y="355.50"></text></g><g><title>            canonical_form = self.make_graph_form() (7 samples, 0.84%)</title><rect x="17.1257%" y="364" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="143" fg:w="7"/><text x="17.3757%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:162 (_solve_cvx) (2 samples, 0.24%)</title><rect x="17.9641%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="150" fg:w="2"/><text x="18.2141%" y="399.50"></text></g><g><title>        cost = 0.5 * cvx.quad_form(x, data[&apos;P&apos;]) (2 samples, 0.24%)</title><rect x="17.9641%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="150" fg:w="2"/><text x="18.2141%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data) (10 samples, 1.20%)</title><rect x="18.3234%" y="518" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="531.50"></text></g><g><title>            solving_chain = self._construct_chain( (10 samples, 1.20%)</title><rect x="18.3234%" y="540" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain) (10 samples, 1.20%)</title><rect x="18.3234%" y="562" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="575.50"></text></g><g><title>        return construct_solving_chain(self, candidate_solvers, gp=gp, (10 samples, 1.20%)</title><rect x="18.3234%" y="584" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chain) (10 samples, 1.20%)</title><rect x="18.3234%" y="606" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="619.50"></text></g><g><title>    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts) (10 samples, 1.20%)</title><rect x="18.3234%" y="628" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_problem_class) (10 samples, 1.20%)</title><rect x="18.3234%" y="650" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="663.50"></text></g><g><title>    if not gp and not problem.is_dcp(): (10 samples, 1.20%)</title><rect x="18.3234%" y="672" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="694" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="707.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="716" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp) (10 samples, 1.20%)</title><rect x="18.3234%" y="738" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="751.50"></text></g><g><title>        return all( (10 samples, 1.20%)</title><rect x="18.3234%" y="760" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;) (10 samples, 1.20%)</title><rect x="18.3234%" y="782" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="795.50"></text></g><g><title>          expr.is_dcp(dpp) for expr in self.constraints + [self.objective]) (10 samples, 1.20%)</title><rect x="18.3234%" y="804" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp) (10 samples, 1.20%)</title><rect x="18.3234%" y="826" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="839.50"></text></g><g><title>        return self.args[0].is_convex() (10 samples, 1.20%)</title><rect x="18.3234%" y="848" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="861.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="870" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="883.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="892" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (10 samples, 1.20%)</title><rect x="18.3234%" y="914" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="927.50"></text></g><g><title>                if not (arg.is_affine() or (10 samples, 1.20%)</title><rect x="18.3234%" y="936" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="949.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="958" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="971.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="980" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="993.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (10 samples, 1.20%)</title><rect x="18.3234%" y="1002" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1015.50"></text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (10 samples, 1.20%)</title><rect x="18.3234%" y="1024" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1037.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="1046" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1059.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="1068" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1081.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (10 samples, 1.20%)</title><rect x="18.3234%" y="1090" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1103.50"></text></g><g><title>                if not (arg.is_affine() or (10 samples, 1.20%)</title><rect x="18.3234%" y="1112" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1125.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="1134" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1147.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="1156" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (10 samples, 1.20%)</title><rect x="18.3234%" y="1178" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1191.50"></text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (10 samples, 1.20%)</title><rect x="18.3234%" y="1200" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1213.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="18.3234%" y="1222" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1235.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="18.3234%" y="1244" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="153" fg:w="10"/><text x="18.5734%" y="1257.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:193 (is_concave) (9 samples, 1.08%)</title><rect x="18.4431%" y="1266" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1279.50"></text></g><g><title>        elif self.is_atom_concave(): (9 samples, 1.08%)</title><rect x="18.4431%" y="1288" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1301.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/quad_form.py:74 (is_atom_concave) (9 samples, 1.08%)</title><rect x="18.4431%" y="1310" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1323.50"></text></g><g><title>        return P.is_constant() and P.is_nsd() (9 samples, 1.08%)</title><rect x="18.4431%" y="1332" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1345.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (9 samples, 1.08%)</title><rect x="18.4431%" y="1354" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1367.50"></text></g><g><title>        result = func(self, *args, **kwargs) (9 samples, 1.08%)</title><rect x="18.4431%" y="1376" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1389.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/constants/constant.py:244 (is_nsd) (9 samples, 1.08%)</title><rect x="18.4431%" y="1398" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1411.50"></text></g><g><title>            self._nsd_test = eig_util.is_psd_within_tol(-self.value, EIGVAL_TOL) (9 samples, 1.08%)</title><rect x="18.4431%" y="1420" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1433.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:77 (is_psd_within_tol) (9 samples, 1.08%)</title><rect x="18.4431%" y="1442" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1455.50"></text></g><g><title>    if is_diagonal(A): (9 samples, 1.08%)</title><rect x="18.4431%" y="1464" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="154" fg:w="9"/><text x="18.6931%" y="1477.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:45 (is_diagonal) (8 samples, 0.96%)</title><rect x="18.5629%" y="1486" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="155" fg:w="8"/><text x="18.8129%" y="1499.50"></text></g><g><title>    return np.allclose(off_diagonal_elements, 0) (8 samples, 0.96%)</title><rect x="18.5629%" y="1508" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="155" fg:w="8"/><text x="18.8129%" y="1521.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2241 (allclose) (8 samples, 0.96%)</title><rect x="18.5629%" y="1530" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="155" fg:w="8"/><text x="18.8129%" y="1543.50"></text></g><g><title>    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan)) (8 samples, 0.96%)</title><rect x="18.5629%" y="1552" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="155" fg:w="8"/><text x="18.8129%" y="1565.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2351 (isclose) (7 samples, 0.84%)</title><rect x="18.6826%" y="1574" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="156" fg:w="7"/><text x="18.9326%" y="1587.50"></text></g><g><title>        return within_tol(x, y, atol, rtol) (7 samples, 0.84%)</title><rect x="18.6826%" y="1596" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="156" fg:w="7"/><text x="18.9326%" y="1609.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2332 (within_tol) (7 samples, 0.84%)</title><rect x="18.6826%" y="1618" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="156" fg:w="7"/><text x="18.9326%" y="1631.50"></text></g><g><title>            return less_equal(abs(x-y), atol + rtol * abs(y)) (7 samples, 0.84%)</title><rect x="18.6826%" y="1640" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="156" fg:w="7"/><text x="18.9326%" y="1653.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (7 samples, 0.84%)</title><rect x="18.6826%" y="1662" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="156" fg:w="7"/><text x="18.9326%" y="1675.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/canonicalization.py:67 (apply) (2 samples, 0.24%)</title><rect x="19.7605%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="165" fg:w="2"/><text x="20.0105%" y="663.50"></text></g><g><title>            canon_constr, aux_constr = self.canonicalize_tree( (2 samples, 0.24%)</title><rect x="19.7605%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="165" fg:w="2"/><text x="20.0105%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp2symbolic_qp.py:61 (apply) (5 samples, 0.60%)</title><rect x="19.5210%" y="606" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="163" fg:w="5"/><text x="19.7710%" y="619.50"></text></g><g><title>        return super(Qp2SymbolicQp, self).apply(problem) (5 samples, 0.60%)</title><rect x="19.5210%" y="628" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="163" fg:w="5"/><text x="19.7710%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp_matrix_stuffing.py:264 (apply) (2 samples, 0.24%)</title><rect x="20.3593%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="170" fg:w="2"/><text x="20.6093%" y="619.50"></text></g><g><title>        params_to_Ab = extractor.affine(expr_list) (2 samples, 0.24%)</title><rect x="20.3593%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="170" fg:w="2"/><text x="20.6093%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/coeff_extractor.py:86 (affine) (2 samples, 0.24%)</title><rect x="20.3593%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="170" fg:w="2"/><text x="20.6093%" y="663.50"></text></g><g><title>        return canonInterface.get_problem_matrix(op_list, (2 samples, 0.24%)</title><rect x="20.3593%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="170" fg:w="2"/><text x="20.6093%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (22 samples, 2.63%)</title><rect x="18.3234%" y="474" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="153" fg:w="22"/><text x="18.5734%" y="487.50">/..</text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (22 samples, 2.63%)</title><rect x="18.3234%" y="496" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="153" fg:w="22"/><text x="18.5734%" y="509.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:683 (get_problem_data) (12 samples, 1.44%)</title><rect x="19.5210%" y="518" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="163" fg:w="12"/><text x="19.7710%" y="531.50"></text></g><g><title>            data, inverse_data = solving_chain.apply(self, verbose) (12 samples, 1.44%)</title><rect x="19.5210%" y="540" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="163" fg:w="12"/><text x="19.7710%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/chain.py:76 (apply) (12 samples, 1.44%)</title><rect x="19.5210%" y="562" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="163" fg:w="12"/><text x="19.7710%" y="575.50"></text></g><g><title>            problem, inv = r.apply(problem) (12 samples, 1.44%)</title><rect x="19.5210%" y="584" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="163" fg:w="12"/><text x="19.7710%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/qp_solver.py:87 (apply) (2 samples, 0.24%)</title><rect x="20.7186%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="619.50"></text></g><g><title>            A = AF[:len_eq, :] (2 samples, 0.24%)</title><rect x="20.7186%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_index.py:66 (__getitem__) (2 samples, 0.24%)</title><rect x="20.7186%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="663.50"></text></g><g><title>                return self._get_sliceXslice(row, col) (2 samples, 0.24%)</title><rect x="20.7186%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_compressed.py:664 (_get_sliceXslice) (2 samples, 0.24%)</title><rect x="20.7186%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="707.50"></text></g><g><title>            return self._get_submatrix(major, minor, copy=True) (2 samples, 0.24%)</title><rect x="20.7186%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="173" fg:w="2"/><text x="20.9686%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:102 (solve_via_data) (3 samples, 0.36%)</title><rect x="20.9581%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="175" fg:w="3"/><text x="21.2081%" y="575.50"></text></g><g><title>                solver.setup(P, q, A, lA, uA, verbose=verbose, **solver_opts) (3 samples, 0.36%)</title><rect x="20.9581%" y="584" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="175" fg:w="3"/><text x="21.2081%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:37 (setup) (2 samples, 0.24%)</title><rect x="21.0778%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="176" fg:w="2"/><text x="21.3278%" y="619.50"></text></g><g><title>        self._model.setup(*unpacked_data, **settings) (2 samples, 0.24%)</title><rect x="21.0778%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="176" fg:w="2"/><text x="21.3278%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="21.0778%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="176" fg:w="2"/><text x="21.3278%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (59 samples, 7.07%)</title><rect x="20.9581%" y="474" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="175" fg:w="59"/><text x="21.2081%" y="487.50">/home/..</text></g><g><title>        solution = solving_chain.solve_via_data( (59 samples, 7.07%)</title><rect x="20.9581%" y="496" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="175" fg:w="59"/><text x="21.2081%" y="509.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (59 samples, 7.07%)</title><rect x="20.9581%" y="518" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="175" fg:w="59"/><text x="21.2081%" y="531.50">/home/..</text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (59 samples, 7.07%)</title><rect x="20.9581%" y="540" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="175" fg:w="59"/><text x="21.2081%" y="553.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (56 samples, 6.71%)</title><rect x="21.3174%" y="562" width="6.7066%" height="21" fill="rgb(255,211,211)" fg:x="178" fg:w="56"/><text x="21.5674%" y="575.50">/home/..</text></g><g><title>        results = solver.solve() (56 samples, 6.71%)</title><rect x="21.3174%" y="584" width="6.7066%" height="21" fill="rgb(255,211,211)" fg:x="178" fg:w="56"/><text x="21.5674%" y="597.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (56 samples, 6.71%)</title><rect x="21.3174%" y="606" width="6.7066%" height="21" fill="rgb(255,211,211)" fg:x="178" fg:w="56"/><text x="21.5674%" y="619.50">/home/..</text></g><g><title>        results = self._model.solve() (56 samples, 6.71%)</title><rect x="21.3174%" y="628" width="6.7066%" height="21" fill="rgb(255,211,211)" fg:x="178" fg:w="56"/><text x="21.5674%" y="641.50">     ..</text></g><g class="running-frame"><title>➤ CPU ➤ (56 samples, 6.71%)</title><rect x="21.3174%" y="650" width="6.7066%" height="21" fill="rgb(255,211,211)" fg:x="178" fg:w="56"/><text x="21.5674%" y="663.50">➤ CPU ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:231 (run_optimizer) (97 samples, 11.62%)</title><rect x="16.5269%" y="210" width="11.6168%" height="21" fill="rgb(255,198,198)" fg:x="138" fg:w="97"/><text x="16.7769%" y="223.50">/home/ec2-us..</text></g><g><title>                    sr_smoothed = tl1_l2d2p365( (97 samples, 11.62%)</title><rect x="16.5269%" y="232" width="11.6168%" height="21" fill="rgb(255,198,198)" fg:x="138" fg:w="97"/><text x="16.7769%" y="245.50">           ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (97 samples, 11.62%)</title><rect x="16.5269%" y="254" width="11.6168%" height="21" fill="rgb(255,198,198)" fg:x="138" fg:w="97"/><text x="16.7769%" y="267.50">/home/ec2-us..</text></g><g><title>        res = _osd_tl1_l2d2p365( (97 samples, 11.62%)</title><rect x="16.5269%" y="276" width="11.6168%" height="21" fill="rgb(255,198,198)" fg:x="138" fg:w="97"/><text x="16.7769%" y="289.50">        res..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (92 samples, 11.02%)</title><rect x="17.1257%" y="298" width="11.0180%" height="21" fill="rgb(255,200,200)" fg:x="143" fg:w="92"/><text x="17.3757%" y="311.50">/home/ec2-us..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (92 samples, 11.02%)</title><rect x="17.1257%" y="320" width="11.0180%" height="21" fill="rgb(255,200,200)" fg:x="143" fg:w="92"/><text x="17.3757%" y="333.50">    problem..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (85 samples, 10.18%)</title><rect x="17.9641%" y="342" width="10.1796%" height="21" fill="rgb(255,202,202)" fg:x="150" fg:w="85"/><text x="18.2141%" y="355.50">/home/ec2-..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (85 samples, 10.18%)</title><rect x="17.9641%" y="364" width="10.1796%" height="21" fill="rgb(255,202,202)" fg:x="150" fg:w="85"/><text x="18.2141%" y="377.50">         ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (82 samples, 9.82%)</title><rect x="18.3234%" y="386" width="9.8204%" height="21" fill="rgb(255,203,203)" fg:x="153" fg:w="82"/><text x="18.5734%" y="399.50">/home/ec2-..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (82 samples, 9.82%)</title><rect x="18.3234%" y="408" width="9.8204%" height="21" fill="rgb(255,203,203)" fg:x="153" fg:w="82"/><text x="18.5734%" y="421.50">        c..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (82 samples, 9.82%)</title><rect x="18.3234%" y="430" width="9.8204%" height="21" fill="rgb(255,203,203)" fg:x="153" fg:w="82"/><text x="18.5734%" y="443.50">/home/ec2-..</text></g><g><title>        return solve_func(self, *args, **kwargs) (82 samples, 9.82%)</title><rect x="18.3234%" y="452" width="9.8204%" height="21" fill="rgb(255,203,203)" fg:x="153" fg:w="82"/><text x="18.5734%" y="465.50">        r..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:161 (_osd_tl1_l2d2p365) (5 samples, 0.60%)</title><rect x="28.1437%" y="298" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="235" fg:w="5"/><text x="28.3937%" y="311.50"></text></g><g><title>    problem = Problem(signal, classes, use_set=use_ixs) (5 samples, 0.60%)</title><rect x="28.1437%" y="320" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="235" fg:w="5"/><text x="28.3937%" y="333.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:25 (__init__) (4 samples, 0.48%)</title><rect x="28.2635%" y="342" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="236" fg:w="4"/><text x="28.5135%" y="355.50"></text></g><g><title>            c.prepare_attributes(T, p) (4 samples, 0.48%)</title><rect x="28.2635%" y="364" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="236" fg:w="4"/><text x="28.5135%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/components/base_graph_class.py:61 (prepare_attributes) (3 samples, 0.36%)</title><rect x="28.3832%" y="386" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="237" fg:w="3"/><text x="28.6332%" y="399.50"></text></g><g><title>            self._make_A() (3 samples, 0.36%)</title><rect x="28.3832%" y="408" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="237" fg:w="3"/><text x="28.6332%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/components/base_graph_class.py:118 (_make_A) (2 samples, 0.24%)</title><rect x="28.5030%" y="430" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="238" fg:w="2"/><text x="28.7530%" y="443.50"></text></g><g><title>            self._A = m1 - 2 * m2 + m3 (2 samples, 0.24%)</title><rect x="28.5030%" y="452" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="238" fg:w="2"/><text x="28.7530%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/interface/scipy_wrapper.py:41 (new_method) (2 samples, 0.24%)</title><rect x="28.5030%" y="474" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="238" fg:w="2"/><text x="28.7530%" y="487.50"></text></g><g><title>            return method(self, other) (2 samples, 0.24%)</title><rect x="28.5030%" y="496" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="238" fg:w="2"/><text x="28.7530%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:39 (make_graph_form) (2 samples, 0.24%)</title><rect x="28.7425%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="240" fg:w="2"/><text x="28.9925%" y="399.50"></text></g><g><title>        Pz = sp.block_diag([d[&apos;Pz&apos;] for d in dicts]) (2 samples, 0.24%)</title><rect x="28.7425%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="240" fg:w="2"/><text x="28.9925%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_construct.py:759 (block_diag) (2 samples, 0.24%)</title><rect x="28.7425%" y="430" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="240" fg:w="2"/><text x="28.9925%" y="443.50"></text></g><g><title>            a = a.tocoo() (2 samples, 0.24%)</title><rect x="28.7425%" y="452" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="240" fg:w="2"/><text x="28.9925%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:88 (decompose) (7 samples, 0.84%)</title><rect x="28.7425%" y="342" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="240" fg:w="7"/><text x="28.9925%" y="355.50"></text></g><g><title>            canonical_form = self.make_graph_form() (7 samples, 0.84%)</title><rect x="28.7425%" y="364" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="240" fg:w="7"/><text x="28.9925%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:162 (_solve_cvx) (2 samples, 0.24%)</title><rect x="29.5808%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="247" fg:w="2"/><text x="29.8308%" y="399.50"></text></g><g><title>        cost = 0.5 * cvx.quad_form(x, data[&apos;P&apos;]) (2 samples, 0.24%)</title><rect x="29.5808%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="247" fg:w="2"/><text x="29.8308%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:77 (is_psd_within_tol) (7 samples, 0.84%)</title><rect x="30.2994%" y="1442" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="253" fg:w="7"/><text x="30.5494%" y="1455.50"></text></g><g><title>    if is_diagonal(A): (7 samples, 0.84%)</title><rect x="30.2994%" y="1464" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="253" fg:w="7"/><text x="30.5494%" y="1477.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:45 (is_diagonal) (6 samples, 0.72%)</title><rect x="30.4192%" y="1486" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="254" fg:w="6"/><text x="30.6692%" y="1499.50"></text></g><g><title>    return np.allclose(off_diagonal_elements, 0) (6 samples, 0.72%)</title><rect x="30.4192%" y="1508" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="254" fg:w="6"/><text x="30.6692%" y="1521.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2241 (allclose) (6 samples, 0.72%)</title><rect x="30.4192%" y="1530" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="254" fg:w="6"/><text x="30.6692%" y="1543.50"></text></g><g><title>    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan)) (6 samples, 0.72%)</title><rect x="30.4192%" y="1552" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="254" fg:w="6"/><text x="30.6692%" y="1565.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2351 (isclose) (5 samples, 0.60%)</title><rect x="30.5389%" y="1574" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="255" fg:w="5"/><text x="30.7889%" y="1587.50"></text></g><g><title>        return within_tol(x, y, atol, rtol) (5 samples, 0.60%)</title><rect x="30.5389%" y="1596" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="255" fg:w="5"/><text x="30.7889%" y="1609.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2332 (within_tol) (5 samples, 0.60%)</title><rect x="30.5389%" y="1618" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="255" fg:w="5"/><text x="30.7889%" y="1631.50"></text></g><g><title>            return less_equal(abs(x-y), atol + rtol * abs(y)) (5 samples, 0.60%)</title><rect x="30.5389%" y="1640" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="255" fg:w="5"/><text x="30.7889%" y="1653.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (5 samples, 0.60%)</title><rect x="30.5389%" y="1662" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="255" fg:w="5"/><text x="30.7889%" y="1675.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (10 samples, 1.20%)</title><rect x="30.0599%" y="1090" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1103.50"></text></g><g><title>                if not (arg.is_affine() or (10 samples, 1.20%)</title><rect x="30.0599%" y="1112" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1125.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="30.0599%" y="1134" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1147.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="30.0599%" y="1156" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1169.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (10 samples, 1.20%)</title><rect x="30.0599%" y="1178" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1191.50"></text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (10 samples, 1.20%)</title><rect x="30.0599%" y="1200" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1213.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (10 samples, 1.20%)</title><rect x="30.0599%" y="1222" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1235.50"></text></g><g><title>        result = func(self, *args, **kwargs) (10 samples, 1.20%)</title><rect x="30.0599%" y="1244" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="251" fg:w="10"/><text x="30.3099%" y="1257.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:193 (is_concave) (9 samples, 1.08%)</title><rect x="30.1796%" y="1266" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1279.50"></text></g><g><title>        elif self.is_atom_concave(): (9 samples, 1.08%)</title><rect x="30.1796%" y="1288" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1301.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/quad_form.py:74 (is_atom_concave) (9 samples, 1.08%)</title><rect x="30.1796%" y="1310" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1323.50"></text></g><g><title>        return P.is_constant() and P.is_nsd() (9 samples, 1.08%)</title><rect x="30.1796%" y="1332" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1345.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (9 samples, 1.08%)</title><rect x="30.1796%" y="1354" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1367.50"></text></g><g><title>        result = func(self, *args, **kwargs) (9 samples, 1.08%)</title><rect x="30.1796%" y="1376" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1389.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/constants/constant.py:244 (is_nsd) (9 samples, 1.08%)</title><rect x="30.1796%" y="1398" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1411.50"></text></g><g><title>            self._nsd_test = eig_util.is_psd_within_tol(-self.value, EIGVAL_TOL) (9 samples, 1.08%)</title><rect x="30.1796%" y="1420" width="1.0778%" height="21" fill="rgb(255,234,234)" fg:x="252" fg:w="9"/><text x="30.4296%" y="1433.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chain) (12 samples, 1.44%)</title><rect x="29.9401%" y="606" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="619.50"></text></g><g><title>    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts) (12 samples, 1.44%)</title><rect x="29.9401%" y="628" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_problem_class) (12 samples, 1.44%)</title><rect x="29.9401%" y="650" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="663.50"></text></g><g><title>    if not gp and not problem.is_dcp(): (12 samples, 1.44%)</title><rect x="29.9401%" y="672" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (12 samples, 1.44%)</title><rect x="29.9401%" y="694" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="707.50"></text></g><g><title>        result = func(self, *args, **kwargs) (12 samples, 1.44%)</title><rect x="29.9401%" y="716" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp) (12 samples, 1.44%)</title><rect x="29.9401%" y="738" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="751.50"></text></g><g><title>        return all( (12 samples, 1.44%)</title><rect x="29.9401%" y="760" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;) (12 samples, 1.44%)</title><rect x="29.9401%" y="782" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="795.50"></text></g><g><title>          expr.is_dcp(dpp) for expr in self.constraints + [self.objective]) (12 samples, 1.44%)</title><rect x="29.9401%" y="804" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="250" fg:w="12"/><text x="30.1901%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp) (11 samples, 1.32%)</title><rect x="30.0599%" y="826" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="839.50"></text></g><g><title>        return self.args[0].is_convex() (11 samples, 1.32%)</title><rect x="30.0599%" y="848" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="861.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (11 samples, 1.32%)</title><rect x="30.0599%" y="870" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="883.50"></text></g><g><title>        result = func(self, *args, **kwargs) (11 samples, 1.32%)</title><rect x="30.0599%" y="892" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (11 samples, 1.32%)</title><rect x="30.0599%" y="914" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="927.50"></text></g><g><title>                if not (arg.is_affine() or (11 samples, 1.32%)</title><rect x="30.0599%" y="936" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="949.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (11 samples, 1.32%)</title><rect x="30.0599%" y="958" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="971.50"></text></g><g><title>        result = func(self, *args, **kwargs) (11 samples, 1.32%)</title><rect x="30.0599%" y="980" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="993.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (11 samples, 1.32%)</title><rect x="30.0599%" y="1002" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="1015.50"></text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (11 samples, 1.32%)</title><rect x="30.0599%" y="1024" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="1037.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (11 samples, 1.32%)</title><rect x="30.0599%" y="1046" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="1059.50"></text></g><g><title>        result = func(self, *args, **kwargs) (11 samples, 1.32%)</title><rect x="30.0599%" y="1068" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="251" fg:w="11"/><text x="30.3099%" y="1081.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data) (13 samples, 1.56%)</title><rect x="29.9401%" y="518" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="250" fg:w="13"/><text x="30.1901%" y="531.50"></text></g><g><title>            solving_chain = self._construct_chain( (13 samples, 1.56%)</title><rect x="29.9401%" y="540" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="250" fg:w="13"/><text x="30.1901%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain) (13 samples, 1.56%)</title><rect x="29.9401%" y="562" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="250" fg:w="13"/><text x="30.1901%" y="575.50"></text></g><g><title>        return construct_solving_chain(self, candidate_solvers, gp=gp, (13 samples, 1.56%)</title><rect x="29.9401%" y="584" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="250" fg:w="13"/><text x="30.1901%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/coeff_extractor.py:200 (quad_form) (2 samples, 0.24%)</title><rect x="31.6168%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="264" fg:w="2"/><text x="31.8668%" y="707.50"></text></g><g><title>        coeffs, constant = self.extract_quadratic_coeffs(root.args[0], (2 samples, 0.24%)</title><rect x="31.6168%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="264" fg:w="2"/><text x="31.8668%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp_matrix_stuffing.py:245 (apply) (3 samples, 0.36%)</title><rect x="31.6168%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="264" fg:w="3"/><text x="31.8668%" y="619.50"></text></g><g><title>        params_to_P, params_to_q, flattened_variable = self.stuffed_objective( (3 samples, 0.36%)</title><rect x="31.6168%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="264" fg:w="3"/><text x="31.8668%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp_matrix_stuffing.py:230 (stuffed_objective) (3 samples, 0.36%)</title><rect x="31.6168%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="264" fg:w="3"/><text x="31.8668%" y="663.50"></text></g><g><title>        params_to_P, params_to_q = extractor.quad_form(expr) (3 samples, 0.36%)</title><rect x="31.6168%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="264" fg:w="3"/><text x="31.8668%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/cvxcore/python/canonInterface.py:335 (get_problem_matrix) (2 samples, 0.24%)</title><rect x="31.9760%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="267" fg:w="2"/><text x="32.2260%" y="707.50"></text></g><g><title>            build_lin_op_tree(lin, linPy_to_linC) (2 samples, 0.24%)</title><rect x="31.9760%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="267" fg:w="2"/><text x="32.2260%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/cvxcore/python/canonInterface.py:549 (build_lin_op_tree) (2 samples, 0.24%)</title><rect x="31.9760%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="267" fg:w="2"/><text x="32.2260%" y="751.50"></text></g><g><title>        make_linC_from_linPy(linPy, linPy_to_linC) (2 samples, 0.24%)</title><rect x="31.9760%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="267" fg:w="2"/><text x="32.2260%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp_matrix_stuffing.py:264 (apply) (3 samples, 0.36%)</title><rect x="31.9760%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="267" fg:w="3"/><text x="32.2260%" y="619.50"></text></g><g><title>        params_to_Ab = extractor.affine(expr_list) (3 samples, 0.36%)</title><rect x="31.9760%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="267" fg:w="3"/><text x="32.2260%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/coeff_extractor.py:86 (affine) (3 samples, 0.36%)</title><rect x="31.9760%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="267" fg:w="3"/><text x="32.2260%" y="663.50"></text></g><g><title>        return canonInterface.get_problem_matrix(op_list, (3 samples, 0.36%)</title><rect x="31.9760%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="267" fg:w="3"/><text x="32.2260%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (25 samples, 2.99%)</title><rect x="29.9401%" y="474" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="250" fg:w="25"/><text x="30.1901%" y="487.50">/..</text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (25 samples, 2.99%)</title><rect x="29.9401%" y="496" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="250" fg:w="25"/><text x="30.1901%" y="509.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:683 (get_problem_data) (12 samples, 1.44%)</title><rect x="31.4970%" y="518" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="263" fg:w="12"/><text x="31.7470%" y="531.50"></text></g><g><title>            data, inverse_data = solving_chain.apply(self, verbose) (12 samples, 1.44%)</title><rect x="31.4970%" y="540" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="263" fg:w="12"/><text x="31.7470%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/chain.py:76 (apply) (12 samples, 1.44%)</title><rect x="31.4970%" y="562" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="263" fg:w="12"/><text x="31.7470%" y="575.50"></text></g><g><title>            problem, inv = r.apply(problem) (12 samples, 1.44%)</title><rect x="31.4970%" y="584" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="263" fg:w="12"/><text x="31.7470%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/qp_solver.py:78 (apply) (5 samples, 0.60%)</title><rect x="32.3353%" y="606" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="270" fg:w="5"/><text x="32.5853%" y="619.50"></text></g><g><title>        P, q, d, AF, bg = problem.apply_parameters() (5 samples, 0.60%)</title><rect x="32.3353%" y="628" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="270" fg:w="5"/><text x="32.5853%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/qp2quad_form/qp_matrix_stuffing.py:179 (apply_parameters) (2 samples, 0.24%)</title><rect x="32.6946%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="273" fg:w="2"/><text x="32.9446%" y="663.50"></text></g><g><title>        A, b = self.reduced_A.get_matrix_from_tensor(param_vec, with_offset=True) (2 samples, 0.24%)</title><rect x="32.6946%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="273" fg:w="2"/><text x="32.9446%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/utilities.py:167 (get_matrix_from_tensor) (2 samples, 0.24%)</title><rect x="32.6946%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="273" fg:w="2"/><text x="32.9446%" y="707.50"></text></g><g><title>        return canonInterface.get_matrix_from_tensor( (2 samples, 0.24%)</title><rect x="32.6946%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="273" fg:w="2"/><text x="32.9446%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:36 (setup) (2 samples, 0.24%)</title><rect x="32.9341%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="275" fg:w="2"/><text x="33.1841%" y="619.50"></text></g><g><title>        unpacked_data, settings = utils.prepare_data(P, q, A, l, u, **settings) (2 samples, 0.24%)</title><rect x="32.9341%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="275" fg:w="2"/><text x="33.1841%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/utils.py:113 (prepare_data) (2 samples, 0.24%)</title><rect x="32.9341%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="275" fg:w="2"/><text x="33.1841%" y="663.50"></text></g><g><title>        if sparse.tril(P, -1).data.size &gt; 0: (2 samples, 0.24%)</title><rect x="32.9341%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="275" fg:w="2"/><text x="33.1841%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:102 (solve_via_data) (4 samples, 0.48%)</title><rect x="32.9341%" y="562" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="275" fg:w="4"/><text x="33.1841%" y="575.50"></text></g><g><title>                solver.setup(P, q, A, lA, uA, verbose=verbose, **solver_opts) (4 samples, 0.48%)</title><rect x="32.9341%" y="584" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="275" fg:w="4"/><text x="33.1841%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:37 (setup) (2 samples, 0.24%)</title><rect x="33.1737%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="277" fg:w="2"/><text x="33.4237%" y="619.50"></text></g><g><title>        self._model.setup(*unpacked_data, **settings) (2 samples, 0.24%)</title><rect x="33.1737%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="277" fg:w="2"/><text x="33.4237%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="33.1737%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="277" fg:w="2"/><text x="33.4237%" y="663.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:234 (run_optimizer) (99 samples, 11.86%)</title><rect x="28.1437%" y="210" width="11.8563%" height="21" fill="rgb(255,198,198)" fg:x="235" fg:w="99"/><text x="28.3937%" y="223.50">/home/ec2-use..</text></g><g><title>                    ss_smoothed = tl1_l2d2p365( (99 samples, 11.86%)</title><rect x="28.1437%" y="232" width="11.8563%" height="21" fill="rgb(255,198,198)" fg:x="235" fg:w="99"/><text x="28.3937%" y="245.50">            ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (99 samples, 11.86%)</title><rect x="28.1437%" y="254" width="11.8563%" height="21" fill="rgb(255,198,198)" fg:x="235" fg:w="99"/><text x="28.3937%" y="267.50">/home/ec2-use..</text></g><g><title>        res = _osd_tl1_l2d2p365( (99 samples, 11.86%)</title><rect x="28.1437%" y="276" width="11.8563%" height="21" fill="rgb(255,198,198)" fg:x="235" fg:w="99"/><text x="28.3937%" y="289.50">        res ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (94 samples, 11.26%)</title><rect x="28.7425%" y="298" width="11.2575%" height="21" fill="rgb(255,199,199)" fg:x="240" fg:w="94"/><text x="28.9925%" y="311.50">/home/ec2-us..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (94 samples, 11.26%)</title><rect x="28.7425%" y="320" width="11.2575%" height="21" fill="rgb(255,199,199)" fg:x="240" fg:w="94"/><text x="28.9925%" y="333.50">    problem..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (87 samples, 10.42%)</title><rect x="29.5808%" y="342" width="10.4192%" height="21" fill="rgb(255,201,201)" fg:x="247" fg:w="87"/><text x="29.8308%" y="355.50">/home/ec2-u..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (87 samples, 10.42%)</title><rect x="29.5808%" y="364" width="10.4192%" height="21" fill="rgb(255,201,201)" fg:x="247" fg:w="87"/><text x="29.8308%" y="377.50">          ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (84 samples, 10.06%)</title><rect x="29.9401%" y="386" width="10.0599%" height="21" fill="rgb(255,202,202)" fg:x="250" fg:w="84"/><text x="30.1901%" y="399.50">/home/ec2-..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (84 samples, 10.06%)</title><rect x="29.9401%" y="408" width="10.0599%" height="21" fill="rgb(255,202,202)" fg:x="250" fg:w="84"/><text x="30.1901%" y="421.50">        c..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (84 samples, 10.06%)</title><rect x="29.9401%" y="430" width="10.0599%" height="21" fill="rgb(255,202,202)" fg:x="250" fg:w="84"/><text x="30.1901%" y="443.50">/home/ec2-..</text></g><g><title>        return solve_func(self, *args, **kwargs) (84 samples, 10.06%)</title><rect x="29.9401%" y="452" width="10.0599%" height="21" fill="rgb(255,202,202)" fg:x="250" fg:w="84"/><text x="30.1901%" y="465.50">        r..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (59 samples, 7.07%)</title><rect x="32.9341%" y="474" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="275" fg:w="59"/><text x="33.1841%" y="487.50">/home/..</text></g><g><title>        solution = solving_chain.solve_via_data( (59 samples, 7.07%)</title><rect x="32.9341%" y="496" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="275" fg:w="59"/><text x="33.1841%" y="509.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (59 samples, 7.07%)</title><rect x="32.9341%" y="518" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="275" fg:w="59"/><text x="33.1841%" y="531.50">/home/..</text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (59 samples, 7.07%)</title><rect x="32.9341%" y="540" width="7.0659%" height="21" fill="rgb(255,210,210)" fg:x="275" fg:w="59"/><text x="33.1841%" y="553.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (55 samples, 6.59%)</title><rect x="33.4132%" y="562" width="6.5868%" height="21" fill="rgb(255,211,211)" fg:x="279" fg:w="55"/><text x="33.6632%" y="575.50">/home/..</text></g><g><title>        results = solver.solve() (55 samples, 6.59%)</title><rect x="33.4132%" y="584" width="6.5868%" height="21" fill="rgb(255,211,211)" fg:x="279" fg:w="55"/><text x="33.6632%" y="597.50">     ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (55 samples, 6.59%)</title><rect x="33.4132%" y="606" width="6.5868%" height="21" fill="rgb(255,211,211)" fg:x="279" fg:w="55"/><text x="33.6632%" y="619.50">/home/..</text></g><g><title>        results = self._model.solve() (55 samples, 6.59%)</title><rect x="33.4132%" y="628" width="6.5868%" height="21" fill="rgb(255,211,211)" fg:x="279" fg:w="55"/><text x="33.6632%" y="641.50">     ..</text></g><g class="running-frame"><title>➤ CPU ➤ (55 samples, 6.59%)</title><rect x="33.4132%" y="650" width="6.5868%" height="21" fill="rgb(255,211,211)" fg:x="279" fg:w="55"/><text x="33.6632%" y="663.50">➤ CPU ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/sunrise_sunset.py:34 (rise_set_smoothed) (21 samples, 2.51%)</title><rect x="40.1198%" y="254" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="267.50">/..</text></g><g><title>    sr_smoothed = tl1_l2d2p365( (21 samples, 2.51%)</title><rect x="40.1198%" y="276" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="289.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (21 samples, 2.51%)</title><rect x="40.1198%" y="298" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="311.50">/..</text></g><g><title>        res = _osd_tl1_l2d2p365( (21 samples, 2.51%)</title><rect x="40.1198%" y="320" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="333.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (21 samples, 2.51%)</title><rect x="40.1198%" y="342" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="355.50">/..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (21 samples, 2.51%)</title><rect x="40.1198%" y="364" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="335" fg:w="21"/><text x="40.3698%" y="377.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (20 samples, 2.40%)</title><rect x="40.2395%" y="386" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="399.50">/..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (20 samples, 2.40%)</title><rect x="40.2395%" y="408" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="421.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (20 samples, 2.40%)</title><rect x="40.2395%" y="430" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="443.50">/..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (20 samples, 2.40%)</title><rect x="40.2395%" y="452" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="465.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (20 samples, 2.40%)</title><rect x="40.2395%" y="474" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="487.50">/..</text></g><g><title>        return solve_func(self, *args, **kwargs) (20 samples, 2.40%)</title><rect x="40.2395%" y="496" width="2.3952%" height="21" fill="rgb(255,226,226)" fg:x="336" fg:w="20"/><text x="40.4895%" y="509.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (19 samples, 2.28%)</title><rect x="40.3593%" y="518" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="531.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (19 samples, 2.28%)</title><rect x="40.3593%" y="540" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (19 samples, 2.28%)</title><rect x="40.3593%" y="562" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="575.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (19 samples, 2.28%)</title><rect x="40.3593%" y="584" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (19 samples, 2.28%)</title><rect x="40.3593%" y="606" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="619.50"></text></g><g><title>        results = solver.solve() (19 samples, 2.28%)</title><rect x="40.3593%" y="628" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (19 samples, 2.28%)</title><rect x="40.3593%" y="650" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="663.50"></text></g><g><title>        results = self._model.solve() (19 samples, 2.28%)</title><rect x="40.3593%" y="672" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (19 samples, 2.28%)</title><rect x="40.3593%" y="694" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="337" fg:w="19"/><text x="40.6093%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (2 samples, 0.24%)</title><rect x="42.6347%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="356" fg:w="2"/><text x="42.8847%" y="531.50"></text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (2 samples, 0.24%)</title><rect x="42.6347%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="356" fg:w="2"/><text x="42.8847%" y="553.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:273 (run_pipeline) (245 samples, 29.34%)</title><rect x="16.0479%" y="166" width="29.3413%" height="21" fill="rgb(255,168,168)" fg:x="134" fg:w="245"/><text x="16.2979%" y="179.50">/home/ec2-user/solar-data-tools/sol..</text></g><g><title>            ss.run_optimizer(self.raw_data_matrix, plot=False, solver=solver_convex) (245 samples, 29.34%)</title><rect x="16.0479%" y="188" width="29.3413%" height="21" fill="rgb(255,168,168)" fg:x="134" fg:w="245"/><text x="16.2979%" y="201.50">            ss.run_optimizer(self...</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:282 (run_optimizer) (44 samples, 5.27%)</title><rect x="40.1198%" y="210" width="5.2695%" height="21" fill="rgb(255,215,215)" fg:x="335" fg:w="44"/><text x="40.3698%" y="223.50">/hom..</text></g><g><title>        smoothed = rise_set_smoothed(measured, sunrise_tau=self.sunrise_tau, sunset_tau=self.sunset_tau, solver=solver) (44 samples, 5.27%)</title><rect x="40.1198%" y="232" width="5.2695%" height="21" fill="rgb(255,215,215)" fg:x="335" fg:w="44"/><text x="40.3698%" y="245.50">   ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/sunrise_sunset.py:37 (rise_set_smoothed) (23 samples, 2.75%)</title><rect x="42.6347%" y="254" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="267.50">/..</text></g><g><title>    ss_smoothed = tl1_l2d2p365( (23 samples, 2.75%)</title><rect x="42.6347%" y="276" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="289.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (23 samples, 2.75%)</title><rect x="42.6347%" y="298" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="311.50">/..</text></g><g><title>        res = _osd_tl1_l2d2p365( (23 samples, 2.75%)</title><rect x="42.6347%" y="320" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="333.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (23 samples, 2.75%)</title><rect x="42.6347%" y="342" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="355.50">/..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (23 samples, 2.75%)</title><rect x="42.6347%" y="364" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="377.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (23 samples, 2.75%)</title><rect x="42.6347%" y="386" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="399.50">/..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (23 samples, 2.75%)</title><rect x="42.6347%" y="408" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="421.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (23 samples, 2.75%)</title><rect x="42.6347%" y="430" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="443.50">/..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (23 samples, 2.75%)</title><rect x="42.6347%" y="452" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="465.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (23 samples, 2.75%)</title><rect x="42.6347%" y="474" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="487.50">/..</text></g><g><title>        return solve_func(self, *args, **kwargs) (23 samples, 2.75%)</title><rect x="42.6347%" y="496" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="356" fg:w="23"/><text x="42.8847%" y="509.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (21 samples, 2.51%)</title><rect x="42.8743%" y="518" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="531.50">/..</text></g><g><title>        solution = solving_chain.solve_via_data( (21 samples, 2.51%)</title><rect x="42.8743%" y="540" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="553.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (21 samples, 2.51%)</title><rect x="42.8743%" y="562" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="575.50">/..</text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (21 samples, 2.51%)</title><rect x="42.8743%" y="584" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="597.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (21 samples, 2.51%)</title><rect x="42.8743%" y="606" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="619.50">/..</text></g><g><title>        results = solver.solve() (21 samples, 2.51%)</title><rect x="42.8743%" y="628" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="641.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (21 samples, 2.51%)</title><rect x="42.8743%" y="650" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="663.50">/..</text></g><g><title>        results = self._model.solve() (21 samples, 2.51%)</title><rect x="42.8743%" y="672" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="685.50">..</text></g><g class="running-frame"><title>➤ CPU ➤ (21 samples, 2.51%)</title><rect x="42.8743%" y="694" width="2.5150%" height="21" fill="rgb(255,226,226)" fg:x="358" fg:w="21"/><text x="43.1243%" y="707.50">➤..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:287 (run_pipeline) (2 samples, 0.24%)</title><rect x="45.3892%" y="166" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="179.50"></text></g><g><title>            self.make_filled_data_matrix(zero_night=zero_night, interp_day=interp_day) (2 samples, 0.24%)</title><rect x="45.3892%" y="188" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="201.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:738 (make_filled_data_matrix) (2 samples, 0.24%)</title><rect x="45.3892%" y="210" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="223.50"></text></g><g><title>            self.filled_data_matrix = interp_missing(self.filled_data_matrix) (2 samples, 0.24%)</title><rect x="45.3892%" y="232" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="245.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_filling.py:29 (interp_missing) (2 samples, 0.24%)</title><rect x="45.3892%" y="254" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="267.50"></text></g><g><title>    D = D_df.interpolate().values (2 samples, 0.24%)</title><rect x="45.3892%" y="276" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="289.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/generic.py:8206 (interpolate) (2 samples, 0.24%)</title><rect x="45.3892%" y="298" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="311.50"></text></g><g><title>            new_data = obj._mgr.interpolate( (2 samples, 0.24%)</title><rect x="45.3892%" y="320" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="333.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/base.py:265 (interpolate) (2 samples, 0.24%)</title><rect x="45.3892%" y="342" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="355.50"></text></g><g><title>        return self.apply_with_block( (2 samples, 0.24%)</title><rect x="45.3892%" y="364" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/managers.py:354 (apply) (2 samples, 0.24%)</title><rect x="45.3892%" y="386" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="399.50"></text></g><g><title>                applied = getattr(b, f)(**kwargs) (2 samples, 0.24%)</title><rect x="45.3892%" y="408" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/internals/blocks.py:1507 (interpolate) (2 samples, 0.24%)</title><rect x="45.3892%" y="430" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="443.50"></text></g><g><title>        new_values = self.array_values.interpolate( (2 samples, 0.24%)</title><rect x="45.3892%" y="452" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/arrays/numpy_.py:297 (interpolate) (2 samples, 0.24%)</title><rect x="45.3892%" y="474" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="487.50"></text></g><g><title>        missing.interpolate_2d_inplace( (2 samples, 0.24%)</title><rect x="45.3892%" y="496" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/pandas/core/missing.py:370 (interpolate_2d_inplace) (2 samples, 0.24%)</title><rect x="45.3892%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="531.50"></text></g><g><title>    np.apply_along_axis(func, axis, data)  # type: ignore[arg-type] (2 samples, 0.24%)</title><rect x="45.3892%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="379" fg:w="2"/><text x="45.6392%" y="553.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:771 (get_daily_scores) (4 samples, 0.48%)</title><rect x="45.6287%" y="210" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="223.50"></text></g><g><title>        self.get_density_scores(threshold=threshold, solver=solver) (4 samples, 0.48%)</title><rect x="45.6287%" y="232" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="245.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:826 (get_density_scores) (4 samples, 0.48%)</title><rect x="45.6287%" y="254" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="267.50"></text></g><g><title>        s1, s2, s3 = make_density_scores( (4 samples, 0.48%)</title><rect x="45.6287%" y="276" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_quality.py:42 (make_density_scores) (4 samples, 0.48%)</title><rect x="45.6287%" y="298" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="311.50"></text></g><g><title>    fit_signal = tl1_l2d2p365(density_signal, use_ixs=use_days, tau=0.85, solver=solver) (4 samples, 0.48%)</title><rect x="45.6287%" y="320" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="333.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (4 samples, 0.48%)</title><rect x="45.6287%" y="342" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="355.50"></text></g><g><title>        res = _osd_tl1_l2d2p365( (4 samples, 0.48%)</title><rect x="45.6287%" y="364" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="377.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (4 samples, 0.48%)</title><rect x="45.6287%" y="386" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="399.50"></text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (4 samples, 0.48%)</title><rect x="45.6287%" y="408" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (4 samples, 0.48%)</title><rect x="45.6287%" y="430" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="443.50"></text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (4 samples, 0.48%)</title><rect x="45.6287%" y="452" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (4 samples, 0.48%)</title><rect x="45.6287%" y="474" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="487.50"></text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (4 samples, 0.48%)</title><rect x="45.6287%" y="496" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (4 samples, 0.48%)</title><rect x="45.6287%" y="518" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="531.50"></text></g><g><title>        return solve_func(self, *args, **kwargs) (4 samples, 0.48%)</title><rect x="45.6287%" y="540" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="381" fg:w="4"/><text x="45.8787%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (3 samples, 0.36%)</title><rect x="45.7485%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="575.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (3 samples, 0.36%)</title><rect x="45.7485%" y="584" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (3 samples, 0.36%)</title><rect x="45.7485%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="619.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (3 samples, 0.36%)</title><rect x="45.7485%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (3 samples, 0.36%)</title><rect x="45.7485%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="663.50"></text></g><g><title>        results = solver.solve() (3 samples, 0.36%)</title><rect x="45.7485%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (3 samples, 0.36%)</title><rect x="45.7485%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="707.50"></text></g><g><title>        results = self._model.solve() (3 samples, 0.36%)</title><rect x="45.7485%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="729.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="45.7485%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="382" fg:w="3"/><text x="45.9985%" y="751.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:339 (run_pipeline) (5 samples, 0.60%)</title><rect x="45.6287%" y="166" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="381" fg:w="5"/><text x="45.8787%" y="179.50"></text></g><g><title>            self.get_daily_scores(threshold=0.2, solver=solver_convex) (5 samples, 0.60%)</title><rect x="45.6287%" y="188" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="381" fg:w="5"/><text x="45.8787%" y="201.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:100 (find_clear_days) (4 samples, 0.48%)</title><rect x="46.2275%" y="254" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="267.50"></text></g><g><title>        msk = self.filter_for_sparsity(data, solver=solver) (4 samples, 0.48%)</title><rect x="46.2275%" y="276" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:38 (filter_for_sparsity) (4 samples, 0.48%)</title><rect x="46.2275%" y="298" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="311.50"></text></g><g><title>        self.filtered_signal = tl1_l2d2p365(self.density_signal, w1=w1, use_ixs=use_days, tau=0.85, solver=solver) (4 samples, 0.48%)</title><rect x="46.2275%" y="320" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="333.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (4 samples, 0.48%)</title><rect x="46.2275%" y="342" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="355.50"></text></g><g><title>        res = _osd_tl1_l2d2p365( (4 samples, 0.48%)</title><rect x="46.2275%" y="364" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="377.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (4 samples, 0.48%)</title><rect x="46.2275%" y="386" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="399.50"></text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (4 samples, 0.48%)</title><rect x="46.2275%" y="408" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (4 samples, 0.48%)</title><rect x="46.2275%" y="430" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="443.50"></text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (4 samples, 0.48%)</title><rect x="46.2275%" y="452" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (4 samples, 0.48%)</title><rect x="46.2275%" y="474" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="487.50"></text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (4 samples, 0.48%)</title><rect x="46.2275%" y="496" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (4 samples, 0.48%)</title><rect x="46.2275%" y="518" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="531.50"></text></g><g><title>        return solve_func(self, *args, **kwargs) (4 samples, 0.48%)</title><rect x="46.2275%" y="540" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="386" fg:w="4"/><text x="46.4775%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (3 samples, 0.36%)</title><rect x="46.3473%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="575.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (3 samples, 0.36%)</title><rect x="46.3473%" y="584" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (3 samples, 0.36%)</title><rect x="46.3473%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="619.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (3 samples, 0.36%)</title><rect x="46.3473%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (3 samples, 0.36%)</title><rect x="46.3473%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="663.50"></text></g><g><title>        results = solver.solve() (3 samples, 0.36%)</title><rect x="46.3473%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (3 samples, 0.36%)</title><rect x="46.3473%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="707.50"></text></g><g><title>        results = self._model.solve() (3 samples, 0.36%)</title><rect x="46.3473%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="729.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="46.3473%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="387" fg:w="3"/><text x="46.5973%" y="751.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data) (2 samples, 0.24%)</title><rect x="46.7066%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="575.50"></text></g><g><title>            solving_chain = self._construct_chain( (2 samples, 0.24%)</title><rect x="46.7066%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain) (2 samples, 0.24%)</title><rect x="46.7066%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="619.50"></text></g><g><title>        return construct_solving_chain(self, candidate_solvers, gp=gp, (2 samples, 0.24%)</title><rect x="46.7066%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chain) (2 samples, 0.24%)</title><rect x="46.7066%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="663.50"></text></g><g><title>    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts) (2 samples, 0.24%)</title><rect x="46.7066%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_problem_class) (2 samples, 0.24%)</title><rect x="46.7066%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="707.50"></text></g><g><title>    if not gp and not problem.is_dcp(): (2 samples, 0.24%)</title><rect x="46.7066%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (2 samples, 0.24%)</title><rect x="46.7066%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="751.50"></text></g><g><title>        result = func(self, *args, **kwargs) (2 samples, 0.24%)</title><rect x="46.7066%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp) (2 samples, 0.24%)</title><rect x="46.7066%" y="782" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="795.50"></text></g><g><title>        return all( (2 samples, 0.24%)</title><rect x="46.7066%" y="804" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;) (2 samples, 0.24%)</title><rect x="46.7066%" y="826" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="839.50"></text></g><g><title>          expr.is_dcp(dpp) for expr in self.constraints + [self.objective]) (2 samples, 0.24%)</title><rect x="46.7066%" y="848" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="861.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp) (2 samples, 0.24%)</title><rect x="46.7066%" y="870" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="883.50"></text></g><g><title>        return self.args[0].is_convex() (2 samples, 0.24%)</title><rect x="46.7066%" y="892" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (2 samples, 0.24%)</title><rect x="46.7066%" y="914" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="927.50"></text></g><g><title>        result = func(self, *args, **kwargs) (2 samples, 0.24%)</title><rect x="46.7066%" y="936" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="949.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (2 samples, 0.24%)</title><rect x="46.7066%" y="958" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="971.50"></text></g><g><title>                if not (arg.is_affine() or (2 samples, 0.24%)</title><rect x="46.7066%" y="980" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="993.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (2 samples, 0.24%)</title><rect x="46.7066%" y="1002" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1015.50"></text></g><g><title>        result = func(self, *args, **kwargs) (2 samples, 0.24%)</title><rect x="46.7066%" y="1024" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1037.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (2 samples, 0.24%)</title><rect x="46.7066%" y="1046" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1059.50"></text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (2 samples, 0.24%)</title><rect x="46.7066%" y="1068" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1081.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (2 samples, 0.24%)</title><rect x="46.7066%" y="1090" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1103.50"></text></g><g><title>        result = func(self, *args, **kwargs) (2 samples, 0.24%)</title><rect x="46.7066%" y="1112" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="390" fg:w="2"/><text x="46.9566%" y="1125.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (3 samples, 0.36%)</title><rect x="46.7066%" y="518" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="390" fg:w="3"/><text x="46.9566%" y="531.50"></text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (3 samples, 0.36%)</title><rect x="46.7066%" y="540" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="390" fg:w="3"/><text x="46.9566%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (11 samples, 1.32%)</title><rect x="47.0659%" y="518" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="531.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (11 samples, 1.32%)</title><rect x="47.0659%" y="540" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (11 samples, 1.32%)</title><rect x="47.0659%" y="562" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="575.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (11 samples, 1.32%)</title><rect x="47.0659%" y="584" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (11 samples, 1.32%)</title><rect x="47.0659%" y="606" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="619.50"></text></g><g><title>        results = solver.solve() (11 samples, 1.32%)</title><rect x="47.0659%" y="628" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (11 samples, 1.32%)</title><rect x="47.0659%" y="650" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="663.50"></text></g><g><title>        results = self._model.solve() (11 samples, 1.32%)</title><rect x="47.0659%" y="672" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (11 samples, 1.32%)</title><rect x="47.0659%" y="694" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="393" fg:w="11"/><text x="47.3159%" y="707.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:77 (find_clear_days) (15 samples, 1.80%)</title><rect x="46.7066%" y="254" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="267.50"></text></g><g><title>        self.y = tl1_l2d2p365(self.tc, tau=0.9, w1=2.5e5, yearly_periodic=False, solver=solver) (15 samples, 1.80%)</title><rect x="46.7066%" y="276" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (15 samples, 1.80%)</title><rect x="46.7066%" y="298" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="311.50"></text></g><g><title>        res = _osd_tl1_l2d2p365( (15 samples, 1.80%)</title><rect x="46.7066%" y="320" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="333.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (15 samples, 1.80%)</title><rect x="46.7066%" y="342" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="355.50"></text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (15 samples, 1.80%)</title><rect x="46.7066%" y="364" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (15 samples, 1.80%)</title><rect x="46.7066%" y="386" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="399.50"></text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (15 samples, 1.80%)</title><rect x="46.7066%" y="408" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (15 samples, 1.80%)</title><rect x="46.7066%" y="430" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="443.50"></text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (15 samples, 1.80%)</title><rect x="46.7066%" y="452" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (15 samples, 1.80%)</title><rect x="46.7066%" y="474" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="487.50"></text></g><g><title>        return solve_func(self, *args, **kwargs) (15 samples, 1.80%)</title><rect x="46.7066%" y="496" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="390" fg:w="15"/><text x="46.9566%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (2 samples, 0.24%)</title><rect x="48.5030%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="405" fg:w="2"/><text x="48.7530%" y="531.50"></text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (2 samples, 0.24%)</title><rect x="48.5030%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="405" fg:w="2"/><text x="48.7530%" y="553.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:362 (run_pipeline) (37 samples, 4.43%)</title><rect x="46.2275%" y="166" width="4.4311%" height="21" fill="rgb(255,218,218)" fg:x="386" fg:w="37"/><text x="46.4775%" y="179.50">/ho..</text></g><g><title>            self.detect_clear_days( (37 samples, 4.43%)</title><rect x="46.2275%" y="188" width="4.4311%" height="21" fill="rgb(255,218,218)" fg:x="386" fg:w="37"/><text x="46.4775%" y="201.50">  ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:1032 (detect_clear_days) (37 samples, 4.43%)</title><rect x="46.2275%" y="210" width="4.4311%" height="21" fill="rgb(255,218,218)" fg:x="386" fg:w="37"/><text x="46.4775%" y="223.50">/ho..</text></g><g><title>        clear_days = self.clear_day_analysis.find_clear_days( (37 samples, 4.43%)</title><rect x="46.2275%" y="232" width="4.4311%" height="21" fill="rgb(255,218,218)" fg:x="386" fg:w="37"/><text x="46.4775%" y="245.50">  ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/clear_day_detection.py:88 (find_clear_days) (18 samples, 2.16%)</title><rect x="48.5030%" y="254" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="267.50"></text></g><g><title>        self.x = tl1_l2d2p365(self.de, tau=0.9, w1=2e5, yearly_periodic=False, solver=solver) (18 samples, 2.16%)</title><rect x="48.5030%" y="276" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (18 samples, 2.16%)</title><rect x="48.5030%" y="298" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="311.50"></text></g><g><title>        res = _osd_tl1_l2d2p365( (18 samples, 2.16%)</title><rect x="48.5030%" y="320" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="333.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (18 samples, 2.16%)</title><rect x="48.5030%" y="342" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="355.50"></text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (18 samples, 2.16%)</title><rect x="48.5030%" y="364" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (18 samples, 2.16%)</title><rect x="48.5030%" y="386" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="399.50"></text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (18 samples, 2.16%)</title><rect x="48.5030%" y="408" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (18 samples, 2.16%)</title><rect x="48.5030%" y="430" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="443.50"></text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (18 samples, 2.16%)</title><rect x="48.5030%" y="452" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (18 samples, 2.16%)</title><rect x="48.5030%" y="474" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="487.50"></text></g><g><title>        return solve_func(self, *args, **kwargs) (18 samples, 2.16%)</title><rect x="48.5030%" y="496" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="405" fg:w="18"/><text x="48.7530%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (16 samples, 1.92%)</title><rect x="48.7425%" y="518" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="531.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (16 samples, 1.92%)</title><rect x="48.7425%" y="540" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (16 samples, 1.92%)</title><rect x="48.7425%" y="562" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="575.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (16 samples, 1.92%)</title><rect x="48.7425%" y="584" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (16 samples, 1.92%)</title><rect x="48.7425%" y="606" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="619.50"></text></g><g><title>        results = solver.solve() (16 samples, 1.92%)</title><rect x="48.7425%" y="628" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (16 samples, 1.92%)</title><rect x="48.7425%" y="650" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="663.50"></text></g><g><title>        results = self._model.solve() (16 samples, 1.92%)</title><rect x="48.7425%" y="672" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (16 samples, 1.92%)</title><rect x="48.7425%" y="694" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="407" fg:w="16"/><text x="48.9925%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:2504 (all) (3 samples, 0.36%)</title><rect x="50.7784%" y="1706" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="424" fg:w="3"/><text x="51.0284%" y="1719.50"></text></g><g><title>    return _wrapreduction(a, np.logical_and, &apos;all&apos;, axis, None, out, (3 samples, 0.36%)</title><rect x="50.7784%" y="1728" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="424" fg:w="3"/><text x="51.0284%" y="1741.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:88 (_wrapreduction) (3 samples, 0.36%)</title><rect x="50.7784%" y="1750" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="424" fg:w="3"/><text x="51.0284%" y="1763.50"></text></g><g><title>    return ufunc.reduce(obj, axis, dtype, out, **passkwargs) (3 samples, 0.36%)</title><rect x="50.7784%" y="1772" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="424" fg:w="3"/><text x="51.0284%" y="1785.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="50.7784%" y="1794" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="424" fg:w="3"/><text x="51.0284%" y="1807.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2348 (isclose) (69 samples, 8.26%)</title><rect x="51.1377%" y="1706" width="8.2635%" height="21" fill="rgb(255,206,206)" fg:x="427" fg:w="69"/><text x="51.3877%" y="1719.50">/home/ec..</text></g><g><title>    xfin = isfinite(x) (69 samples, 8.26%)</title><rect x="51.1377%" y="1728" width="8.2635%" height="21" fill="rgb(255,206,206)" fg:x="427" fg:w="69"/><text x="51.3877%" y="1741.50">    xfi..</text></g><g class="running-frame"><title>➤ CPU ➤ (69 samples, 8.26%)</title><rect x="51.1377%" y="1750" width="8.2635%" height="21" fill="rgb(255,206,206)" fg:x="427" fg:w="69"/><text x="51.3877%" y="1763.50">➤ CPU ➤..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2350 (isclose) (2 samples, 0.24%)</title><rect x="59.4012%" y="1706" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1719.50"></text></g><g><title>    if all(xfin) and all(yfin): (2 samples, 0.24%)</title><rect x="59.4012%" y="1728" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1741.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:2504 (all) (2 samples, 0.24%)</title><rect x="59.4012%" y="1750" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1763.50"></text></g><g><title>    return _wrapreduction(a, np.logical_and, &apos;all&apos;, axis, None, out, (2 samples, 0.24%)</title><rect x="59.4012%" y="1772" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1785.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:88 (_wrapreduction) (2 samples, 0.24%)</title><rect x="59.4012%" y="1794" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1807.50"></text></g><g><title>    return ufunc.reduce(obj, axis, dtype, out, **passkwargs) (2 samples, 0.24%)</title><rect x="59.4012%" y="1816" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1829.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="59.4012%" y="1838" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="496" fg:w="2"/><text x="59.6512%" y="1851.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:45 (is_diagonal) (200 samples, 23.95%)</title><rect x="50.7784%" y="1618" width="23.9521%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="200"/><text x="51.0284%" y="1631.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>    return np.allclose(off_diagonal_elements, 0) (200 samples, 23.95%)</title><rect x="50.7784%" y="1640" width="23.9521%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="200"/><text x="51.0284%" y="1653.50">    return np.allclose(off_..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2241 (allclose) (200 samples, 23.95%)</title><rect x="50.7784%" y="1662" width="23.9521%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="200"/><text x="51.0284%" y="1675.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>    res = all(isclose(a, b, rtol=rtol, atol=atol, equal_nan=equal_nan)) (200 samples, 23.95%)</title><rect x="50.7784%" y="1684" width="23.9521%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="200"/><text x="51.0284%" y="1697.50">    res = all(isclose(a, b,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2351 (isclose) (126 samples, 15.09%)</title><rect x="59.6407%" y="1706" width="15.0898%" height="21" fill="rgb(255,191,191)" fg:x="498" fg:w="126"/><text x="59.8907%" y="1719.50">/home/ec2-user/.v..</text></g><g><title>        return within_tol(x, y, atol, rtol) (126 samples, 15.09%)</title><rect x="59.6407%" y="1728" width="15.0898%" height="21" fill="rgb(255,191,191)" fg:x="498" fg:w="126"/><text x="59.8907%" y="1741.50">        return w..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:2332 (within_tol) (126 samples, 15.09%)</title><rect x="59.6407%" y="1750" width="15.0898%" height="21" fill="rgb(255,191,191)" fg:x="498" fg:w="126"/><text x="59.8907%" y="1763.50">/home/ec2-user/.v..</text></g><g><title>            return less_equal(abs(x-y), atol + rtol * abs(y)) (126 samples, 15.09%)</title><rect x="59.6407%" y="1772" width="15.0898%" height="21" fill="rgb(255,191,191)" fg:x="498" fg:w="126"/><text x="59.8907%" y="1785.50">            retu..</text></g><g class="running-frame"><title>➤ CPU ➤ (126 samples, 15.09%)</title><rect x="59.6407%" y="1794" width="15.0898%" height="21" fill="rgb(255,191,191)" fg:x="498" fg:w="126"/><text x="59.8907%" y="1807.50">➤ CPU ➤</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:633 (get_problem_data) (201 samples, 24.07%)</title><rect x="50.7784%" y="650" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="663.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>            solving_chain = self._construct_chain( (201 samples, 24.07%)</title><rect x="50.7784%" y="672" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="685.50">            solving_chain =..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:885 (_construct_chain) (201 samples, 24.07%)</title><rect x="50.7784%" y="694" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="707.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return construct_solving_chain(self, candidate_solvers, gp=gp, (201 samples, 24.07%)</title><rect x="50.7784%" y="716" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="729.50">        return construct_so..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:197 (construct_solving_chain) (201 samples, 24.07%)</title><rect x="50.7784%" y="738" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="751.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>    reductions = _reductions_for_problem_class(problem, candidates, gp, solver_opts) (201 samples, 24.07%)</title><rect x="50.7784%" y="760" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="773.50">    reductions = _reduction..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:107 (_reductions_for_problem_class) (201 samples, 24.07%)</title><rect x="50.7784%" y="782" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="795.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>    if not gp and not problem.is_dcp(): (201 samples, 24.07%)</title><rect x="50.7784%" y="804" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="817.50">    if not gp and not probl..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="826" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="839.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="848" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="861.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:256 (is_dcp) (201 samples, 24.07%)</title><rect x="50.7784%" y="870" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="883.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return all( (201 samples, 24.07%)</title><rect x="50.7784%" y="892" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="905.50">        return all(..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:257 (&lt;genexpr&gt;) (201 samples, 24.07%)</title><rect x="50.7784%" y="914" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="927.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>          expr.is_dcp(dpp) for expr in self.constraints + [self.objective]) (201 samples, 24.07%)</title><rect x="50.7784%" y="936" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="949.50">          expr.is_dcp(dpp) ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/objective.py:153 (is_dcp) (201 samples, 24.07%)</title><rect x="50.7784%" y="958" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="971.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return self.args[0].is_convex() (201 samples, 24.07%)</title><rect x="50.7784%" y="980" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="993.50">        return self.args[0]..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1002" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1015.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1024" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1037.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (201 samples, 24.07%)</title><rect x="50.7784%" y="1046" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1059.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>                if not (arg.is_affine() or (201 samples, 24.07%)</title><rect x="50.7784%" y="1068" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1081.50">                if not (arg..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1090" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1103.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1112" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1125.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (201 samples, 24.07%)</title><rect x="50.7784%" y="1134" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1147.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (201 samples, 24.07%)</title><rect x="50.7784%" y="1156" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1169.50">        return self.is_cons..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1178" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1191.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1200" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1213.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:178 (is_convex) (201 samples, 24.07%)</title><rect x="50.7784%" y="1222" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1235.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>                if not (arg.is_affine() or (201 samples, 24.07%)</title><rect x="50.7784%" y="1244" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1257.50">                if not (arg..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1266" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1279.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1288" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1301.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/expression.py:212 (is_affine) (201 samples, 24.07%)</title><rect x="50.7784%" y="1310" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1323.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return self.is_constant() or (self.is_convex() and self.is_concave()) (201 samples, 24.07%)</title><rect x="50.7784%" y="1332" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1345.50">        return self.is_cons..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1354" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1367.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1376" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1389.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/atom.py:193 (is_concave) (201 samples, 24.07%)</title><rect x="50.7784%" y="1398" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1411.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        elif self.is_atom_concave(): (201 samples, 24.07%)</title><rect x="50.7784%" y="1420" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1433.50">        elif self.is_atom_c..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/atoms/quad_form.py:74 (is_atom_concave) (201 samples, 24.07%)</title><rect x="50.7784%" y="1442" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1455.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        return P.is_constant() and P.is_nsd() (201 samples, 24.07%)</title><rect x="50.7784%" y="1464" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1477.50">        return P.is_constan..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/performance_utils.py:73 (_compute_once) (201 samples, 24.07%)</title><rect x="50.7784%" y="1486" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1499.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        result = func(self, *args, **kwargs) (201 samples, 24.07%)</title><rect x="50.7784%" y="1508" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1521.50">        result = func(self,..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/expressions/constants/constant.py:244 (is_nsd) (201 samples, 24.07%)</title><rect x="50.7784%" y="1530" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1543.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>            self._nsd_test = eig_util.is_psd_within_tol(-self.value, EIGVAL_TOL) (201 samples, 24.07%)</title><rect x="50.7784%" y="1552" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1565.50">            self._nsd_test ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/utilities/linalg.py:77 (is_psd_within_tol) (201 samples, 24.07%)</title><rect x="50.7784%" y="1574" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1587.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>    if is_diagonal(A): (201 samples, 24.07%)</title><rect x="50.7784%" y="1596" width="24.0719%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="201"/><text x="51.0284%" y="1609.50">    if is_diagonal(A):..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (203 samples, 24.31%)</title><rect x="50.7784%" y="606" width="24.3114%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="203"/><text x="51.0284%" y="619.50">/home/ec2-user/.venv/lib64/p..</text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (203 samples, 24.31%)</title><rect x="50.7784%" y="628" width="24.3114%" height="21" fill="rgb(255,176,176)" fg:x="424" fg:w="203"/><text x="51.0284%" y="641.50">        data, solving_chain..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:683 (get_problem_data) (2 samples, 0.24%)</title><rect x="74.8503%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="625" fg:w="2"/><text x="75.1003%" y="663.50"></text></g><g><title>            data, inverse_data = solving_chain.apply(self, verbose) (2 samples, 0.24%)</title><rect x="74.8503%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="625" fg:w="2"/><text x="75.1003%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/chain.py:76 (apply) (2 samples, 0.24%)</title><rect x="74.8503%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="625" fg:w="2"/><text x="75.1003%" y="707.50"></text></g><g><title>            problem, inv = r.apply(problem) (2 samples, 0.24%)</title><rect x="74.8503%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="625" fg:w="2"/><text x="75.1003%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:102 (solve_via_data) (3 samples, 0.36%)</title><rect x="75.0898%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="627" fg:w="3"/><text x="75.3398%" y="707.50"></text></g><g><title>                solver.setup(P, q, A, lA, uA, verbose=verbose, **solver_opts) (3 samples, 0.36%)</title><rect x="75.0898%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="627" fg:w="3"/><text x="75.3398%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:37 (setup) (3 samples, 0.36%)</title><rect x="75.0898%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="627" fg:w="3"/><text x="75.3398%" y="751.50"></text></g><g><title>        self._model.setup(*unpacked_data, **settings) (3 samples, 0.36%)</title><rect x="75.0898%" y="760" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="627" fg:w="3"/><text x="75.3398%" y="773.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="75.0898%" y="782" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="627" fg:w="3"/><text x="75.3398%" y="795.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:375 (run_pipeline) (222 samples, 26.59%)</title><rect x="50.6587%" y="166" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="179.50">/home/ec2-user/solar-data-tools..</text></g><g><title>            self.clipping_check(solver=solver_convex) (222 samples, 26.59%)</title><rect x="50.6587%" y="188" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="201.50">            self.clipping_chec..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:868 (clipping_check) (222 samples, 26.59%)</title><rect x="50.6587%" y="210" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="223.50">/home/ec2-user/solar-data-tools..</text></g><g><title>        self.clipping_analysis.check_clipping( (222 samples, 26.59%)</title><rect x="50.6587%" y="232" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="245.50">        self.clipping_analysis..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:75 (check_clipping) (222 samples, 26.59%)</title><rect x="50.6587%" y="254" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="267.50">/home/ec2-user/solar-data-tools..</text></g><g><title>        self.pointmass_detection( (222 samples, 26.59%)</title><rect x="50.6587%" y="276" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="289.50">        self.pointmass_detecti..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:139 (pointmass_detection) (222 samples, 26.59%)</title><rect x="50.6587%" y="298" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="311.50">/home/ec2-user/solar-data-tools..</text></g><g><title>            self.get_l2_l1d2(y_rs, weight=weight, solver=solver) (222 samples, 26.59%)</title><rect x="50.6587%" y="320" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="333.50">            self.get_l2_l1d2(y..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/clipping.py:373 (get_l2_l1d2) (222 samples, 26.59%)</title><rect x="50.6587%" y="342" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="355.50">/home/ec2-user/solar-data-tools..</text></g><g><title>        out = l2_l1d2_constrained(y, w1=weight, solver=solver) (222 samples, 26.59%)</title><rect x="50.6587%" y="364" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="377.50">        out = l2_l1d2_constrai..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:259 (l2_l1d2_constrained) (222 samples, 26.59%)</title><rect x="50.6587%" y="386" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="399.50">/home/ec2-user/solar-data-tools..</text></g><g><title>        res = _osd_l2_l1d2_constrained( (222 samples, 26.59%)</title><rect x="50.6587%" y="408" width="26.5868%" height="21" fill="rgb(255,172,172)" fg:x="423" fg:w="222"/><text x="50.9087%" y="421.50">        res = _osd_l2_l1d2_con..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:277 (_osd_l2_l1d2_constrained) (221 samples, 26.47%)</title><rect x="50.7784%" y="430" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="443.50">/home/ec2-user/solar-data-tools..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose, eps_rel=1e-6, eps_abs=1e-6) (221 samples, 26.47%)</title><rect x="50.7784%" y="452" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="465.50">    problem.decompose(solver=s..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (221 samples, 26.47%)</title><rect x="50.7784%" y="474" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="487.50">/home/ec2-user/.venv/lib64/pyth..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (221 samples, 26.47%)</title><rect x="50.7784%" y="496" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="509.50">            result = self._sol..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (221 samples, 26.47%)</title><rect x="50.7784%" y="518" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="531.50">/home/ec2-user/.venv/lib64/pyth..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (221 samples, 26.47%)</title><rect x="50.7784%" y="540" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="553.50">        cvx_prob.solve(solver=..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (221 samples, 26.47%)</title><rect x="50.7784%" y="562" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="575.50">/home/ec2-user/.venv/lib64/pyth..</text></g><g><title>        return solve_func(self, *args, **kwargs) (221 samples, 26.47%)</title><rect x="50.7784%" y="584" width="26.4671%" height="21" fill="rgb(255,172,172)" fg:x="424" fg:w="221"/><text x="51.0284%" y="597.50">        return solve_func(self..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (18 samples, 2.16%)</title><rect x="75.0898%" y="606" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="627" fg:w="18"/><text x="75.3398%" y="619.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (18 samples, 2.16%)</title><rect x="75.0898%" y="628" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="627" fg:w="18"/><text x="75.3398%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (18 samples, 2.16%)</title><rect x="75.0898%" y="650" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="627" fg:w="18"/><text x="75.3398%" y="663.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (18 samples, 2.16%)</title><rect x="75.0898%" y="672" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="627" fg:w="18"/><text x="75.3398%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (15 samples, 1.80%)</title><rect x="75.4491%" y="694" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="630" fg:w="15"/><text x="75.6991%" y="707.50"></text></g><g><title>        results = solver.solve() (15 samples, 1.80%)</title><rect x="75.4491%" y="716" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="630" fg:w="15"/><text x="75.6991%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (15 samples, 1.80%)</title><rect x="75.4491%" y="738" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="630" fg:w="15"/><text x="75.6991%" y="751.50"></text></g><g><title>        results = self._model.solve() (15 samples, 1.80%)</title><rect x="75.4491%" y="760" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="630" fg:w="15"/><text x="75.6991%" y="773.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (15 samples, 1.80%)</title><rect x="75.4491%" y="782" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="630" fg:w="15"/><text x="75.6991%" y="795.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/function_base.py:4819 (_quantile) (2 samples, 0.24%)</title><rect x="77.2455%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="645" fg:w="2"/><text x="77.4955%" y="707.50"></text></g><g><title>        previous_indexes, next_indexes = _get_indexes(arr, (2 samples, 0.24%)</title><rect x="77.2455%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="645" fg:w="2"/><text x="77.4955%" y="729.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/capacity_change.py:42 (run) (4 samples, 0.48%)</title><rect x="77.2455%" y="254" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="267.50"></text></g><g><title>            metric = np.nanquantile(data, q=quantile, axis=0) (4 samples, 0.48%)</title><rect x="77.2455%" y="276" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="289.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/nanfunctions.py:1545 (nanquantile) (4 samples, 0.48%)</title><rect x="77.2455%" y="298" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="311.50"></text></g><g><title>    return _nanquantile_unchecked( (4 samples, 0.48%)</title><rect x="77.2455%" y="320" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="333.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/nanfunctions.py:1563 (_nanquantile_unchecked) (4 samples, 0.48%)</title><rect x="77.2455%" y="342" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="355.50"></text></g><g><title>    return function_base._ureduce(a, (4 samples, 0.48%)</title><rect x="77.2455%" y="364" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/function_base.py:3823 (_ureduce) (4 samples, 0.48%)</title><rect x="77.2455%" y="386" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="399.50"></text></g><g><title>    r = func(a, **kwargs) (4 samples, 0.48%)</title><rect x="77.2455%" y="408" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/nanfunctions.py:1584 (_nanquantile_ureduce_func) (4 samples, 0.48%)</title><rect x="77.2455%" y="430" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="443.50"></text></g><g><title>        result = np.apply_along_axis(_nanquantile_1d, axis, a, q, (4 samples, 0.48%)</title><rect x="77.2455%" y="452" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/shape_base.py:402 (apply_along_axis) (4 samples, 0.48%)</title><rect x="77.2455%" y="474" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="487.50"></text></g><g><title>        buff[ind] = asanyarray(func1d(inarr_view[ind], *args, **kwargs)) (4 samples, 0.48%)</title><rect x="77.2455%" y="496" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/nanfunctions.py:1608 (_nanquantile_1d) (4 samples, 0.48%)</title><rect x="77.2455%" y="518" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="531.50"></text></g><g><title>    return function_base._quantile_unchecked( (4 samples, 0.48%)</title><rect x="77.2455%" y="540" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/function_base.py:4555 (_quantile_unchecked) (4 samples, 0.48%)</title><rect x="77.2455%" y="562" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="575.50"></text></g><g><title>    return _ureduce(a, (4 samples, 0.48%)</title><rect x="77.2455%" y="584" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/function_base.py:3823 (_ureduce) (4 samples, 0.48%)</title><rect x="77.2455%" y="606" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="619.50"></text></g><g><title>    r = func(a, **kwargs) (4 samples, 0.48%)</title><rect x="77.2455%" y="628" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/lib/function_base.py:4721 (_quantile_ureduce_func) (4 samples, 0.48%)</title><rect x="77.2455%" y="650" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="663.50"></text></g><g><title>    result = _quantile(arr, (4 samples, 0.48%)</title><rect x="77.2455%" y="672" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="645" fg:w="4"/><text x="77.4955%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:113 (admm) (2 samples, 0.24%)</title><rect x="77.8443%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="650" fg:w="2"/><text x="78.0943%" y="531.50"></text></g><g><title>    if options[&quot;verbose&quot;]: (2 samples, 0.24%)</title><rect x="77.8443%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="650" fg:w="2"/><text x="78.0943%" y="553.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="77.8443%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="650" fg:w="2"/><text x="78.0943%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/util.py:122 (get_rho_vec) (2 samples, 0.24%)</title><rect x="78.0838%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="652" fg:w="2"/><text x="78.3338%" y="575.50"></text></g><g><title>        rho_vec = self.rho_by_block[-1] * np.ones(self._g.dim) (2 samples, 0.24%)</title><rect x="78.0838%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="652" fg:w="2"/><text x="78.3338%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:179 (admm) (4 samples, 0.48%)</title><rect x="78.0838%" y="518" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="652" fg:w="4"/><text x="78.3338%" y="531.50"></text></g><g><title>        rho_vec = rho_controller.get_rho_vec() (4 samples, 0.48%)</title><rect x="78.0838%" y="540" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="652" fg:w="4"/><text x="78.3338%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/util.py:126 (get_rho_vec) (2 samples, 0.24%)</title><rect x="78.3234%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="654" fg:w="2"/><text x="78.5734%" y="575.50"></text></g><g><title>            rho_vec[start_index:end_index] = self.rho_by_block[index] (2 samples, 0.24%)</title><rect x="78.3234%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="654" fg:w="2"/><text x="78.5734%" y="597.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="78.3234%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="654" fg:w="2"/><text x="78.5734%" y="619.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/matrix.py:30 (solve) (22 samples, 2.63%)</title><rect x="78.5629%" y="562" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="656" fg:w="22"/><text x="78.8129%" y="575.50">/..</text></g><g><title>        return self._fac_system.solve(rhs) (22 samples, 2.63%)</title><rect x="78.5629%" y="584" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="656" fg:w="22"/><text x="78.8129%" y="597.50">..</text></g><g class="running-frame"><title>➤ CPU ➤ (22 samples, 2.63%)</title><rect x="78.5629%" y="606" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="656" fg:w="22"/><text x="78.8129%" y="619.50">➤..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:187 (admm) (29 samples, 3.47%)</title><rect x="78.5629%" y="518" width="3.4731%" height="21" fill="rgb(255,222,222)" fg:x="656" fg:w="29"/><text x="78.8129%" y="531.50">/h..</text></g><g><title>            kkt_solve = kkt_system.solve(np.concatenate([-q + rho_vec * (zk - uk), b])) (29 samples, 3.47%)</title><rect x="78.5629%" y="540" width="3.4731%" height="21" fill="rgb(255,222,222)" fg:x="656" fg:w="29"/><text x="78.8129%" y="553.50"> ..</text></g><g class="running-frame"><title>➤ CPU ➤ (7 samples, 0.84%)</title><rect x="81.1976%" y="562" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="678" fg:w="7"/><text x="81.4476%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:46 (prox) (2 samples, 0.24%)</title><rect x="82.1557%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="686" fg:w="2"/><text x="82.4057%" y="619.50"></text></g><g><title>        new_scale = equil_scaling * self._scale (2 samples, 0.24%)</title><rect x="82.1557%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="686" fg:w="2"/><text x="82.4057%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="82.1557%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="686" fg:w="2"/><text x="82.4057%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:47 (prox) (2 samples, 0.24%)</title><rect x="82.3952%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="688" fg:w="2"/><text x="82.6452%" y="619.50"></text></g><g><title>        new_rho = rho / (self._weight * new_scale**2) (2 samples, 0.24%)</title><rect x="82.3952%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="688" fg:w="2"/><text x="82.6452%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="82.3952%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="688" fg:w="2"/><text x="82.6452%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:86 (prox_raw) (4 samples, 0.48%)</title><rect x="82.6347%" y="650" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="690" fg:w="4"/><text x="82.8847%" y="663.50"></text></g><g><title>        return np.maximum(v - 1 / rho, 0) - np.maximum(-v - 1 / rho, 0) (4 samples, 0.48%)</title><rect x="82.6347%" y="672" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="690" fg:w="4"/><text x="82.8847%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (4 samples, 0.48%)</title><rect x="82.6347%" y="694" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="690" fg:w="4"/><text x="82.8847%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:194 (admm) (13 samples, 1.56%)</title><rect x="82.0359%" y="518" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="685" fg:w="13"/><text x="82.2859%" y="531.50"></text></g><g><title>        zk1 = g.prox( (13 samples, 1.56%)</title><rect x="82.0359%" y="540" width="1.5569%" height="21" fill="rgb(255,231,231)" fg:x="685" fg:w="13"/><text x="82.2859%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:608 (prox) (12 samples, 1.44%)</title><rect x="82.1557%" y="562" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="686" fg:w="12"/><text x="82.4057%" y="575.50"></text></g><g><title>            output[start_index:end_index] = func.prox( (12 samples, 1.44%)</title><rect x="82.1557%" y="584" width="1.4371%" height="21" fill="rgb(255,232,232)" fg:x="686" fg:w="12"/><text x="82.4057%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:50 (prox) (8 samples, 0.96%)</title><rect x="82.6347%" y="606" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="690" fg:w="8"/><text x="82.8847%" y="619.50"></text></g><g><title>            self.prox_raw(new_rho, new_scale * v - self._shift) + self._shift (8 samples, 0.96%)</title><rect x="82.6347%" y="628" width="0.9581%" height="21" fill="rgb(255,235,235)" fg:x="690" fg:w="8"/><text x="82.8847%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (4 samples, 0.48%)</title><rect x="83.1138%" y="650" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="694" fg:w="4"/><text x="83.3638%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:195 (admm) (6 samples, 0.72%)</title><rect x="83.5928%" y="518" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="698" fg:w="6"/><text x="83.8428%" y="531.50"></text></g><g><title>            rho_vec / obj_scale, (6 samples, 0.72%)</title><rect x="83.5928%" y="540" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="698" fg:w="6"/><text x="83.8428%" y="553.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (6 samples, 0.72%)</title><rect x="83.5928%" y="562" width="0.7186%" height="21" fill="rgb(255,237,237)" fg:x="698" fg:w="6"/><text x="83.8428%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:197 (admm) (2 samples, 0.24%)</title><rect x="84.3114%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="704" fg:w="2"/><text x="84.5614%" y="531.50"></text></g><g><title>            alpha * xk1 + (1 - alpha) * zk + uk, (2 samples, 0.24%)</title><rect x="84.3114%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="704" fg:w="2"/><text x="84.5614%" y="553.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="84.3114%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="704" fg:w="2"/><text x="84.5614%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:201 (admm) (3 samples, 0.36%)</title><rect x="84.5509%" y="518" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="706" fg:w="3"/><text x="84.8009%" y="531.50"></text></g><g><title>        uk1 = uk + alpha * xk1 + (1 - alpha) * zk - zk1 (3 samples, 0.36%)</title><rect x="84.5509%" y="540" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="706" fg:w="3"/><text x="84.8009%" y="553.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="84.5509%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="706" fg:w="3"/><text x="84.8009%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/_methods.py:41 (_amax) (3 samples, 0.36%)</title><rect x="85.0299%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="710" fg:w="3"/><text x="85.2799%" y="619.50"></text></g><g><title>    return umr_maximum(a, axis, None, out, keepdims, initial, where) (3 samples, 0.36%)</title><rect x="85.0299%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="710" fg:w="3"/><text x="85.2799%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="85.0299%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="710" fg:w="3"/><text x="85.2799%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/linalg/linalg.py:2571 (norm) (4 samples, 0.48%)</title><rect x="85.0299%" y="562" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="710" fg:w="4"/><text x="85.2799%" y="575.50"></text></g><g><title>            return abs(x).max(axis=axis, keepdims=keepdims) (4 samples, 0.48%)</title><rect x="85.0299%" y="584" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="710" fg:w="4"/><text x="85.2799%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/linalg/linalg.py:2613 (norm) (2 samples, 0.24%)</title><rect x="85.5090%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="714" fg:w="2"/><text x="85.7590%" y="575.50"></text></g><g><title>            if col_axis &gt; row_axis: (2 samples, 0.24%)</title><rect x="85.5090%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="714" fg:w="2"/><text x="85.7590%" y="597.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="85.5090%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="714" fg:w="2"/><text x="85.7590%" y="619.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:621 (__matmul__) (2 samples, 0.24%)</title><rect x="85.7485%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="716" fg:w="2"/><text x="85.9985%" y="575.50"></text></g><g><title>        if isscalarlike(other): (2 samples, 0.24%)</title><rect x="85.7485%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="716" fg:w="2"/><text x="85.9985%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_sputils.py:213 (isscalarlike) (2 samples, 0.24%)</title><rect x="85.7485%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="716" fg:w="2"/><text x="85.9985%" y="619.50"></text></g><g><title>    return np.isscalar(x) or (isdense(x) and x.ndim == 0) (2 samples, 0.24%)</title><rect x="85.7485%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="716" fg:w="2"/><text x="85.9985%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:624 (__matmul__) (3 samples, 0.36%)</title><rect x="85.9880%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="718" fg:w="3"/><text x="86.2380%" y="575.50"></text></g><g><title>        return self._mul_dispatch(other) (3 samples, 0.36%)</title><rect x="85.9880%" y="584" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="718" fg:w="3"/><text x="86.2380%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:522 (_mul_dispatch) (3 samples, 0.36%)</title><rect x="85.9880%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="718" fg:w="3"/><text x="86.2380%" y="619.50"></text></g><g><title>                return self._mul_vector(other) (3 samples, 0.36%)</title><rect x="85.9880%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="718" fg:w="3"/><text x="86.2380%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:206 (admm) (16 samples, 1.92%)</title><rect x="84.9102%" y="518" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="709" fg:w="16"/><text x="85.1602%" y="531.50"></text></g><g><title>        r_prim = np.linalg.norm(A @ zk1 - b, ord=np.inf) (16 samples, 1.92%)</title><rect x="84.9102%" y="540" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="709" fg:w="16"/><text x="85.1602%" y="553.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (4 samples, 0.48%)</title><rect x="86.3473%" y="562" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="721" fg:w="4"/><text x="86.5973%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/linalg/linalg.py:2571 (norm) (3 samples, 0.36%)</title><rect x="86.8263%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="725" fg:w="3"/><text x="87.0763%" y="575.50"></text></g><g><title>            return abs(x).max(axis=axis, keepdims=keepdims) (3 samples, 0.36%)</title><rect x="86.8263%" y="584" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="725" fg:w="3"/><text x="87.0763%" y="597.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="86.8263%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="725" fg:w="3"/><text x="87.0763%" y="619.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:621 (__matmul__) (2 samples, 0.24%)</title><rect x="87.1856%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="575.50"></text></g><g><title>        if isscalarlike(other): (2 samples, 0.24%)</title><rect x="87.1856%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_sputils.py:213 (isscalarlike) (2 samples, 0.24%)</title><rect x="87.1856%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="619.50"></text></g><g><title>    return np.isscalar(x) or (isdense(x) and x.ndim == 0) (2 samples, 0.24%)</title><rect x="87.1856%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/numeric.py:1931 (isscalar) (2 samples, 0.24%)</title><rect x="87.1856%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="663.50"></text></g><g><title>    return (isinstance(element, generic) (2 samples, 0.24%)</title><rect x="87.1856%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="87.1856%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="728" fg:w="2"/><text x="87.4356%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:522 (_mul_dispatch) (3 samples, 0.36%)</title><rect x="87.4251%" y="606" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="730" fg:w="3"/><text x="87.6751%" y="619.50"></text></g><g><title>                return self._mul_vector(other) (3 samples, 0.36%)</title><rect x="87.4251%" y="628" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="730" fg:w="3"/><text x="87.6751%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:624 (__matmul__) (4 samples, 0.48%)</title><rect x="87.4251%" y="562" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="730" fg:w="4"/><text x="87.6751%" y="575.50"></text></g><g><title>        return self._mul_dispatch(other) (4 samples, 0.48%)</title><rect x="87.4251%" y="584" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="730" fg:w="4"/><text x="87.6751%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:163 (__init__) (3 samples, 0.36%)</title><rect x="88.0240%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="735" fg:w="3"/><text x="88.2740%" y="663.50"></text></g><g><title>                idx_dtype = self._get_index_dtype((row, col), maxval=max(self.shape), check_contents=True) (3 samples, 0.36%)</title><rect x="88.0240%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="735" fg:w="3"/><text x="88.2740%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:1289 (_get_index_dtype) (3 samples, 0.36%)</title><rect x="88.0240%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="735" fg:w="3"/><text x="88.2740%" y="707.50"></text></g><g><title>        return get_index_dtype(arrays, maxval, (check_contents and not self._is_array)) (3 samples, 0.36%)</title><rect x="88.0240%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="735" fg:w="3"/><text x="88.2740%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:166 (__init__) (2 samples, 0.24%)</title><rect x="88.3832%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="738" fg:w="2"/><text x="88.6332%" y="663.50"></text></g><g><title>                self.data = getdata(obj, copy=copy, dtype=dtype) (2 samples, 0.24%)</title><rect x="88.3832%" y="672" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="738" fg:w="2"/><text x="88.6332%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_sputils.py:144 (getdata) (2 samples, 0.24%)</title><rect x="88.3832%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="738" fg:w="2"/><text x="88.6332%" y="707.50"></text></g><g><title>    return data (2 samples, 0.24%)</title><rect x="88.3832%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="738" fg:w="2"/><text x="88.6332%" y="729.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="88.3832%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="738" fg:w="2"/><text x="88.6332%" y="751.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:1289 (_get_index_dtype) (2 samples, 0.24%)</title><rect x="88.7425%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="741" fg:w="2"/><text x="88.9925%" y="751.50"></text></g><g><title>        return get_index_dtype(arrays, maxval, (check_contents and not self._is_array)) (2 samples, 0.24%)</title><rect x="88.7425%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="741" fg:w="2"/><text x="88.9925%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:284 (_check) (3 samples, 0.36%)</title><rect x="88.7425%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="741" fg:w="3"/><text x="88.9925%" y="707.50"></text></g><g><title>        idx_dtype = self._get_index_dtype((self.row, self.col), maxval=max(self.shape)) (3 samples, 0.36%)</title><rect x="88.7425%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="741" fg:w="3"/><text x="88.9925%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:290 (_check) (2 samples, 0.24%)</title><rect x="89.2216%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="745" fg:w="2"/><text x="89.4716%" y="707.50"></text></g><g><title>            if self.row.max() &gt;= self.shape[0]: (2 samples, 0.24%)</title><rect x="89.2216%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="745" fg:w="2"/><text x="89.4716%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/_methods.py:41 (_amax) (2 samples, 0.24%)</title><rect x="89.2216%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="745" fg:w="2"/><text x="89.4716%" y="751.50"></text></g><g><title>    return umr_maximum(a, axis, None, out, keepdims, initial, where) (2 samples, 0.24%)</title><rect x="89.2216%" y="760" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="745" fg:w="2"/><text x="89.4716%" y="773.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="89.2216%" y="782" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="745" fg:w="2"/><text x="89.4716%" y="795.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:292 (_check) (2 samples, 0.24%)</title><rect x="89.4611%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="747" fg:w="2"/><text x="89.7111%" y="707.50"></text></g><g><title>            if self.col.max() &gt;= self.shape[1]: (2 samples, 0.24%)</title><rect x="89.4611%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="747" fg:w="2"/><text x="89.7111%" y="729.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="89.4611%" y="738" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="747" fg:w="2"/><text x="89.7111%" y="751.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:306 (transpose) (17 samples, 2.04%)</title><rect x="87.9042%" y="606" width="2.0359%" height="21" fill="rgb(255,228,228)" fg:x="734" fg:w="17"/><text x="88.1542%" y="619.50"></text></g><g><title>        return self.__class__((self.data, (self.col, self.row)), (17 samples, 2.04%)</title><rect x="87.9042%" y="628" width="2.0359%" height="21" fill="rgb(255,228,228)" fg:x="734" fg:w="17"/><text x="88.1542%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:204 (__init__) (11 samples, 1.32%)</title><rect x="88.6228%" y="650" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="740" fg:w="11"/><text x="88.8728%" y="663.50"></text></g><g><title>        self._check() (11 samples, 1.32%)</title><rect x="88.6228%" y="672" width="1.3174%" height="21" fill="rgb(255,232,232)" fg:x="740" fg:w="11"/><text x="88.8728%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:296 (_check) (2 samples, 0.24%)</title><rect x="89.7006%" y="694" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="749" fg:w="2"/><text x="89.9506%" y="707.50"></text></g><g><title>            if self.col.min() &lt; 0: (2 samples, 0.24%)</title><rect x="89.7006%" y="716" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="749" fg:w="2"/><text x="89.9506%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:727 (T) (18 samples, 2.16%)</title><rect x="87.9042%" y="562" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="734" fg:w="18"/><text x="88.1542%" y="575.50"></text></g><g><title>        return self.transpose() (18 samples, 2.16%)</title><rect x="87.9042%" y="584" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="734" fg:w="18"/><text x="88.1542%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:207 (admm) (30 samples, 3.59%)</title><rect x="86.8263%" y="518" width="3.5928%" height="21" fill="rgb(255,221,221)" fg:x="725" fg:w="30"/><text x="87.0763%" y="531.50">/h..</text></g><g><title>        r_dual = np.linalg.norm(P @ zk1 + q + A.T @ nuk1 + rho_vec * uk1, ord=np.inf) (30 samples, 3.59%)</title><rect x="86.8263%" y="540" width="3.5928%" height="21" fill="rgb(255,221,221)" fg:x="725" fg:w="30"/><text x="87.0763%" y="553.50"> ..</text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="90.0599%" y="562" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="752" fg:w="3"/><text x="90.3099%" y="575.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:593 (evaluate) (2 samples, 0.24%)</title><rect x="90.4192%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="755" fg:w="2"/><text x="90.6692%" y="619.50"></text></g><g><title>        output = np.zeros(np.asarray(v).shape) (2 samples, 0.24%)</title><rect x="90.4192%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="755" fg:w="2"/><text x="90.6692%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="90.4192%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="755" fg:w="2"/><text x="90.6692%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:43 (evaluate) (5 samples, 0.60%)</title><rect x="90.6587%" y="650" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="757" fg:w="5"/><text x="90.9087%" y="663.50"></text></g><g><title>        return self._weight * self.evaluate_raw(self._scale * v - self._shift) (5 samples, 0.60%)</title><rect x="90.6587%" y="672" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="757" fg:w="5"/><text x="90.9087%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (4 samples, 0.48%)</title><rect x="90.7784%" y="694" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="758" fg:w="4"/><text x="91.0284%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:598 (evaluate) (7 samples, 0.84%)</title><rect x="90.6587%" y="606" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="757" fg:w="7"/><text x="90.9087%" y="619.50"></text></g><g><title>            output[start_index:end_index] = func.evaluate(v[start_index:end_index]) (7 samples, 0.84%)</title><rect x="90.6587%" y="628" width="0.8383%" height="21" fill="rgb(255,236,236)" fg:x="757" fg:w="7"/><text x="90.9087%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="91.2575%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="762" fg:w="2"/><text x="91.5075%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:2313 (sum) (3 samples, 0.36%)</title><rect x="91.4970%" y="650" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="764" fg:w="3"/><text x="91.7470%" y="663.50"></text></g><g><title>    return _wrapreduction(a, np.add, &apos;sum&apos;, axis, dtype, out, keepdims=keepdims, (3 samples, 0.36%)</title><rect x="91.4970%" y="672" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="764" fg:w="3"/><text x="91.7470%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/numpy/core/fromnumeric.py:88 (_wrapreduction) (3 samples, 0.36%)</title><rect x="91.4970%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="764" fg:w="3"/><text x="91.7470%" y="707.50"></text></g><g><title>    return ufunc.reduce(obj, axis, dtype, out, **passkwargs) (3 samples, 0.36%)</title><rect x="91.4970%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="764" fg:w="3"/><text x="91.7470%" y="729.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="91.4970%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="764" fg:w="3"/><text x="91.7470%" y="751.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/proximal.py:600 (evaluate) (5 samples, 0.60%)</title><rect x="91.4970%" y="606" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="764" fg:w="5"/><text x="91.7470%" y="619.50"></text></g><g><title>        return np.sum(output) (5 samples, 0.60%)</title><rect x="91.4970%" y="628" width="0.5988%" height="21" fill="rgb(255,238,238)" fg:x="764" fg:w="5"/><text x="91.7470%" y="641.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (2 samples, 0.24%)</title><rect x="91.8563%" y="650" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="767" fg:w="2"/><text x="92.1063%" y="663.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:294 (nnz) (2 samples, 0.24%)</title><rect x="92.0958%" y="782" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="769" fg:w="2"/><text x="92.3458%" y="795.50"></text></g><g><title>        return self._getnnz() (2 samples, 0.24%)</title><rect x="92.0958%" y="804" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="769" fg:w="2"/><text x="92.3458%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:522 (_mul_dispatch) (3 samples, 0.36%)</title><rect x="92.0958%" y="694" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="769" fg:w="3"/><text x="92.3458%" y="707.50"></text></g><g><title>                return self._mul_vector(other) (3 samples, 0.36%)</title><rect x="92.0958%" y="716" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="769" fg:w="3"/><text x="92.3458%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:591 (_mul_vector) (3 samples, 0.36%)</title><rect x="92.0958%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="769" fg:w="3"/><text x="92.3458%" y="751.50"></text></g><g><title>        coo_matvec(self.nnz, self.row, self.col, self.data, other, result) (3 samples, 0.36%)</title><rect x="92.0958%" y="760" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="769" fg:w="3"/><text x="92.3458%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:163 (__init__) (3 samples, 0.36%)</title><rect x="92.5749%" y="738" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="773" fg:w="3"/><text x="92.8249%" y="751.50"></text></g><g><title>                idx_dtype = self._get_index_dtype((row, col), maxval=max(self.shape), check_contents=True) (3 samples, 0.36%)</title><rect x="92.5749%" y="760" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="773" fg:w="3"/><text x="92.8249%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:1289 (_get_index_dtype) (3 samples, 0.36%)</title><rect x="92.5749%" y="782" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="773" fg:w="3"/><text x="92.8249%" y="795.50"></text></g><g><title>        return get_index_dtype(arrays, maxval, (check_contents and not self._is_array)) (3 samples, 0.36%)</title><rect x="92.5749%" y="804" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="773" fg:w="3"/><text x="92.8249%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_sputils.py:170 (get_index_dtype) (2 samples, 0.24%)</title><rect x="92.9341%" y="870" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="776" fg:w="2"/><text x="93.1841%" y="883.50"></text></g><g><title>    int32max = np.int32(np.iinfo(np.int32).max) (2 samples, 0.24%)</title><rect x="92.9341%" y="892" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="776" fg:w="2"/><text x="93.1841%" y="905.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:284 (_check) (4 samples, 0.48%)</title><rect x="92.9341%" y="782" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="776" fg:w="4"/><text x="93.1841%" y="795.50"></text></g><g><title>        idx_dtype = self._get_index_dtype((self.row, self.col), maxval=max(self.shape)) (4 samples, 0.48%)</title><rect x="92.9341%" y="804" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="776" fg:w="4"/><text x="93.1841%" y="817.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:1289 (_get_index_dtype) (4 samples, 0.48%)</title><rect x="92.9341%" y="826" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="776" fg:w="4"/><text x="93.1841%" y="839.50"></text></g><g><title>        return get_index_dtype(arrays, maxval, (check_contents and not self._is_array)) (4 samples, 0.48%)</title><rect x="92.9341%" y="848" width="0.4790%" height="21" fill="rgb(255,239,239)" fg:x="776" fg:w="4"/><text x="93.1841%" y="861.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:294 (_check) (3 samples, 0.36%)</title><rect x="93.5329%" y="782" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="781" fg:w="3"/><text x="93.7829%" y="795.50"></text></g><g><title>            if self.row.min() &lt; 0: (3 samples, 0.36%)</title><rect x="93.5329%" y="804" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="781" fg:w="3"/><text x="93.7829%" y="817.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (3 samples, 0.36%)</title><rect x="93.5329%" y="826" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="781" fg:w="3"/><text x="93.7829%" y="839.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:204 (__init__) (10 samples, 1.20%)</title><rect x="92.9341%" y="738" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="776" fg:w="10"/><text x="93.1841%" y="751.50"></text></g><g><title>        self._check() (10 samples, 1.20%)</title><rect x="92.9341%" y="760" width="1.1976%" height="21" fill="rgb(255,233,233)" fg:x="776" fg:w="10"/><text x="93.1841%" y="773.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:608 (_rmul_dispatch) (18 samples, 2.16%)</title><rect x="92.0958%" y="650" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="769" fg:w="18"/><text x="92.3458%" y="663.50"></text></g><g><title>            ret = self.transpose()._mul_dispatch(tr) (18 samples, 2.16%)</title><rect x="92.0958%" y="672" width="2.1557%" height="21" fill="rgb(255,228,228)" fg:x="769" fg:w="18"/><text x="92.3458%" y="685.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_coo.py:306 (transpose) (15 samples, 1.80%)</title><rect x="92.4551%" y="694" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="772" fg:w="15"/><text x="92.7051%" y="707.50"></text></g><g><title>        return self.__class__((self.data, (self.col, self.row)), (15 samples, 1.80%)</title><rect x="92.4551%" y="716" width="1.7964%" height="21" fill="rgb(255,229,229)" fg:x="772" fg:w="15"/><text x="92.7051%" y="729.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/util.py:93 (evaluate_objective) (33 samples, 3.95%)</title><rect x="90.4192%" y="562" width="3.9521%" height="21" fill="rgb(255,220,220)" fg:x="755" fg:w="33"/><text x="90.6692%" y="575.50">/ho..</text></g><g><title>    return (0.5 * zk1 @ P @ zk1 + q @ zk1 + r) / obj_scale + g.evaluate( (33 samples, 3.95%)</title><rect x="90.4192%" y="584" width="3.9521%" height="21" fill="rgb(255,220,220)" fg:x="755" fg:w="33"/><text x="90.6692%" y="597.50">  ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/scipy/sparse/_base.py:630 (__rmatmul__) (19 samples, 2.28%)</title><rect x="92.0958%" y="606" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="769" fg:w="19"/><text x="92.3458%" y="619.50"></text></g><g><title>        return self._rmul_dispatch(other) (19 samples, 2.28%)</title><rect x="92.0958%" y="628" width="2.2754%" height="21" fill="rgb(255,227,227)" fg:x="769" fg:w="19"/><text x="92.3458%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:208 (admm) (34 samples, 4.07%)</title><rect x="90.4192%" y="518" width="4.0719%" height="21" fill="rgb(255,219,219)" fg:x="755" fg:w="34"/><text x="90.6692%" y="531.50">/ho..</text></g><g><title>        obj_val = util.evaluate_objective(P, q, r, g, zk1, obj_scale, equil_scaling) (34 samples, 4.07%)</title><rect x="90.4192%" y="540" width="4.0719%" height="21" fill="rgb(255,219,219)" fg:x="755" fg:w="34"/><text x="90.6692%" y="553.50">  ..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:90 (decompose) (143 samples, 17.13%)</title><rect x="77.8443%" y="386" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="399.50">/home/ec2-user/.ven..</text></g><g><title>            result = self._solve_qss(canonical_form, **kwargs) (143 samples, 17.13%)</title><rect x="77.8443%" y="408" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="421.50">            result..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:132 (_solve_qss) (143 samples, 17.13%)</title><rect x="77.8443%" y="430" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="443.50">/home/ec2-user/.ven..</text></g><g><title>        objval, soln = solver.solve(**solver_kwargs) (143 samples, 17.13%)</title><rect x="77.8443%" y="452" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="465.50">        objval, so..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/qss.py:288 (solve) (143 samples, 17.13%)</title><rect x="77.8443%" y="474" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="487.50">/home/ec2-user/.ven..</text></g><g><title>                self._iterates = admm.admm( (143 samples, 17.13%)</title><rect x="77.8443%" y="496" width="17.1257%" height="21" fill="rgb(255,187,187)" fg:x="650" fg:w="143"/><text x="78.0943%" y="509.50">                se..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/qss/admm.py:246 (admm) (3 samples, 0.36%)</title><rect x="94.6108%" y="518" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="790" fg:w="3"/><text x="94.8608%" y="531.50"></text></g><g><title>            refactorization_count, total_refactorization_time = update_rho( (3 samples, 0.36%)</title><rect x="94.6108%" y="540" width="0.3593%" height="21" fill="rgb(255,241,241)" fg:x="790" fg:w="3"/><text x="94.8608%" y="553.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:396 (run_pipeline) (149 samples, 17.84%)</title><rect x="77.2455%" y="166" width="17.8443%" height="21" fill="rgb(255,186,186)" fg:x="645" fg:w="149"/><text x="77.4955%" y="179.50">/home/ec2-user/solar..</text></g><g><title>            self.capacity_clustering(solver=solver) (149 samples, 17.84%)</title><rect x="77.2455%" y="188" width="17.8443%" height="21" fill="rgb(255,186,186)" fg:x="645" fg:w="149"/><text x="77.4955%" y="201.50">            self.ca..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:890 (capacity_clustering) (149 samples, 17.84%)</title><rect x="77.2455%" y="210" width="17.8443%" height="21" fill="rgb(255,186,186)" fg:x="645" fg:w="149"/><text x="77.4955%" y="223.50">/home/ec2-user/solar..</text></g><g><title>            self.capacity_analysis.run( (149 samples, 17.84%)</title><rect x="77.2455%" y="232" width="17.8443%" height="21" fill="rgb(255,186,186)" fg:x="645" fg:w="149"/><text x="77.4955%" y="245.50">            self.ca..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/capacity_change.py:45 (run) (145 samples, 17.37%)</title><rect x="77.7246%" y="254" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="267.50">/home/ec2-user/solar..</text></g><g><title>            s1, s2, s3 = l1_l1d1_l2d2p365( (145 samples, 17.37%)</title><rect x="77.7246%" y="276" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="289.50">            s1, s2,..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:214 (l1_l1d1_l2d2p365) (145 samples, 17.37%)</title><rect x="77.7246%" y="298" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="311.50">/home/ec2-user/solar..</text></g><g><title>        res = _osd_l1_l1d1_l2d2p365( (145 samples, 17.37%)</title><rect x="77.7246%" y="320" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="333.50">        res = _osd_..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:233 (_osd_l1_l1d1_l2d2p365) (145 samples, 17.37%)</title><rect x="77.7246%" y="342" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="355.50">/home/ec2-user/solar..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose, eps_abs=1e-6, eps_rel=1e-6) (145 samples, 17.37%)</title><rect x="77.7246%" y="364" width="17.3653%" height="21" fill="rgb(255,187,187)" fg:x="649" fg:w="145"/><text x="77.9746%" y="377.50">    problem.decompo..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1056 (_solve) (2 samples, 0.24%)</title><rect x="95.0898%" y="518" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="531.50"></text></g><g><title>        data, solving_chain, inverse_data = self.get_problem_data( (2 samples, 0.24%)</title><rect x="95.0898%" y="540" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:683 (get_problem_data) (2 samples, 0.24%)</title><rect x="95.0898%" y="562" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="575.50"></text></g><g><title>            data, inverse_data = solving_chain.apply(self, verbose) (2 samples, 0.24%)</title><rect x="95.0898%" y="584" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/chain.py:76 (apply) (2 samples, 0.24%)</title><rect x="95.0898%" y="606" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="619.50"></text></g><g><title>            problem, inv = r.apply(problem) (2 samples, 0.24%)</title><rect x="95.0898%" y="628" width="0.2395%" height="21" fill="rgb(255,242,242)" fg:x="794" fg:w="2"/><text x="95.3398%" y="641.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/sunrise_sunset.py:34 (rise_set_smoothed) (16 samples, 1.92%)</title><rect x="95.0898%" y="254" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="267.50"></text></g><g><title>    sr_smoothed = tl1_l2d2p365( (16 samples, 1.92%)</title><rect x="95.0898%" y="276" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="289.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (16 samples, 1.92%)</title><rect x="95.0898%" y="298" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="311.50"></text></g><g><title>        res = _osd_tl1_l2d2p365( (16 samples, 1.92%)</title><rect x="95.0898%" y="320" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="333.50"></text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (16 samples, 1.92%)</title><rect x="95.0898%" y="342" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="355.50"></text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (16 samples, 1.92%)</title><rect x="95.0898%" y="364" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="377.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (16 samples, 1.92%)</title><rect x="95.0898%" y="386" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="399.50"></text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (16 samples, 1.92%)</title><rect x="95.0898%" y="408" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="421.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (16 samples, 1.92%)</title><rect x="95.0898%" y="430" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="443.50"></text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (16 samples, 1.92%)</title><rect x="95.0898%" y="452" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="465.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (16 samples, 1.92%)</title><rect x="95.0898%" y="474" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="487.50"></text></g><g><title>        return solve_func(self, *args, **kwargs) (16 samples, 1.92%)</title><rect x="95.0898%" y="496" width="1.9162%" height="21" fill="rgb(255,229,229)" fg:x="794" fg:w="16"/><text x="95.3398%" y="509.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (14 samples, 1.68%)</title><rect x="95.3293%" y="518" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="531.50"></text></g><g><title>        solution = solving_chain.solve_via_data( (14 samples, 1.68%)</title><rect x="95.3293%" y="540" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="553.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (14 samples, 1.68%)</title><rect x="95.3293%" y="562" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="575.50"></text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (14 samples, 1.68%)</title><rect x="95.3293%" y="584" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="597.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (14 samples, 1.68%)</title><rect x="95.3293%" y="606" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="619.50"></text></g><g><title>        results = solver.solve() (14 samples, 1.68%)</title><rect x="95.3293%" y="628" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="641.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (14 samples, 1.68%)</title><rect x="95.3293%" y="650" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="663.50"></text></g><g><title>        results = self._model.solve() (14 samples, 1.68%)</title><rect x="95.3293%" y="672" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="685.50"></text></g><g class="running-frame"><title>➤ CPU ➤ (14 samples, 1.68%)</title><rect x="95.3293%" y="694" width="1.6766%" height="21" fill="rgb(255,230,230)" fg:x="796" fg:w="14"/><text x="95.5793%" y="707.50"></text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/qp_solvers/osqp_qpif.py:106 (solve_via_data) (22 samples, 2.63%)</title><rect x="97.2455%" y="606" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="22"/><text x="97.4955%" y="619.50">/..</text></g><g><title>        results = solver.solve() (22 samples, 2.63%)</title><rect x="97.2455%" y="628" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="22"/><text x="97.4955%" y="641.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/osqp/interface.py:235 (solve) (22 samples, 2.63%)</title><rect x="97.2455%" y="650" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="22"/><text x="97.4955%" y="663.50">/..</text></g><g><title>        results = self._model.solve() (22 samples, 2.63%)</title><rect x="97.2455%" y="672" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="22"/><text x="97.4955%" y="685.50">..</text></g><g class="running-frame"><title>➤ CPU ➤ (22 samples, 2.63%)</title><rect x="97.2455%" y="694" width="2.6347%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="22"/><text x="97.4955%" y="707.50">➤..</text></g><g><title>all (835 samples, 100%)</title><rect x="0.0000%" y="100" width="100.0000%" height="21" fill="rgb(255,100,100)" fg:x="0" fg:w="835"/><text x="0.2500%" y="113.50"></text></g><g><title>/home/ec2-user/solar-data-tools/profiling.py:35 (&lt;module&gt;) (707 samples, 84.67%)</title><rect x="15.3293%" y="122" width="84.6707%" height="21" fill="rgb(255,112,112)" fg:x="128" fg:w="707"/><text x="15.5793%" y="135.50">/home/ec2-user/solar-data-tools/profiling.py:35 (&lt;module&gt;)</text></g><g><title>                dh.run_pipeline(power_col=&apos;ac_power_01&apos;) (707 samples, 84.67%)</title><rect x="15.3293%" y="144" width="84.6707%" height="21" fill="rgb(255,112,112)" fg:x="128" fg:w="707"/><text x="15.5793%" y="157.50">                dh.run_pipeline(power_col=&apos;ac_power_01&apos;)</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/data_handler.py:472 (run_pipeline) (41 samples, 4.91%)</title><rect x="95.0898%" y="166" width="4.9102%" height="21" fill="rgb(255,216,216)" fg:x="794" fg:w="41"/><text x="95.3398%" y="179.50">/hom..</text></g><g><title>        self.daytime_analysis.calculate_times(self.filled_data_matrix, solver=solver_convex) (41 samples, 4.91%)</title><rect x="95.0898%" y="188" width="4.9102%" height="21" fill="rgb(255,216,216)" fg:x="794" fg:w="41"/><text x="95.3398%" y="201.50">   ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/algorithms/sunrise_sunset_estimation.py:67 (calculate_times) (41 samples, 4.91%)</title><rect x="95.0898%" y="210" width="4.9102%" height="21" fill="rgb(255,216,216)" fg:x="794" fg:w="41"/><text x="95.3398%" y="223.50">/hom..</text></g><g><title>        smoothed = rise_set_smoothed( (41 samples, 4.91%)</title><rect x="95.0898%" y="232" width="4.9102%" height="21" fill="rgb(255,216,216)" fg:x="794" fg:w="41"/><text x="95.3398%" y="245.50">   ..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/sunrise_sunset.py:37 (rise_set_smoothed) (25 samples, 2.99%)</title><rect x="97.0060%" y="254" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="810" fg:w="25"/><text x="97.2560%" y="267.50">/..</text></g><g><title>    ss_smoothed = tl1_l2d2p365( (25 samples, 2.99%)</title><rect x="97.0060%" y="276" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="810" fg:w="25"/><text x="97.2560%" y="289.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/signal_decompositions.py:157 (tl1_l2d2p365) (25 samples, 2.99%)</title><rect x="97.0060%" y="298" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="810" fg:w="25"/><text x="97.2560%" y="311.50">/..</text></g><g><title>        res = _osd_tl1_l2d2p365( (25 samples, 2.99%)</title><rect x="97.0060%" y="320" width="2.9940%" height="21" fill="rgb(255,224,224)" fg:x="810" fg:w="25"/><text x="97.2560%" y="333.50">..</text></g><g><title>/home/ec2-user/solar-data-tools/solardatatools/_osd_signal_decompositions.py:163 (_osd_tl1_l2d2p365) (24 samples, 2.87%)</title><rect x="97.1257%" y="342" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="355.50">/..</text></g><g><title>    problem.decompose(solver=solver, verbose=verbose) (24 samples, 2.87%)</title><rect x="97.1257%" y="364" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="377.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:93 (decompose) (24 samples, 2.87%)</title><rect x="97.1257%" y="386" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="399.50">/..</text></g><g><title>            result = self._solve_cvx(canonical_form, solver, **kwargs) (24 samples, 2.87%)</title><rect x="97.1257%" y="408" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="421.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/gfosd/problem.py:200 (_solve_cvx) (24 samples, 2.87%)</title><rect x="97.1257%" y="430" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="443.50">/..</text></g><g><title>        cvx_prob.solve(solver=solver, **solver_kwargs) (24 samples, 2.87%)</title><rect x="97.1257%" y="452" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="465.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:495 (solve) (24 samples, 2.87%)</title><rect x="97.1257%" y="474" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="487.50">/..</text></g><g><title>        return solve_func(self, *args, **kwargs) (24 samples, 2.87%)</title><rect x="97.1257%" y="496" width="2.8743%" height="21" fill="rgb(255,224,224)" fg:x="811" fg:w="24"/><text x="97.3757%" y="509.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/problems/problem.py:1066 (_solve) (23 samples, 2.75%)</title><rect x="97.2455%" y="518" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="23"/><text x="97.4955%" y="531.50">/..</text></g><g><title>        solution = solving_chain.solve_via_data( (23 samples, 2.75%)</title><rect x="97.2455%" y="540" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="23"/><text x="97.4955%" y="553.50">..</text></g><g><title>/home/ec2-user/.venv/lib64/python3.9/site-packages/cvxpy/reductions/solvers/solving_chain.py:423 (solve_via_data) (23 samples, 2.75%)</title><rect x="97.2455%" y="562" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="23"/><text x="97.4955%" y="575.50">/..</text></g><g><title>        return self.solver.solve_via_data(data, warm_start, verbose, (23 samples, 2.75%)</title><rect x="97.2455%" y="584" width="2.7545%" height="21" fill="rgb(255,225,225)" fg:x="812" fg:w="23"/><text x="97.4955%" y="597.50">..</text></g></svg><style type="text/css">
.waiting-frame rect { fill: #ffb264; }
.dead-frame rect, .unstarted-frame rect { fill-opacity: 0.3; fill: white; }
.running-frame rect { fill: #b2b2ff; }
</style></svg>